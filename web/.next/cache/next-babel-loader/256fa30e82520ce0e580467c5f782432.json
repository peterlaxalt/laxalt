{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/pages/projects/dharma.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Core\nimport React, { Component } from \"react\"; // Utils\n\nimport dynamic from \"next/dynamic\"; // Theme\n\nimport { Theme } from \"../../constants/Theme\"; // Types\n\nimport { createGlobalStyle } from \"styled-components\";\nimport { InteractiveFrameHeader } from \"../../components/_interactive/InteractiveFrameHeader\";\nconst P5Wrapper = dynamic(() => import(\"react-p5-wrapper\"), {\n  loading: () => __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Loading...\"),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-p5-wrapper\")],\n    modules: [\"react-p5-wrapper\"]\n  }\n});\n\nclass P5Page extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"renderP5\", filename => {\n      const sketch = require(`../../sketches/p5/${filename}`).default(this.state.windowWidth, this.state.windowHeight, 1, this.state.dharmaTheme);\n\n      return __jsx(P5Wrapper, {\n        sketch: sketch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    });\n\n    this.state = {\n      domLoaded: false,\n      windowWidth: 0,\n      windowHeight: 0,\n      dharmaTheme: {\n        background: Theme.Color.Deepsea,\n        primary: Theme.Color.White,\n        secondary: Theme.Color.Clay,\n        foreground: Theme.Color.White\n      }\n    };\n    this.updateTheme = this.updateTheme.bind(this);\n  }\n\n  componentDidMount() {\n    if (\"undefined\") {\n      this.setState({\n        windowWidth: window.innerWidth - 80,\n        windowHeight: window.innerHeight - 80,\n        domLoaded: true\n      });\n    }\n  }\n\n  updateTheme() {\n    this.setState(_objectSpread({}, this.state, {\n      dharmaTheme: {\n        background: Theme.Color.Galaxy,\n        primary: Theme.Color.Sunlight,\n        secondary: Theme.Color.Clay,\n        foreground: Theme.Color.Sunlight\n      }\n    }));\n  }\n\n  render() {\n    const GlobalScrollLock = createGlobalStyle`\n      body, html {\n        overflow: hidden;\n      }\n    `;\n    return __jsx(React.Fragment, null, __jsx(GlobalScrollLock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      style: {\n        position: \"fixed\",\n        right: 100,\n        bottom: 100,\n        zIndex: 999,\n        background: \"red\",\n        color: \"white\",\n        padding: 15\n      },\n      onClick: () => this.updateTheme(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Change Color\"), __jsx(InteractiveFrameHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), this.state.domLoaded && this.state.windowHeight > 10 && this.state.windowWidth > 10 ? __jsx(\"div\", {\n      className: \"dharma-container\",\n      style: {\n        width: \"100vw\",\n        height: \"100vh\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.renderP5(\"dharma\")) : null);\n  }\n\n}\n\nexport default P5Page;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/pages/projects/dharma.tsx"],"names":["React","Component","dynamic","Theme","createGlobalStyle","InteractiveFrameHeader","P5Wrapper","loading","ssr","P5Page","constructor","props","filename","sketch","require","default","state","windowWidth","windowHeight","dharmaTheme","domLoaded","background","Color","Deepsea","primary","White","secondary","Clay","foreground","updateTheme","bind","componentDidMount","setState","window","innerWidth","innerHeight","Galaxy","Sunlight","render","GlobalScrollLock","position","right","bottom","zIndex","color","padding","width","height","overflow","display","justifyContent","alignItems","renderP5"],"mappings":"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","sourcesContent":["// Core\nimport React, { Component } from \"react\";\n\n// Utils\nimport dynamic from \"next/dynamic\";\n\n// Theme\nimport { Theme } from \"../../constants/Theme\";\n\n// Types\nimport { LXLT_GLSL_Canvas } from \"../../sketches/p5/glsl\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { InteractiveFrameHeader } from \"../../components/_interactive/InteractiveFrameHeader\";\nimport { LXLT_DharmaTheme } from \"../../sketches/p5/dharma\";\n\n// Begin Component\n// __________________________________________________________________________\n\ntype LXLT_P5Wrapper = any;\n\ntype LXLT_P5Page = {};\ntype LXLT_P5Page_State = {\n  domLoaded: boolean;\n  windowWidth: number;\n  windowHeight: number;\n  dharmaTheme: LXLT_DharmaTheme;\n};\n\nconst P5Wrapper: LXLT_P5Wrapper = dynamic(import(\"react-p5-wrapper\"), {\n  loading: () => <p>Loading...</p>,\n  ssr: false,\n});\n\nclass P5Page extends Component<LXLT_P5Page, LXLT_P5Page_State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      domLoaded: false,\n      windowWidth: 0,\n      windowHeight: 0,\n      dharmaTheme: {\n        background: Theme.Color.Deepsea,\n        primary: Theme.Color.White,\n        secondary: Theme.Color.Clay,\n        foreground: Theme.Color.White,\n      },\n    };\n\n    this.updateTheme = this.updateTheme.bind(this);\n  }\n\n  componentDidMount() {\n    if (typeof window) {\n      this.setState({\n        windowWidth: window.innerWidth - 80,\n        windowHeight: window.innerHeight - 80,\n        domLoaded: true,\n      });\n    }\n  }\n\n  renderP5 = (filename: string) => {\n    const sketch: LXLT_GLSL_Canvas = require(`../../sketches/p5/${filename}`).default(\n      this.state.windowWidth,\n      this.state.windowHeight,\n      1,\n      this.state.dharmaTheme\n    );\n\n    return <P5Wrapper sketch={sketch} />;\n  };\n\n  updateTheme() {\n    this.setState({\n      ...this.state,\n      dharmaTheme: {\n        background: Theme.Color.Galaxy,\n        primary: Theme.Color.Sunlight,\n        secondary: Theme.Color.Clay,\n        foreground: Theme.Color.Sunlight,\n      },\n    });\n  }\n\n  render() {\n    const GlobalScrollLock = createGlobalStyle`\n      body, html {\n        overflow: hidden;\n      }\n    `;\n\n    return (\n      <>\n        <GlobalScrollLock />\n        <button\n          style={{\n            position: \"fixed\",\n            right: 100,\n            bottom: 100,\n            zIndex: 999,\n            background: \"red\",\n            color: \"white\",\n            padding: 15,\n          }}\n          onClick={() => this.updateTheme()}\n        >\n          Change Color\n        </button>\n\n        <InteractiveFrameHeader />\n        {this.state.domLoaded &&\n        this.state.windowHeight > 10 &&\n        this.state.windowWidth > 10 ? (\n          <div\n            className=\"dharma-container\"\n            style={{\n              width: \"100vw\",\n              height: \"100vh\",\n              overflow: \"hidden\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            {this.renderP5(\"dharma\")}\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default P5Page;\n"]},"metadata":{},"sourceType":"module"}