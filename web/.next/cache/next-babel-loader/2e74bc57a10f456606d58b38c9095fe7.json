{"ast":null,"code":"import _classCallCheck from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// Core\nimport * as THREE from \"three\"; // Settings\n\n// Textures\nimport { EffectComposer, RenderPass, EffectPass } from \"postprocessing\"; // Textures\n\nimport { TouchTexture } from \"./water-distort/TouchTexture\";\nimport WaterEffect from \"./water-distort/WaterEffect\";\nimport { hexToRGB } from \"../../utils/hexToRGB\"; // Begin Component\n// __________________________________________________________________________\n\nexport var ThreeWaterCanvasClass = /*#__PURE__*/function () {\n  // ______________________________\n  // Types\n  // ______________________________\n  // Constructor\n  function ThreeWaterCanvasClass(options) {\n    _classCallCheck(this, ThreeWaterCanvasClass);\n\n    _defineProperty(this, \"touchTexture\", void 0);\n\n    _defineProperty(this, \"waterEffect\", void 0);\n\n    _defineProperty(this, \"renderer\", void 0);\n\n    _defineProperty(this, \"camera\", void 0);\n\n    _defineProperty(this, \"scene\", void 0);\n\n    _defineProperty(this, \"composer\", void 0);\n\n    _defineProperty(this, \"clock\", void 0);\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"mesh\", void 0);\n\n    _defineProperty(this, \"canvasElement\", void 0);\n\n    _defineProperty(this, \"geometry\", void 0);\n\n    this.touchTexture = new TouchTexture({\n      debug: false\n    });\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: false,\n      alpha: true\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.domElement.id = \"three_canvas\";\n    options.canvasContainer.append(this.renderer.domElement); // Scene\n\n    this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 10000);\n    this.camera.position.z = 50;\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(\"\".concat(hexToRGB(window.laxaltUniversalTheme.background, 1)));\n    this.canvasElement = options.canvasElement;\n    this.geometry = new THREE.PlaneBufferGeometry(60, 35, 1, 1);\n    this.material = new THREE.MeshBasicMaterial();\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.material.map = new THREE.CanvasTexture(this.canvasElement);\n    this.tick = this.tick.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this); // Post Processing\n\n    this.composer = new EffectComposer(this.renderer);\n    this.clock = new THREE.Clock();\n    this.init();\n  }\n\n  _createClass(ThreeWaterCanvasClass, [{\n    key: \"initComposer\",\n    value: function initComposer() {\n      var renderPass = new RenderPass(this.scene, this.camera);\n      this.waterEffect = new WaterEffect({\n        texture: this.touchTexture.texture\n      });\n      var waterPass = new EffectPass(this.camera, this.waterEffect);\n      renderPass.renderToScreen = false;\n      waterPass.renderToScreen = true;\n      this.composer.addPass(renderPass);\n      this.composer.addPass(waterPass);\n    }\n  }, {\n    key: \"watchPlane\",\n    value: function watchPlane() {\n      window.addEventListener(\"mousemove\", this.onMouseMove);\n      this.scene.add(this.mesh);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.initComposer();\n      this.watchPlane();\n      this.tick();\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(ev) {\n      var point = {\n        x: ev.clientX / window.innerWidth,\n        y: ev.clientY / window.innerHeight\n      };\n      this.touchTexture.addPoint(point);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.material.map.needsUpdate = true;\n      this.scene.background = new THREE.Color(\"\".concat(hexToRGB(window.laxaltUniversalTheme.background, 1)));\n      this.composer.render(this.clock.getDelta());\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      this.render();\n      this.touchTexture.update();\n      requestAnimationFrame(this.tick);\n    }\n  }]);\n\n  return ThreeWaterCanvasClass;\n}();\nexport var ThreeWaterCanvas = function ThreeWaterCanvas(canvasContainer, canvasElement) {\n  if (!document.querySelector(\"#three_canvas\")) {\n    var myWaterCanvas = new ThreeWaterCanvasClass({\n      canvasContainer: canvasContainer,\n      canvasElement: canvasElement\n    });\n    return myWaterCanvas;\n  } else {\n    document.querySelector(\"#three_canvas\").remove();\n\n    var _myWaterCanvas = new ThreeWaterCanvasClass({\n      canvasContainer: canvasContainer,\n      canvasElement: canvasElement\n    });\n\n    return _myWaterCanvas;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}