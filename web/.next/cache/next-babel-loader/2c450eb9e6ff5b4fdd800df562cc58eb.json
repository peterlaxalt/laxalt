{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n// Core\nimport React, { useContext } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\nimport { ColorContext } from \"../../constants/styles/Color\";\nimport { CssUtils } from \"../../constants/styles/CssUtils\";\nimport { Theme } from \"../../constants/Theme\";\nimport { ThemePickerClassName, ThemePickerStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name ThemePickerWithHook\n * @author Peter Laxalt\n *\n */\nexport class ThemePickerWithHook extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTheme: {\n        name: \"default\",\n        primary: Theme.Color.Primary,\n        secondary: Theme.Color.Secondary,\n        background: Theme.Color.Background,\n        foreground: Theme.Color.Text\n      },\n      availableThemes: [{\n        name: \"default\",\n        primary: Theme.Color.Primary,\n        secondary: Theme.Color.Secondary,\n        background: Theme.Color.Background,\n        foreground: Theme.Color.Primary\n      }, {\n        name: \"galaxy\",\n        primary: \"#FFF8DC\",\n        secondary: \"#FFF8DC\",\n        background: Theme.Color.Galaxy,\n        foreground: \"#FFF8DC\"\n      }, {\n        name: \"salmon\",\n        primary: \"#000000\",\n        secondary: \"#000000\",\n        background: \"#FF8760\",\n        foreground: \"#000000\"\n      }, {\n        name: \"lemon\",\n        primary: \"#003eff\",\n        secondary: \"#003eff\",\n        background: \"#F4FF5E\",\n        foreground: \"#003eff\"\n      }, {\n        name: \"goldenrod\",\n        primary: \"#393349\",\n        secondary: \"#393349\",\n        background: \"#DAA520\",\n        foreground: \"#393349\"\n      }, {\n        name: \"cadetblue\",\n        primary: \"#003eff\",\n        secondary: \"#003eff\",\n        background: \"#ffb5f9\",\n        foreground: \"#003eff\"\n      }, {\n        name: \"orangered\",\n        primary: \"#FFF8DC\",\n        secondary: \"#FFF8DC\",\n        background: \"#FF4500\",\n        foreground: \"#FFF8DC\"\n      }]\n    };\n    this.setNewTheme = this.setNewTheme.bind(this);\n  }\n\n  componentDidMount() {\n    if (\"undefined\") {\n      window.laxaltUniversalTheme = this.state.activeTheme;\n      __DEBUG__ && console.log(\"ðŸŽ¨ theme set\", window.laxaltUniversalTheme);\n    }\n  }\n\n  setNewTheme(theme) {\n    // const { setTheme } = this.props;\n    this.setState({\n      activeTheme: theme\n    });\n\n    if (\"undefined\") {\n      window.laxaltUniversalTheme = theme;\n    } // setTheme(theme);\n\n  }\n\n  render() {\n    let {\n      activeTheme,\n      availableThemes\n    } = this.state;\n    const SetGlobalTheme = createGlobalStyle`\n      ${activeTheme ? CssUtils.CreateTheme(activeTheme.primary, activeTheme.secondary, activeTheme.background, activeTheme.foreground) : \"\"}\n    `;\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [activeTheme && activeTheme.name !== \"default\" ? /*#__PURE__*/_jsx(SetGlobalTheme, {}) : null, /*#__PURE__*/_jsx(ThemePickerStyle, {\n        className: `${ThemePickerClassName}`,\n        children: availableThemes ? availableThemes.map((themeItem, idx) => {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: `${ThemePickerClassName}__option ${ThemePickerClassName}__option--${themeItem.name === activeTheme.name ? \"active\" : \"inactive\"}`,\n            onClick: () => this.setNewTheme(themeItem),\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: `${ThemePickerClassName}__option__el ${ThemePickerClassName}__option__el--primary`,\n              style: {\n                backgroundColor: themeItem.background,\n                border: `1px solid ${themeItem.foreground}`\n              }\n            }), /*#__PURE__*/_jsx(\"span\", {\n              className: `${ThemePickerClassName}__option__el ${ThemePickerClassName}__option__el--secondary`,\n              style: {\n                backgroundColor: themeItem.foreground\n              }\n            })]\n          }, idx);\n        }) : null\n      })]\n    });\n  }\n\n}\nexport const ThemePicker = () => {\n  const {\n    setTheme\n  } = useContext(ColorContext);\n  return /*#__PURE__*/_jsx(ThemePickerWithHook, {\n    setTheme: setTheme\n  });\n};","map":null,"metadata":{},"sourceType":"module"}