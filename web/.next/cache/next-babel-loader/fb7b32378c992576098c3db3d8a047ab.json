{"ast":null,"code":"var _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/InteractiveFrameHeader/InteractiveFrameHeader.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React, { Component } from \"react\"; // Types\n\n// Components\nimport Link from \"next/link\";\nimport { LayeredSidebar } from \"../LayeredSidebar\";\nimport { ThemePicker } from \"../ThemePicker\"; // Styles\n\nimport { InteractiveFillBarsClassName, InteractiveFillBarsStyle, InteractiveFrameHeaderClassName, InteractiveFrameHeaderStyle, InteractiveLogotypeClassName, InteractiveLogotypeStyle, InteractiveOverlayNavigationClassName, InteractiveOverlayNavigationStyle } from \"./styles.scss\";\nimport { LayeredSidebarClassName } from \"../LayeredSidebar/styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nconst FrameItems = () => {\n  let items = [{\n    label: \"Studio\",\n    href: \"/sample\"\n  }, {\n    label: \"Art\",\n    href: \"/sample\"\n  }, {\n    label: \"Design\",\n    href: \"/sample\"\n  }, {\n    label: \"Strategy\",\n    href: \"/sample\"\n  }, {\n    label: \"Interactive\",\n    href: \"/sample\"\n  }, {\n    label: \"Murals\",\n    href: \"/sample\"\n  }, {\n    label: \"Code\",\n    href: \"/sample\"\n  }, {\n    label: \"Lab\",\n    href: \"/sample\"\n  }, {\n    label: \"Products\",\n    href: \"/sample\"\n  }, {\n    label: \"Music\",\n    href: \"/sample\"\n  }, {\n    label: \"Tattoo\",\n    href: \"/sample\"\n  }, {\n    label: \"Shop\",\n    href: \"/sample\"\n  }, {\n    label: \"Resources\",\n    href: \"/sample\"\n  }, {\n    label: \"Advice\",\n    href: \"/sample\"\n  }, {\n    label: \"Fonts\",\n    href: \"/sample\"\n  }, {\n    label: \"Contact\",\n    href: \"/sample\"\n  }];\n  return __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__marquee-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    className: `${InteractiveFrameHeaderClassName}__frame-items`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, items.map((item, idx) => {\n    return __jsx(\"li\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: item.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, item.label)));\n  })), __jsx(\"ul\", {\n    className: `${InteractiveFrameHeaderClassName}__frame-items`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, items.map((item, idx) => {\n    return __jsx(\"li\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: item.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, item.label)));\n  })));\n}; // Begin Component\n// _________________________________________________________________________________________\n\n/**\n *\n * @name InteractiveFrameHeader\n *\n */\n\n\nexport class InteractiveFrameHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isInactive: false,\n      isFillBarsExpanded: false,\n      isOverlayVisible: true,\n      isSidebarVisible: false,\n      isLogotypeExpanded: false\n    };\n    this.listenToScroll = this.listenToScroll.bind(this);\n    this.toggleLogotype = this.toggleLogotype.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.toggleFillBars = this.toggleFillBars.bind(this);\n    this.toggleOverlayAndFillBarsExpansion = this.toggleOverlayAndFillBarsExpansion.bind(this);\n    this.toggleOverlayAndLogotypeExpansion = this.toggleOverlayAndLogotypeExpansion.bind(this);\n  }\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n\n\n  componentDidMount() {\n    if (\"undefined\") {\n      window.addEventListener(\"scroll\", this.listenToScroll);\n    }\n  }\n\n  componentWillUnmount() {\n    if (\"undefined\") {\n      window.removeEventListener(\"scroll\", this.listenToScroll);\n    }\n  }\n\n  toggleLogotype() {\n    if (this.state.isLogotypeExpanded) {\n      this.setState({\n        isLogotypeExpanded: false\n      });\n    } else {\n      this.setState({\n        isLogotypeExpanded: true\n      });\n    }\n  }\n\n  toggleOverlay() {\n    if (this.state.isOverlayVisible) {\n      this.setState({\n        isOverlayVisible: false\n      });\n      return;\n    } else {\n      this.setState({\n        isOverlayVisible: true\n      });\n      return;\n    }\n  }\n\n  toggleFillBars() {\n    if (this.state.isFillBarsExpanded) {\n      this.setState({\n        isFillBarsExpanded: false\n      });\n      return;\n    } else {\n      this.setState({\n        isFillBarsExpanded: true\n      });\n      return;\n    }\n  }\n\n  toggleOverlayAndLogotypeExpansion() {\n    if (this.state.isFillBarsExpanded) {\n      this.toggleOverlay();\n      this.toggleFillBars();\n    } else {\n      this.toggleLogotype();\n      this.toggleOverlay();\n    }\n\n    return;\n  }\n\n  toggleOverlayAndFillBarsExpansion() {\n    this.toggleFillBars();\n    this.toggleOverlay();\n    return;\n  }\n\n  listenToScroll() {\n    if (\"undefined\" && document) {\n      const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n\n      if (scrollPosition > 10) {\n        this.setState({\n          isInactive: true\n        });\n      } else {\n        this.setState({\n          isInactive: false\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(InteractiveFrameHeaderDisplay, {\n      router: this.props.router,\n      isInactive: this.state.isInactive,\n      isFillBarsExpanded: this.state.isFillBarsExpanded,\n      isOverlayVisible: this.state.isOverlayVisible,\n      isSidebarVisible: this.state.isSidebarVisible,\n      isLogotypeExpanded: this.state.isLogotypeExpanded,\n      toggleOverlayAndFillBarsExpansion: this.toggleOverlayAndFillBarsExpansion,\n      toggleOverlayAndLogotypeExpansion: this.toggleOverlayAndLogotypeExpansion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n/**\n *\n * @name InteractiveOverlayNavigation\n * @author Peter Laxalt\n *\n */\n\nconst InteractiveOverlayNavigation = ({\n  addClass\n}) => {\n  return __jsx(InteractiveOverlayNavigationStyle, {\n    className: `${InteractiveOverlayNavigationClassName} ${addClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: `${InteractiveOverlayNavigationClassName}__inner`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, \"Overlay Nav\"));\n};\n/**\n *\n * @name InteractiveFrameHeaderDisplay\n * @author Peter Laxalt\n *\n */\n\n\nconst InteractiveFrameHeaderDisplay = ({\n  isInactive,\n  isFillBarsExpanded,\n  isLogotypeExpanded,\n  isOverlayVisible,\n  toggleOverlayAndFillBarsExpansion,\n  toggleOverlayAndLogotypeExpansion,\n  router\n}) => {\n  // console.log(router);\n  let hasSidebar = router && router.pathname ? router.pathname.includes(\"sample\") ? true : false : false;\n  return __jsx(React.Fragment, null, __jsx(InteractiveFrameHeaderStyle, {\n    className: `${InteractiveFrameHeaderClassName} ${InteractiveFrameHeaderClassName}--${isInactive || isOverlayVisible ? `inactive` : `active`} ${InteractiveFrameHeaderClassName}--${isFillBarsExpanded || isOverlayVisible ? `fill-bars-is-expanded` : `fill-bars-is-not-expanded`}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__inner`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--top-left`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"icon icon--brandmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    className: \"icon--brandmark__el icon__el\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  }))))), __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--top-right`,\n    onClick: () => toggleOverlayAndFillBarsExpansion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"icon icon--menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"icon--menu__el icon__el\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 19\n    }\n  })))), __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--bottom-left`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"icon icon--eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"icon--eye__el icon__el\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 19\n    }\n  })))), __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--bottom-right`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"icon icon--star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"icon--star__el icon__el\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 19\n    }\n  })))), __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__y-axis`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--top`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, __jsx(FrameItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }), __jsx(ThemePicker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--bottom`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 15\n    }\n  }, __jsx(FrameItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__x-axis`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--left`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 15\n    }\n  }, __jsx(FrameItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: `${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--right`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }\n  }, __jsx(FrameItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }\n  })))))), __jsx(InteractiveOverlayNavigation, {\n    addClass: `${InteractiveOverlayNavigationClassName}--${isOverlayVisible ? `is-visible` : `is-hidden`}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }\n  }), __jsx(InteractiveLogotypeStyle, {\n    className: `${InteractiveLogotypeClassName} ${InteractiveLogotypeClassName}--${isInactive ? `inactive` : `active`} ${InteractiveLogotypeClassName}--${isLogotypeExpanded || isOverlayVisible ? `is-expanded` : `is-not-expanded`} ${InteractiveLogotypeClassName}--${isFillBarsExpanded || isOverlayVisible ? `fill-bars-is-expanded` : `fill-bars-is-not-expanded`}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: `${InteractiveLogotypeClassName}__inner`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: `${InteractiveLogotypeClassName}__el`,\n    onClick: () => toggleOverlayAndLogotypeExpansion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: `${InteractiveLogotypeClassName}__el__label`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, \"LAXALT\")))), __jsx(InteractiveFillBarsStyle, {\n    className: `${InteractiveFillBarsClassName} ${InteractiveFillBarsClassName}--${isInactive || isOverlayVisible ? `inactive` : `active`} ${InteractiveFillBarsClassName}--${isFillBarsExpanded || isOverlayVisible ? `is-expanded` : `is-not-expanded`}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--top`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--right`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--bottom`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--left`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }\n  })), hasSidebar ? __jsx(LayeredSidebar, {\n    addClass: `${LayeredSidebarClassName}--${isInactive ? `frame-inactive` : `frame-active`}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }\n  }) : null);\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/InteractiveFrameHeader/InteractiveFrameHeader.tsx"],"names":["React","Component","Link","LayeredSidebar","ThemePicker","InteractiveFillBarsClassName","InteractiveFillBarsStyle","InteractiveFrameHeaderClassName","InteractiveFrameHeaderStyle","InteractiveLogotypeClassName","InteractiveLogotypeStyle","InteractiveOverlayNavigationClassName","InteractiveOverlayNavigationStyle","LayeredSidebarClassName","FrameItems","items","label","href","map","item","idx","InteractiveFrameHeader","constructor","props","state","isInactive","isFillBarsExpanded","isOverlayVisible","isSidebarVisible","isLogotypeExpanded","listenToScroll","bind","toggleLogotype","toggleOverlay","toggleFillBars","toggleOverlayAndFillBarsExpansion","toggleOverlayAndLogotypeExpansion","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","setState","document","scrollPosition","body","scrollTop","documentElement","render","router","InteractiveOverlayNavigation","addClass","InteractiveFrameHeaderDisplay","hasSidebar","pathname","includes"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AAMA;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,SACEC,4BADF,EAEEC,wBAFF,EAGEC,+BAHF,EAIEC,2BAJF,EAKEC,4BALF,EAMEC,wBANF,EAOEC,qCAPF,EAQEC,iCARF,QASO,eATP;AAUA,SAASC,uBAAT,QAAwC,+BAAxC,C,CAEA;AACA;;AA8BA;AACA;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,MAAIC,KAAkC,GAAG,CACvC;AACEC,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADuC,EAKvC;AACED,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALuC,EASvC;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATuC,EAavC;AACED,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAbuC,EAiBvC;AACED,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjBuC,EAqBvC;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GArBuC,EAyBvC;AACED,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAzBuC,EA6BvC;AACED,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA7BuC,EAiCvC;AACED,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjCuC,EAqCvC;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GArCuC,EAyCvC;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAzCuC,EA6CvC;AACED,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA7CuC,EAiDvC;AACED,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAjDuC,EAqDvC;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GArDuC,EAyDvC;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAzDuC,EA6DvC;AACED,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA7DuC,CAAzC;AAmEA,SACE;AAAK,IAAA,SAAS,EAAG,GAAEV,+BAAgC,qBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAG,GAAEA,+BAAgC,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAkCC,GAAlC,KAAkD;AAC3D,WACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAI,CAACF,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,IAAI,CAACH,KAAT,CADF,CADF,CADF;AAOD,GARA,CADH,CADF,EAaE;AAAI,IAAA,SAAS,EAAG,GAAET,+BAAgC,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAkCC,GAAlC,KAAkD;AAC3D,WACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAI,CAACF,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,IAAI,CAACH,KAAT,CADF,CADF,CADF;AAOD,GARA,CADH,CAbF,CADF;AA2BD,CA/FD,C,CAiGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMK,sBAAN,SAAqCpB,SAArC,CAGL;AACAqB,EAAAA,WAAW,CAACC,KAAD,EAAqC;AAC9C,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,kBAAkB,EAAE,KAFT;AAGXC,MAAAA,gBAAgB,EAAE,IAHP;AAIXC,MAAAA,gBAAgB,EAAE,KAJP;AAKXC,MAAAA,kBAAkB,EAAE;AALT,KAAb;AAQA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AAEA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AAEA,SAAKI,iCAAL,GAAyC,KAAKA,iCAAL,CAAuCJ,IAAvC,CACvC,IADuC,CAAzC;AAGA,SAAKK,iCAAL,GAAyC,KAAKA,iCAAL,CAAuCL,IAAvC,CACvC,IADuC,CAAzC;AAGD;AAED;AACF;AACA;AACA;AACA;;;AACEM,EAAAA,iBAAiB,GAAG;AAClB,qBAAmB;AACjBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKT,cAAvC;AACD;AACF;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,qBAAmB;AACjBF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKX,cAA1C;AACD;AACF;;AAEDE,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKR,KAAL,CAAWK,kBAAf,EAAmC;AACjC,WAAKa,QAAL,CAAc;AACZb,QAAAA,kBAAkB,EAAE;AADR,OAAd;AAGD,KAJD,MAIO;AACL,WAAKa,QAAL,CAAc;AACZb,QAAAA,kBAAkB,EAAE;AADR,OAAd;AAGD;AACF;;AAEDI,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKT,KAAL,CAAWG,gBAAf,EAAiC;AAC/B,WAAKe,QAAL,CAAc;AACZf,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAIA;AACD,KAND,MAMO;AACL,WAAKe,QAAL,CAAc;AACZf,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAIA;AACD;AACF;;AAEDO,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKV,KAAL,CAAWE,kBAAf,EAAmC;AACjC,WAAKgB,QAAL,CAAc;AACZhB,QAAAA,kBAAkB,EAAE;AADR,OAAd;AAIA;AACD,KAND,MAMO;AACL,WAAKgB,QAAL,CAAc;AACZhB,QAAAA,kBAAkB,EAAE;AADR,OAAd;AAIA;AACD;AACF;;AAEDU,EAAAA,iCAAiC,GAAG;AAClC,QAAI,KAAKZ,KAAL,CAAWE,kBAAf,EAAmC;AACjC,WAAKO,aAAL;AACA,WAAKC,cAAL;AACD,KAHD,MAGO;AACL,WAAKF,cAAL;AACA,WAAKC,aAAL;AACD;;AAED;AACD;;AAEDE,EAAAA,iCAAiC,GAAG;AAClC,SAAKD,cAAL;AACA,SAAKD,aAAL;AAEA;AACD;;AAEDH,EAAAA,cAAc,GAAG;AACf,QAAI,eAAiBa,QAArB,EAA+B;AAC7B,YAAMC,cAAc,GAClBD,QAAQ,CAACE,IAAT,CAAcC,SAAd,IAA2BH,QAAQ,CAACI,eAAT,CAAyBD,SADtD;;AAGA,UAAIF,cAAc,GAAG,EAArB,EAAyB;AACvB,aAAKF,QAAL,CAAc;AACZjB,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD,OAJD,MAIO;AACL,aAAKiB,QAAL,CAAc;AACZjB,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF;AACF;;AAEDuB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,6BAAD;AACE,MAAA,MAAM,EAAE,KAAKzB,KAAL,CAAW0B,MADrB;AAEE,MAAA,UAAU,EAAE,KAAKzB,KAAL,CAAWC,UAFzB;AAGE,MAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWE,kBAHjC;AAIE,MAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWG,gBAJ/B;AAKE,MAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWI,gBAL/B;AAME,MAAA,kBAAkB,EAAE,KAAKJ,KAAL,CAAWK,kBANjC;AAOE,MAAA,iCAAiC,EAC/B,KAAKM,iCART;AAUE,MAAA,iCAAiC,EAC/B,KAAKC,iCAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAgBD;;AA5ID;AA+IF;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMc,4BAAwF,GAAG,CAAC;AAChGC,EAAAA;AADgG,CAAD,KAE3F;AACJ,SACE,MAAC,iCAAD;AACE,IAAA,SAAS,EAAG,GAAExC,qCAAsC,IAAGwC,QAAS,EADlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAG,GAAExC,qCAAsC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF;AASD,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMyC,6BAA0F,GAAG,CAAC;AAClG3B,EAAAA,UADkG;AAElGC,EAAAA,kBAFkG;AAGlGG,EAAAA,kBAHkG;AAIlGF,EAAAA,gBAJkG;AAMlGQ,EAAAA,iCANkG;AAOlGC,EAAAA,iCAPkG;AASlGa,EAAAA;AATkG,CAAD,KAU7F;AACJ;AAEA,MAAII,UAAU,GACZJ,MAAM,IAAIA,MAAM,CAACK,QAAjB,GACIL,MAAM,CAACK,QAAP,CAAgBC,QAAhB,CAAyB,QAAzB,IACE,IADF,GAEE,KAHN,GAII,KALN;AAOA,SACE,4BAGE,MAAC,2BAAD;AACE,IAAA,SAAS,EAAG,GAAEhD,+BAAgC,IAAGA,+BAAgC,KAC/EkB,UAAU,IAAIE,gBAAd,GAAkC,UAAlC,GAA+C,QAChD,IAAGpB,+BAAgC,KAClCmB,kBAAkB,IAAIC,gBAAtB,GACK,uBADL,GAEK,2BACN,EAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAK,IAAA,SAAS,EAAG,GAAEpB,+BAAgC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAG,GAAEA,+BAAgC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,0BAAyBA,+BAAgC,kCADzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iCADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CAHF,CAJF,EAkBE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,0BAAyBA,+BAAgC,mCADzG;AAEE,IAAA,OAAO,EAAE,MAAM4B,iCAAiC,EAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,SAAS,EAAG,GAAE5B,+BAAgC,iCADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CAJF,CAlBF,EA8BE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,0BAAyBA,+BAAgC,qCADzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iCADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CAHF,CA9BF,EAyCE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,0BAAyBA,+BAAgC,sCADzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iCADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CAHF,CAzCF,EAuDE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iBADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iBAAgBA,+BAAgC,oBADhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAHF,EASE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iBAAgBA,+BAAgC,uBADhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CATF,CAvDF,EAyEE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iBADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iBAAgBA,+BAAgC,qBADhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,EASE;AACE,IAAA,SAAS,EAAG,GAAEA,+BAAgC,iBAAgBA,+BAAgC,sBADhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CATF,CAzEF,CAHF,CAXF,CAHF,EA+GE,MAAC,4BAAD;AACE,IAAA,QAAQ,EAAG,GAAEI,qCAAsC,KACjDgB,gBAAgB,GAAI,YAAJ,GAAmB,WACpC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/GF,EAuHE,MAAC,wBAAD;AACE,IAAA,SAAS,EAAG,GAAElB,4BAA6B,IAAGA,4BAA6B,KACzEgB,UAAU,GAAI,UAAJ,GAAiB,QAC5B,IAAGhB,4BAA6B,KAC/BoB,kBAAkB,IAAIF,gBAAtB,GACK,aADL,GAEK,iBACN,IAAGlB,4BAA6B,KAC/BiB,kBAAkB,IAAIC,gBAAtB,GACK,uBADL,GAEK,2BACN,EAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE;AAAM,IAAA,SAAS,EAAG,GAAElB,4BAA6B,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,GAAEA,4BAA6B,MAD7C;AAEE,IAAA,OAAO,EAAE,MAAM2B,iCAAiC,EAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAM,IAAA,SAAS,EAAG,GAAE3B,4BAA6B,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CAbF,CAvHF,EAkJE,MAAC,wBAAD;AACE,IAAA,SAAS,EAAG,GAAEJ,4BAA6B,IAAGA,4BAA6B,KACzEoB,UAAU,IAAIE,gBAAd,GAAkC,UAAlC,GAA+C,QAChD,IAAGtB,4BAA6B,KAC/BqB,kBAAkB,IAAIC,gBAAtB,GACK,aADL,GAEK,iBACN,EAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AACE,IAAA,SAAS,EAAG,GAAEtB,4BAA6B,cAAaA,4BAA6B,iBADvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAcE;AACE,IAAA,SAAS,EAAG,GAAEA,4BAA6B,cAAaA,4BAA6B,mBADvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAiBE;AACE,IAAA,SAAS,EAAG,GAAEA,4BAA6B,cAAaA,4BAA6B,oBADvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAoBE;AACE,IAAA,SAAS,EAAG,GAAEA,4BAA6B,cAAaA,4BAA6B,kBADvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAlJF,EA6KGgD,UAAU,GACT,MAAC,cAAD;AACE,IAAA,QAAQ,EAAG,GAAExC,uBAAwB,KACnCY,UAAU,GAAI,gBAAJ,GAAuB,cAClC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAMP,IAnLN,CADF;AAuLD,CA3MD,C,CA6MA;AACA","sourcesContent":["// Core\nimport React, { Component } from \"react\";\n\n// Types\nimport { NextRouter } from \"next/router\";\n\n// Constants\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\n\n// Components\nimport Link from \"next/link\";\nimport { LayeredSidebar } from \"../LayeredSidebar\";\nimport { ThemePicker } from \"../ThemePicker\";\n\n// Styles\nimport {\n  InteractiveFillBarsClassName,\n  InteractiveFillBarsStyle,\n  InteractiveFrameHeaderClassName,\n  InteractiveFrameHeaderStyle,\n  InteractiveLogotypeClassName,\n  InteractiveLogotypeStyle,\n  InteractiveOverlayNavigationClassName,\n  InteractiveOverlayNavigationStyle,\n} from \"./styles.scss\";\nimport { LayeredSidebarClassName } from \"../LayeredSidebar/styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_InteractiveFrameHeader_State = {\n  isInactive?: boolean;\n  isFillBarsExpanded?: boolean;\n  isOverlayVisible?: boolean;\n  isSidebarVisible?: boolean;\n  isLogotypeExpanded?: boolean;\n\n  router?: NextRouter;\n};\n\ntype LXLT_InteractiveFrameHeader = {\n  router?: NextRouter;\n};\n\ntype LXLT_InteractiveFrameHeaderDisplay = LXLT_InteractiveFrameHeader_State & {\n  toggleOverlayAndFillBarsExpansion?: () => void;\n  toggleOverlayAndLogotypeExpansion?: () => void;\n};\n\ntype LXLT_InteractiveFrameItem = {\n  label: string;\n  href?: string;\n};\n\ntype LXLT_InteractiveOverlayNavigation = {\n  addClass?: string;\n};\n\n// Begin Data\n// __________________________________________________________________________________________\n\nconst FrameItems = () => {\n  let items: LXLT_InteractiveFrameItem[] = [\n    {\n      label: \"Studio\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Art\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Design\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Strategy\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Interactive\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Murals\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Code\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Lab\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Products\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Music\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Tattoo\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Shop\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Resources\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Advice\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Fonts\",\n      href: \"/sample\",\n    },\n    {\n      label: \"Contact\",\n      href: \"/sample\",\n    },\n  ];\n\n  return (\n    <div className={`${InteractiveFrameHeaderClassName}__marquee-container`}>\n      <ul className={`${InteractiveFrameHeaderClassName}__frame-items`}>\n        {items.map((item: LXLT_InteractiveFrameItem, idx: number) => {\n          return (\n            <li key={idx}>\n              <Link href={item.href}>\n                <a>{item.label}</a>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <ul className={`${InteractiveFrameHeaderClassName}__frame-items`}>\n        {items.map((item: LXLT_InteractiveFrameItem, idx: number) => {\n          return (\n            <li key={idx}>\n              <Link href={item.href}>\n                <a>{item.label}</a>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\n// Begin Component\n// _________________________________________________________________________________________\n\n/**\n *\n * @name InteractiveFrameHeader\n *\n */\nexport class InteractiveFrameHeader extends Component<\n  LXLT_InteractiveFrameHeader,\n  LXLT_InteractiveFrameHeader_State\n> {\n  constructor(props: LXLT_InteractiveFrameHeader) {\n    super(props);\n\n    this.state = {\n      isInactive: false,\n      isFillBarsExpanded: false,\n      isOverlayVisible: true,\n      isSidebarVisible: false,\n      isLogotypeExpanded: false,\n    };\n\n    this.listenToScroll = this.listenToScroll.bind(this);\n\n    this.toggleLogotype = this.toggleLogotype.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.toggleFillBars = this.toggleFillBars.bind(this);\n\n    this.toggleOverlayAndFillBarsExpansion = this.toggleOverlayAndFillBarsExpansion.bind(\n      this\n    );\n    this.toggleOverlayAndLogotypeExpansion = this.toggleOverlayAndLogotypeExpansion.bind(\n      this\n    );\n  }\n\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n  componentDidMount() {\n    if (typeof window) {\n      window.addEventListener(\"scroll\", this.listenToScroll);\n    }\n  }\n\n  componentWillUnmount() {\n    if (typeof window) {\n      window.removeEventListener(\"scroll\", this.listenToScroll);\n    }\n  }\n\n  toggleLogotype() {\n    if (this.state.isLogotypeExpanded) {\n      this.setState({\n        isLogotypeExpanded: false,\n      });\n    } else {\n      this.setState({\n        isLogotypeExpanded: true,\n      });\n    }\n  }\n\n  toggleOverlay() {\n    if (this.state.isOverlayVisible) {\n      this.setState({\n        isOverlayVisible: false,\n      });\n\n      return;\n    } else {\n      this.setState({\n        isOverlayVisible: true,\n      });\n\n      return;\n    }\n  }\n\n  toggleFillBars() {\n    if (this.state.isFillBarsExpanded) {\n      this.setState({\n        isFillBarsExpanded: false,\n      });\n\n      return;\n    } else {\n      this.setState({\n        isFillBarsExpanded: true,\n      });\n\n      return;\n    }\n  }\n\n  toggleOverlayAndLogotypeExpansion() {\n    if (this.state.isFillBarsExpanded) {\n      this.toggleOverlay();\n      this.toggleFillBars();\n    } else {\n      this.toggleLogotype();\n      this.toggleOverlay();\n    }\n\n    return;\n  }\n\n  toggleOverlayAndFillBarsExpansion() {\n    this.toggleFillBars();\n    this.toggleOverlay();\n\n    return;\n  }\n\n  listenToScroll() {\n    if (typeof window && document) {\n      const scrollPosition =\n        document.body.scrollTop || document.documentElement.scrollTop;\n\n      if (scrollPosition > 10) {\n        this.setState({\n          isInactive: true,\n        });\n      } else {\n        this.setState({\n          isInactive: false,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <InteractiveFrameHeaderDisplay\n        router={this.props.router}\n        isInactive={this.state.isInactive}\n        isFillBarsExpanded={this.state.isFillBarsExpanded}\n        isOverlayVisible={this.state.isOverlayVisible}\n        isSidebarVisible={this.state.isSidebarVisible}\n        isLogotypeExpanded={this.state.isLogotypeExpanded}\n        toggleOverlayAndFillBarsExpansion={\n          this.toggleOverlayAndFillBarsExpansion\n        }\n        toggleOverlayAndLogotypeExpansion={\n          this.toggleOverlayAndLogotypeExpansion\n        }\n      />\n    );\n  }\n}\n\n/**\n *\n * @name InteractiveOverlayNavigation\n * @author Peter Laxalt\n *\n */\n\nconst InteractiveOverlayNavigation: React.FunctionComponent<LXLT_InteractiveOverlayNavigation> = ({\n  addClass,\n}) => {\n  return (\n    <InteractiveOverlayNavigationStyle\n      className={`${InteractiveOverlayNavigationClassName} ${addClass}`}\n    >\n      <div className={`${InteractiveOverlayNavigationClassName}__inner`}>\n        Overlay Nav\n      </div>\n    </InteractiveOverlayNavigationStyle>\n  );\n};\n\n/**\n *\n * @name InteractiveFrameHeaderDisplay\n * @author Peter Laxalt\n *\n */\nconst InteractiveFrameHeaderDisplay: React.FunctionComponent<LXLT_InteractiveFrameHeaderDisplay> = ({\n  isInactive,\n  isFillBarsExpanded,\n  isLogotypeExpanded,\n  isOverlayVisible,\n\n  toggleOverlayAndFillBarsExpansion,\n  toggleOverlayAndLogotypeExpansion,\n\n  router,\n}) => {\n  // console.log(router);\n\n  let hasSidebar =\n    router && router.pathname\n      ? router.pathname.includes(\"sample\")\n        ? true\n        : false\n      : false;\n\n  return (\n    <>\n      {/* ______________________________________________ */}\n      {/* Frame itself */}\n      <InteractiveFrameHeaderStyle\n        className={`${InteractiveFrameHeaderClassName} ${InteractiveFrameHeaderClassName}--${\n          isInactive || isOverlayVisible ? `inactive` : `active`\n        } ${InteractiveFrameHeaderClassName}--${\n          isFillBarsExpanded || isOverlayVisible\n            ? `fill-bars-is-expanded`\n            : `fill-bars-is-not-expanded`\n        }`}\n      >\n        {/* ______________________________________________ */}\n        {/* Inner Grid */}\n        <div className={`${InteractiveFrameHeaderClassName}__inner`}>\n          {/* ______________________________________________ */}\n          {/* Frame */}\n          <div className={`${InteractiveFrameHeaderClassName}__frame`}>\n            {/* ______________________________________________ */}\n            {/* Corner Actions */}\n\n            <div\n              className={`${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--top-left`}\n            >\n              <Link href=\"/\">\n                <a\n                  className={`${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`}\n                >\n                  <span className=\"icon icon--brandmark\">\n                    <span className=\"icon--brandmark__el icon__el\" />\n                  </span>\n                </a>\n              </Link>\n            </div>\n\n            <div\n              className={`${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--top-right`}\n              onClick={() => toggleOverlayAndFillBarsExpansion()}\n            >\n              <span\n                className={`${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`}\n              >\n                <span className=\"icon icon--menu\">\n                  <span className=\"icon--menu__el icon__el\" />\n                </span>\n              </span>\n            </div>\n            <div\n              className={`${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--bottom-left`}\n            >\n              <span\n                className={`${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`}\n              >\n                <span className=\"icon icon--eye\">\n                  <span className=\"icon--eye__el icon__el\" />\n                </span>\n              </span>\n            </div>\n            <div\n              className={`${InteractiveFrameHeaderClassName}__frame__corner-action ${InteractiveFrameHeaderClassName}__frame__corner-action--bottom-right`}\n            >\n              <span\n                className={`${InteractiveFrameHeaderClassName}__frame__corner-action__wrapper`}\n              >\n                <span className=\"icon icon--star\">\n                  <span className=\"icon--star__el icon__el\" />\n                </span>\n              </span>\n            </div>\n\n            {/* ______________________________________________ */}\n            {/* Top and bottom (y-axis) items */}\n            <div\n              className={`${InteractiveFrameHeaderClassName}__frame__y-axis`}\n            >\n              <div\n                className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--top`}\n              >\n                <FrameItems />\n                <ThemePicker />\n              </div>\n              <div\n                className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--bottom`}\n              >\n                <FrameItems />\n              </div>\n            </div>\n\n            {/* ______________________________________________ */}\n            {/* Left and right (x-axis) items */}\n            <div\n              className={`${InteractiveFrameHeaderClassName}__frame__x-axis`}\n            >\n              <div\n                className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--left`}\n              >\n                <FrameItems />\n              </div>\n\n              <div\n                className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--right`}\n              >\n                <FrameItems />\n              </div>\n            </div>\n          </div>\n        </div>\n      </InteractiveFrameHeaderStyle>\n\n      {/* ______________________________________________ */}\n      {/* Overlay Content */}\n      <InteractiveOverlayNavigation\n        addClass={`${InteractiveOverlayNavigationClassName}--${\n          isOverlayVisible ? `is-visible` : `is-hidden`\n        }`}\n      />\n\n      {/* ______________________________________________ */}\n      {/* Logotype */}\n      <InteractiveLogotypeStyle\n        className={`${InteractiveLogotypeClassName} ${InteractiveLogotypeClassName}--${\n          isInactive ? `inactive` : `active`\n        } ${InteractiveLogotypeClassName}--${\n          isLogotypeExpanded || isOverlayVisible\n            ? `is-expanded`\n            : `is-not-expanded`\n        } ${InteractiveLogotypeClassName}--${\n          isFillBarsExpanded || isOverlayVisible\n            ? `fill-bars-is-expanded`\n            : `fill-bars-is-not-expanded`\n        }`}\n      >\n        <span className={`${InteractiveLogotypeClassName}__inner`}>\n          <span\n            className={`${InteractiveLogotypeClassName}__el`}\n            onClick={() => toggleOverlayAndLogotypeExpansion()}\n          >\n            <span className={`${InteractiveLogotypeClassName}__el__label`}>\n              LAXALT\n            </span>\n          </span>\n        </span>\n      </InteractiveLogotypeStyle>\n\n      {/* ______________________________________________ */}\n      {/* Overlay Fill Bars */}\n      <InteractiveFillBarsStyle\n        className={`${InteractiveFillBarsClassName} ${InteractiveFillBarsClassName}--${\n          isInactive || isOverlayVisible ? `inactive` : `active`\n        } ${InteractiveFillBarsClassName}--${\n          isFillBarsExpanded || isOverlayVisible\n            ? `is-expanded`\n            : `is-not-expanded`\n        }`}\n      >\n        {/* ______________________________________________ */}\n        {/* Background Fill Bars */}\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--top`}\n        />\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--right`}\n        />\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--bottom`}\n        />\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--left`}\n        />\n      </InteractiveFillBarsStyle>\n\n      {/* ______________________________________________ */}\n      {/* Sidebar */}\n      {hasSidebar ? (\n        <LayeredSidebar\n          addClass={`${LayeredSidebarClassName}--${\n            isInactive ? `frame-inactive` : `frame-active`\n          }`}\n        />\n      ) : null}\n    </>\n  );\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}