{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx\";\n// Core\nimport Link from \"next/link\";\nimport React from \"react\";\n// Styles\nimport { GlobalSidebarPaneOffsetVariables, LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nexport const LayeredSidebar = ({\n  addClass,\n  panes\n}) => {\n  if (panes) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalSidebarPaneOffsetVariables, {\n        panes: panes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LayeredSidebarStyle, {\n        className: `${LayeredSidebarClassName} ${addClass && addClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${LayeredSidebarClassName}__inner`,\n          children: panes.map((pane, idx) => {\n            let paneItemsMajor = pane.items ? pane.items.filter(item => item.isMajor) : [];\n            let paneItemsMinor = pane.items ? pane.items.filter(item => !item.isMajor) : [];\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${LayeredSidebarClassName}__pane`,\n                children: [pane.header && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${LayeredSidebarClassName}__pane__header`,\n                  children: pane.header\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), pane.items && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [paneItemsMajor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`,\n                    children: paneItemsMajor.map((paneItem, idxx) => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          href: paneItem.href,\n                          children: /*#__PURE__*/_jsxDEV(\"a\", {\n                            children: paneItem.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 96,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 37\n                        }, this)\n                      }, idxx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 35\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this), paneItemsMinor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`,\n                    children: paneItemsMinor.map((paneItem, idxx) => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          href: paneItem.href,\n                          children: /*#__PURE__*/_jsxDEV(\"a\", {\n                            children: paneItem.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 124,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 123,\n                          columnNumber: 37\n                        }, this)\n                      }, idxx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 35\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return null;\n  }\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx"],"names":["Link","React","GlobalSidebarPaneOffsetVariables","LayeredSidebarClassName","LayeredSidebarStyle","LayeredSidebar","addClass","panes","length","map","pane","idx","paneItemsMajor","items","filter","item","isMajor","paneItemsMinor","header","paneItem","idxx","href","label"],"mappings":"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","sourcesContent":["// Core\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\n\n// Styles\nimport { GlobalSidebarPaneOffsetVariables, LayeredPaneCollapsedPaneWidth, LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_SidebarPaneItem = {\n  label: string;\n  href: string;\n  isMajor: boolean;\n};\n\nexport type LXLT_SidebarPane = {\n  header?: string;\n  items?: LXLT_SidebarPaneItem[];\n};\n\nexport type LXLT_LayeredSidebar = {\n  addClass?: string;\n  panes?: LXLT_SidebarPane[];\n};\n\n// Begin Data\n// __________________________________________________________________________________________\n\nexport const LayeredSidebar: React.FunctionComponent<LXLT_LayeredSidebar> = ({\n  addClass,\n  panes,\n}) => {\n\n  if (panes) {\n    return (\n      <>\n        <GlobalSidebarPaneOffsetVariables panes={panes.length} />\n        <LayeredSidebarStyle\n          className={`${LayeredSidebarClassName} ${addClass && addClass}`}\n        >\n          <div className={`${LayeredSidebarClassName}__inner`}>\n            {panes.map((pane: LXLT_SidebarPane, idx: number) => {\n              let paneItemsMajor: LXLT_SidebarPaneItem[] = pane.items\n                ? pane.items.filter(\n                    (item: LXLT_SidebarPaneItem) => item.isMajor\n                  )\n                : [];\n\n              let paneItemsMinor: LXLT_SidebarPaneItem[] = pane.items\n                ? pane.items.filter(\n                    (item: LXLT_SidebarPaneItem) => !item.isMajor\n                  )\n                : [];\n\n              return (\n                <>\n                  {/* ____________________________________________________________ */}\n                  {/* Navigaton Pane */}\n                  <div className={`${LayeredSidebarClassName}__pane`} key={idx}>\n                    {/* ____________________________________________________________ */}\n                    {/* List header */}\n                    {pane.header && (\n                      <div\n                        className={`${LayeredSidebarClassName}__pane__header`}\n                      >\n                        {pane.header}\n                      </div>\n                    )}\n\n                    {/* ____________________________________________________________ */}\n                    {/* List items */}\n                    {pane.items && (\n                      <>\n                        {/* ____________________________________________________________ */}\n                        {/* Major list items */}\n                        {paneItemsMajor.length > 0 && (\n                          <ul\n                            className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`}\n                          >\n                            {paneItemsMajor.map(\n                              (\n                                paneItem: LXLT_SidebarPaneItem,\n                                idxx: number\n                              ) => {\n                                return (\n                                  <li\n                                    className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                      paneItem.isMajor ? \"major\" : \"minor\"\n                                    }`}\n                                    key={idxx}\n                                  >\n                                    <Link href={paneItem.href}>\n                                      <a>{paneItem.label}</a>\n                                    </Link>\n                                  </li>\n                                );\n                              }\n                            )}\n                          </ul>\n                        )}\n\n                        {/* ____________________________________________________________ */}\n                        {/* Minor list items */}\n                        {paneItemsMinor.length > 0 && (\n                          <ul\n                            className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`}\n                          >\n                            {paneItemsMinor.map(\n                              (\n                                paneItem: LXLT_SidebarPaneItem,\n                                idxx: number\n                              ) => {\n                                return (\n                                  <li\n                                    className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                      paneItem.isMajor ? \"major\" : \"minor\"\n                                    }`}\n                                    key={idxx}\n                                  >\n                                    <Link href={paneItem.href}>\n                                      <a>{paneItem.label}</a>\n                                    </Link>\n                                  </li>\n                                );\n                              }\n                            )}\n                          </ul>\n                        )}\n                      </>\n                    )}\n                  </div>\n                </>\n              );\n            })}\n          </div>\n        </LayeredSidebarStyle>\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}