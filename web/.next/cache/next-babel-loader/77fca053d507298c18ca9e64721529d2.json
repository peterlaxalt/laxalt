{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx\";\n// Core\nimport React, { useEffect, useState } from \"react\";\nimport { SiteProjects } from \"../../../constants/site/Settings\";\nimport { Theme } from \"../../../constants/Theme\"; // Components\n// Styles\n\nimport { ProjectScrollHorizontalTranslateContainerStyle, ProjectScrollSectionClassName, ProjectScrollSectionStyle, ProjectScrollTallOuterContainerStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n// Begin Component\n// __________________________________________________________________________________________\n\nconst calcDynamicHeight = objectWidth => {\n  const vw = window.innerWidth;\n  const vh = window.innerHeight;\n  return objectWidth - vw + vh + 150;\n};\n\nconst handleDynamicHeight = (ref, setDynamicHeight) => {\n  const objectWidth = ref.current.scrollWidth;\n  const dynamicHeight = calcDynamicHeight(objectWidth);\n  setDynamicHeight(dynamicHeight);\n};\n\nconst applyScrollListener = (ref, setTranslateX) => {\n  window.addEventListener(\"scroll\", () => {\n    const offsetTop = ref && ref.current ? -ref.current.offsetTop : 0;\n    setTranslateX(offsetTop);\n  });\n};\n\nexport const ProjectScrollSection = ({\n  addClass = \"\",\n  hasSidebar = false,\n  style = {}\n}) => {\n  const {\n    0: dynamicHeight,\n    1: setDynamicHeight\n  } = useState(null);\n  const {\n    0: translateX,\n    1: setTranslateX\n  } = useState(0);\n  const containerRef = React.useRef();\n  const objectRef = React.useRef();\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProjectScrollSectionStyle, {\n    style: style,\n    className: `${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${hasSidebar ? \"has-sidebar\" : \"\"} ${addClass && addClass}`,\n    children: /*#__PURE__*/_jsxDEV(ProjectScrollTallOuterContainerStyle // @ts-ignore\n    , {\n      dynamicHeight: dynamicHeight,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ProjectScrollSectionClassName}__sticky-inner`,\n        ref: containerRef,\n        children: /*#__PURE__*/_jsxDEV(ProjectScrollHorizontalTranslateContainerStyle // @ts-ignore\n        , {\n          translateX: translateX,\n          ref: objectRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${ProjectScrollSectionClassName}__horizontal-section`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${ProjectScrollSectionClassName}__content-wrapper`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100vw\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), SiteProjects.map((item, idx) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"50vw\",\n                    flexShrink: 0,\n                    marginRight: \"50px\",\n                    position: \"relative\",\n                    mixBlendMode: \"multiply\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"grid\",\n                      mixBlendMode: \"multiply\",\n                      placeItems: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: item.cover,\n                      style: {\n                        border: `2px solid ${Theme.Color.varBackground}`,\n                        maxWidth: \"100%\",\n                        width: \"100%\",\n                        mixBlendMode: \"multiply\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100vw\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx"],"names":["React","useEffect","useState","SiteProjects","Theme","ProjectScrollHorizontalTranslateContainerStyle","ProjectScrollSectionClassName","ProjectScrollSectionStyle","ProjectScrollTallOuterContainerStyle","calcDynamicHeight","objectWidth","vw","window","innerWidth","vh","innerHeight","handleDynamicHeight","ref","setDynamicHeight","current","scrollWidth","dynamicHeight","applyScrollListener","setTranslateX","addEventListener","offsetTop","ProjectScrollSection","addClass","hasSidebar","style","translateX","containerRef","useRef","objectRef","resizeHandler","width","map","item","idx","flexShrink","marginRight","position","mixBlendMode","height","display","placeItems","cover","border","Color","varBackground","maxWidth"],"mappings":"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","sourcesContent":["// Core\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { LXLT_Project, SiteProjects } from \"../../../constants/site/Settings\";\nimport { Theme } from \"../../../constants/Theme\";\n\n// Components\n\n// Styles\nimport {\n  ProjectScrollContentWrapperStyle,\n  ProjectScrollHorizontalSectionStyle,\n  ProjectScrollHorizontalTranslateContainerStyle,\n  ProjectScrollSectionClassName,\n  ProjectScrollSectionStyle,\n  ProjectScrollStickyInnerContainerStyle,\n  ProjectScrollTallOuterContainerStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n\n\nconst calcDynamicHeight = (objectWidth: number) => {\n  const vw = window.innerWidth;\n  const vh = window.innerHeight;\n  return objectWidth - vw + vh + 150;\n};\n\nconst handleDynamicHeight = (\n  ref: React.RefObject<HTMLDivElement>,\n  setDynamicHeight: (dynamicHeight: number) => void\n) => {\n  const objectWidth: number = ref.current.scrollWidth;\n  const dynamicHeight: number = calcDynamicHeight(objectWidth);\n  setDynamicHeight(dynamicHeight);\n};\n\nconst applyScrollListener = (\n  ref: React.RefObject<HTMLDivElement>,\n  setTranslateX: (translateX: number) => void\n) => {\n  window.addEventListener(\"scroll\", () => {\n    const offsetTop: number = ref && ref.current ? -ref.current.offsetTop : 0;\n    setTranslateX(offsetTop);\n  });\n};\n\nexport const ProjectScrollSection = ({\n  addClass = \"\",\n  hasSidebar = false,\n  style = {},\n}) => {\n  const [dynamicHeight, setDynamicHeight] = useState(null);\n  const [translateX, setTranslateX] = useState(0);\n\n  const containerRef = React.useRef<HTMLDivElement>();\n  const objectRef = React.useRef<HTMLDivElement>();\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX);\n  }, []);\n\n  return (\n    <ProjectScrollSectionStyle\n      style={style}\n      className={`${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${\n        hasSidebar ? \"has-sidebar\" : \"\"\n      } ${addClass && addClass}`}\n    >\n      <ProjectScrollTallOuterContainerStyle\n        // @ts-ignore\n        dynamicHeight={dynamicHeight}\n      >\n        <div className={`${ProjectScrollSectionClassName}__sticky-inner`} ref={containerRef}>\n          <ProjectScrollHorizontalTranslateContainerStyle\n            // @ts-ignore\n            translateX={translateX}\n            ref={objectRef}\n          >\n            <div className={`${ProjectScrollSectionClassName}__horizontal-section`}>\n              <div className={`${ProjectScrollSectionClassName}__content-wrapper`}>\n                <div style={{ width: \"100vw\" }} />\n                {SiteProjects.map((item: LXLT_Project, idx: number) => {\n                  return (\n                    <div\n                      key={idx}\n                      style={{\n                        width: \"50vw\",\n                        flexShrink: 0,\n                        marginRight: \"50px\",\n                        position: \"relative\",\n                        mixBlendMode: \"multiply\",\n                      }}\n                    >\n                      <span\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          display: \"grid\",\n                          mixBlendMode: \"multiply\",\n                          placeItems: \"center\",\n                        }}\n                      >\n                        <img\n                          src={item.cover}\n                          style={{\n                            border: `2px solid ${Theme.Color.varBackground}`,\n                            maxWidth: \"100%\",\n                            width: \"100%\",\n                            mixBlendMode: \"multiply\",\n                          }}\n                        />\n                      </span>\n                    </div>\n                  );\n                })}\n                <div style={{ width: \"100vw\" }} />\n              </div>\n            </div>\n          </ProjectScrollHorizontalTranslateContainerStyle>\n        </div>\n      </ProjectScrollTallOuterContainerStyle>\n    </ProjectScrollSectionStyle>\n  );\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}