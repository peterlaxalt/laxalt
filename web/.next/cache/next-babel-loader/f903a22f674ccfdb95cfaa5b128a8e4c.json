{"ast":null,"code":"/**\n *\n * * @see https://tympanus.net/codrops/2019/10/08/creating-a-water-like-distortion-effect-with-three-js/\n *\n */\n// ____________________________________________________________________________________\nimport * as THREE from \"three\";\nimport { Effect } from \"postprocessing\";\nexport class WaterEffect extends Effect {\n  constructor(options = {\n    texture: undefined\n  }) {\n    super(\"WaterEffect\", fragment, {\n      uniforms: new Map([[\"uTexture\", new THREE.Uniform(options.texture)]])\n    });\n  }\n\n}\nexport default WaterEffect;\nconst fragment = `\n\nuniform sampler2D uTexture;\n\nvoid mainUv(inout vec2 uv) {\n        vec4 tex = texture2D(uTexture, uv);\n        float angle = -((tex.r) * (PI * 2.) - PI) ;\n        float vx = -(tex.g *2. - 1.);\n        float vy = -(tex.r *2. - 1.);\n        float intensity = tex.b;\n        uv.x += vx * 0.2 * intensity ;\n        uv.y += vy * 0.2  *intensity;\n        // uv.xy *= 1. - 0.5 * smoothstep( 0., 1., intensity) ;\n        // uv.x +=  0.2 * intensity;\n        // uv.y +=  0.2  *intensity;\n    }\n\n\n`;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/sketches/three/water-distort/WaterEffect.ts"],"names":["THREE","Effect","WaterEffect","constructor","options","texture","undefined","fragment","uniforms","Map","Uniform"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,MAAMC,WAAN,SAA0BD,MAA1B,CAAiC;AACtCE,EAAAA,WAAW,CAACC,OAAmC,GAAG;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAvC,EAA+D;AACxE,UAAM,aAAN,EAAqBC,QAArB,EAA+B;AAC7BC,MAAAA,QAAQ,EAAE,IAAIC,GAAJ,CAAQ,CAAC,CAAC,UAAD,EAAa,IAAIT,KAAK,CAACU,OAAV,CAAkBN,OAAO,CAACC,OAA1B,CAAb,CAAD,CAAR;AADmB,KAA/B;AAGD;;AALqC;AAQxC,eAAeH,WAAf;AAEA,MAAMK,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA","sourcesContent":["/**\n *\n * * @see https://tympanus.net/codrops/2019/10/08/creating-a-water-like-distortion-effect-with-three-js/\n *\n */\n\n// ____________________________________________________________________________________\n\nimport * as THREE from \"three\";\nimport { Effect } from \"postprocessing\";\n\nexport class WaterEffect extends Effect {\n  constructor(options: { texture: THREE.Texture } = { texture: undefined }) {\n    super(\"WaterEffect\", fragment, {\n      uniforms: new Map([[\"uTexture\", new THREE.Uniform(options.texture)]]),\n    });\n  }\n}\n\nexport default WaterEffect;\n\nconst fragment = `\n\nuniform sampler2D uTexture;\n\nvoid mainUv(inout vec2 uv) {\n        vec4 tex = texture2D(uTexture, uv);\n        float angle = -((tex.r) * (PI * 2.) - PI) ;\n        float vx = -(tex.g *2. - 1.);\n        float vy = -(tex.r *2. - 1.);\n        float intensity = tex.b;\n        uv.x += vx * 0.2 * intensity ;\n        uv.y += vy * 0.2  *intensity;\n        // uv.xy *= 1. - 0.5 * smoothstep( 0., 1., intensity) ;\n        // uv.x +=  0.2 * intensity;\n        // uv.y +=  0.2  *intensity;\n    }\n\n\n`;\n"]},"metadata":{},"sourceType":"module"}