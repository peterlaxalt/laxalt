{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    body, html {\\n      overflow: hidden !important;\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// Core\nimport { createGlobalStyle, css } from \"styled-components\"; // Constants\n\nimport \"../Theme\";\nimport \"../Root\";\nimport { Color } from \"./Color\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * @name CssUtils\n * @description CSS Utility functions. Just like SCSS mixins.\n * @returns A plethora of useful CSS.\n *\n */\n\nexport var CssUtils = function CssUtils() {\n  _classCallCheck(this, CssUtils);\n};\n\n_defineProperty(CssUtils, \"ObjectFit\", function () {\n  var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"cover\";\n  return css([\"position:absolute;left:0;right:0;top:0;bottom:0;object-fit:\", \";width:100%;height:100%;object-position:center;max-width:100%;\"], position);\n});\n\n_defineProperty(CssUtils, \"ForceFullWidth\", function () {\n  var spacing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"0\";\n  var addGutter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return css([\"width:calc(100% + (\", \" * 2));margin-left:calc(\", \" * -1);margin-right:calc(\", \" * -1);max-width:100vw;\", \"\"], spacing, spacing, spacing, addGutter ? css([\"padding-left:\", \";padding-right:\", \";\"], spacing, spacing) : null);\n});\n\n_defineProperty(CssUtils, \"CreateTheme\", function () {\n  var clrPrimary = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Color.Primary;\n  var clrSecondary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Color.Secondary;\n  var clrBackground = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Color.Background;\n  var clrForeground = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Color.Text;\n  return css([\":root{--clrPrimary:\", \";--clrSecondary:\", \";--clrBackground:\", \";--clrForeground:\", \";}\"], clrPrimary, clrSecondary, clrBackground, clrForeground);\n});\n\n_defineProperty(CssUtils, \"DisableUserSelect\", function () {\n  return css([\"-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;\"]);\n});\n\nexport var LockBodyScroll = createGlobalStyle(_templateObject());","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/constants/styles/CssUtils.tsx"],"names":["createGlobalStyle","css","Color","CssUtils","position","spacing","addGutter","clrPrimary","Primary","clrSecondary","Secondary","clrBackground","Background","clrForeground","Text","LockBodyScroll"],"mappings":";;;;;;;;;;;;;;AAAA;AACA,SAASA,iBAAT,EAA4BC,GAA5B,QAAuC,mBAAvC,C,CAEA;;AACA,OAAe,UAAf;AACA,OAAe,SAAf;AACA,SAASC,KAAT,QAAsB,SAAtB,C,CAEA;AACA;;AAEA;;;;;;;;AAOA,WAAaC,QAAb;AAAA;AAAA;;gBAAaA,Q,eACQ,YAA6C;AAAA,MAA5CC,QAA4C,uEAAZ,OAAY;AAC9D,SAAOH,GAAP,oIAMgBG,QANhB;AAYD,C;;gBAdUD,Q,oBAgBa,YAGnB;AAAA,MAFHE,OAEG,uEAFe,GAEf;AAAA,MADHC,SACG,uEADkB,KAClB;AACH,SAAOL,GAAP,kHACwBI,OADxB,EAEsBA,OAFtB,EAGuBA,OAHvB,EAKIC,SAAS,GACPL,GADO,4CAEWI,OAFX,EAGYA,OAHZ,IAKP,IAVN;AAYD,C;;gBAhCUF,Q,iBAkCU,YAKhB;AAAA,MAJHI,UAIG,uEAJkBL,KAAK,CAACM,OAIxB;AAAA,MAHHC,YAGG,uEAHoBP,KAAK,CAACQ,SAG1B;AAAA,MAFHC,aAEG,uEAFqBT,KAAK,CAACU,UAE3B;AAAA,MADHC,aACG,uEADqBX,KAAK,CAACY,IAC3B;AACH,SAAOb,GAAP,8FAEoBM,UAFpB,EAGsBE,YAHtB,EAIuBE,aAJvB,EAKuBE,aALvB;AAQD,C;;gBAhDUV,Q,uBAkDgB,YAAM;AAC/B,SAAOF,GAAP;AAQD,C;;AAGH,OAAO,IAAMc,cAAc,GAAGf,iBAAH,mBAApB","sourcesContent":["// Core\nimport { createGlobalStyle, css } from \"styled-components\";\n\n// Constants\nimport {} from \"../Theme\";\nimport {} from \"../Root\";\nimport { Color } from \"./Color\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * @name CssUtils\n * @description CSS Utility functions. Just like SCSS mixins.\n * @returns A plethora of useful CSS.\n *\n */\nexport class CssUtils {\n  static ObjectFit = (position: \"contain\" | \"cover\" = \"cover\") => {\n    return css`\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      object-fit: ${position};\n      width: 100%;\n      height: 100%;\n      object-position: center;\n      max-width: 100%;\n    `;\n  };\n\n  static ForceFullWidth = (\n    spacing: string = \"0\",\n    addGutter: boolean = false\n  ) => {\n    return css`\n      width: calc(100% + (${spacing} * 2));\n      margin-left: calc(${spacing} * -1);\n      margin-right: calc(${spacing} * -1);\n      max-width: 100vw;\n      ${addGutter\n        ? css`\n            padding-left: ${spacing};\n            padding-right: ${spacing};\n          `\n        : null}\n    `;\n  };\n\n  static CreateTheme = (\n    clrPrimary: string = Color.Primary,\n    clrSecondary: string = Color.Secondary,\n    clrBackground: string = Color.Background,\n    clrForeground: string = Color.Text\n  ) => {\n    return css`\n      :root {\n        --clrPrimary: ${clrPrimary};\n        --clrSecondary: ${clrSecondary};\n        --clrBackground: ${clrBackground};\n        --clrForeground: ${clrForeground};\n      }\n    `;\n  };\n\n  static DisableUserSelect = () => {\n    return css`\n      -webkit-touch-callout: none;\n      -webkit-user-select: none;\n      -khtml-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    `;\n  };\n}\n\nexport const LockBodyScroll = createGlobalStyle`\n    body, html {\n      overflow: hidden !important;\n    }\n  `;\n"]},"metadata":{},"sourceType":"module"}