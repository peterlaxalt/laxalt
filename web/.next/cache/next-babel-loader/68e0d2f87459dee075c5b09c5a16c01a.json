{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/_svg/DharmaType.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from \"react\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nexport var DharmaTypeClassName = \"dharma-laxalt\";\n/**\n * @name DharmaType\n * @author Peter Laxalt\n *\n */\n\nexport var DharmaType = function DharmaType(_ref) {\n  var text = _ref.text;\n  var characterArray = text.split(\"\");\n  console.log(characterArray);\n  return __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 215.21 173.21\",\n    preserveAspectRatio: \"none\",\n    className: \"\".concat(DharmaTypeClassName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\\n          .\".concat(DharmaTypeClassName, \"__text__char {\\n            font-size: 173.56px;\\n            font-family: DharmaGothicC-ExBold, Dharma Gothic C;\\n            font-weight: 700;\\n            letter-spacing: 0em;\\n          }\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), __jsx(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"g\", {\n    className: \"\".concat(DharmaTypeClassName, \"__text\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, characterArray.map(function (_char, idx) {\n    return __jsx(\"text\", {\n      className: \"\".concat(DharmaTypeClassName, \"__text__char\"),\n      style: _defineProperty({}, \"--\".concat(DharmaTypeClassName, \"-key\"), idx),\n      transform: \"translate(\".concat(idx * 50, \" 170.53) scale(1.15, 1.39)\"),\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, _char);\n  }))));\n}; // <text\n//   className={`${DharmaTypeClassName}__text`}\n//   transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n// >\n//   {characterArray.map((char: string, idx: number) => {\n//     return (\n//       <span\n//         key={idx}\n//         className={`${DharmaTypeClassName}__text__char`}\n//         style={{\n//           [`--${DharmaTypeClassName}-key` as any]: idx,\n//         }}\n//       >\n//         {char}\n//       </span>\n//     );\n//   })}\n// </text>","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/_svg/DharmaType.tsx"],"names":["React","DharmaTypeClassName","DharmaType","text","characterArray","split","console","log","__html","map","char","idx"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAMA;AACA;AAEA,OAAO,IAAMC,mBAAmB,GAAG,eAA5B;AAEP;;;;;;AAKA,OAAO,IAAMC,UAAoD,GAAG,SAAvDA,UAAuD,OAE9D;AAAA,MADJC,IACI,QADJA,IACI;AACJ,MAAIC,cAAc,GAAGD,IAAI,CAACE,KAAL,CAAW,EAAX,CAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEA,SACE;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,EAAC,mBAFV;AAGE,IAAA,mBAAmB,EAAC,MAHtB;AAIE,IAAA,SAAS,YAAKH,mBAAL,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,uBAAuB,EAAE;AACvBO,MAAAA,MAAM,yBACLP,mBADK;AADiB,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,YAAKA,mBAAL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,cAAc,CAACK,GAAf,CAAmB,UAACC,KAAD,EAAeC,GAAf,EAA+B;AACjD,WACE;AACE,MAAA,SAAS,YAAKV,mBAAL,iBADX;AAEE,MAAA,KAAK,kCACGA,mBADH,WACsCU,GADtC,CAFP;AAKE,MAAA,SAAS,sBAAeA,GAAG,GAAG,EAArB,+BALX;AAME,MAAA,GAAG,EAAEA,GANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGD,KARH,CADF;AAYD,GAbA,CADH,CADF,CAnBF,CADF;AAwCD,CA/CM,C,CAiDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// Core\nimport React from \"react\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_DharmaType = {\n  text: string;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\nexport const DharmaTypeClassName = \"dharma-laxalt\";\n\n/**\n * @name DharmaType\n * @author Peter Laxalt\n *\n */\nexport const DharmaType: React.FunctionComponent<LXLT_DharmaType> = ({\n  text,\n}) => {\n  let characterArray = text.split(\"\");\n\n  console.log(characterArray);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 215.21 173.21\"\n      preserveAspectRatio=\"none\"\n      className={`${DharmaTypeClassName}`}\n    >\n      <defs>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n          .${DharmaTypeClassName}__text__char {\n            font-size: 173.56px;\n            font-family: DharmaGothicC-ExBold, Dharma Gothic C;\n            font-weight: 700;\n            letter-spacing: 0em;\n          }`,\n          }}\n        />\n      </defs>\n      <g>\n        <g className={`${DharmaTypeClassName}__text`}>\n          {characterArray.map((char: string, idx: number) => {\n            return (\n              <text\n                className={`${DharmaTypeClassName}__text__char`}\n                style={{\n                  [`--${DharmaTypeClassName}-key` as any]: idx,\n                }}\n                transform={`translate(${idx * 50} 170.53) scale(1.15, 1.39)`}\n                key={idx}\n              >\n                {char}\n              </text>\n            );\n          })}\n        </g>\n      </g>\n    </svg>\n  );\n};\n\n// <text\n//   className={`${DharmaTypeClassName}__text`}\n//   transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n// >\n//   {characterArray.map((char: string, idx: number) => {\n//     return (\n//       <span\n//         key={idx}\n//         className={`${DharmaTypeClassName}__text__char`}\n//         style={{\n//           [`--${DharmaTypeClassName}-key` as any]: idx,\n//         }}\n//       >\n//         {char}\n//       </span>\n//     );\n//   })}\n// </text>\n"]},"metadata":{},"sourceType":"module"}