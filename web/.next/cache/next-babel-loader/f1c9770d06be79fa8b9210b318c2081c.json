{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/pages/projects/test.tsx\";\nvar __jsx = React.createElement;\nimport React, { PureComponent } from \"react\";\nimport { Layout } from \"../../components/Layout/Layout\";\nimport Sketch from \"react-p5\";\n\nvar Test =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Test, _PureComponent);\n\n  function Test(setup, draw, props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this, props));\n    _this.setup = setup;\n    _this.draw = draw;\n    _this.state = {\n      domLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        domLoaded: true\n      });\n\n      if (true) {\n        var x = 0;\n        var scale = 50;\n        var initialScale = 1500;\n        var canvasX = window.innerWidth;\n        var canvasY = window.innerHeight;\n        var color = {\n          primary: \"rgba(0, 0, 0, .3)\",\n          primaryAlpha: \"rgba(0, 0, 0, 1)\",\n          secondary: \"#000000\",\n          bg: \"#ffffff\",\n          white: \"#ffffff\"\n        };\n\n        this.setup = function (p5, parent) {\n          // Our Canvas\n          var sketchCanvas = p5.createCanvas(canvasX, canvasY);\n          sketchCanvas.parent(\"sketch\");\n        };\n\n        this.draw = function (p5) {\n          scale += 1;\n          x = x * 1.1 + 2;\n          p5.noFill();\n          p5.stroke(color.primary);\n\n          for (var i = -1500; i < 10; i++) {\n            p5.ellipse(i * 200, p5.windowHeight / 2, Math.sin(scale) * (Math.sin(scale) * initialScale), Math.sin(scale) * (Math.sin(scale) * initialScale));\n            p5.strokeWeight(0.5);\n          }\n        };\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Test Hello \"), this.state.domLoaded == true ? __jsx(Sketch, {\n        setup: this.setup,\n        draw: this.draw,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }) : \"Loading\");\n    }\n  }]);\n\n  return Test;\n}(PureComponent);\n\nexport default Test;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/pages/projects/test.tsx"],"names":["React","PureComponent","Layout","Sketch","Test","setup","draw","props","state","domLoaded","setState","x","scale","initialScale","canvasX","window","innerWidth","canvasY","innerHeight","color","primary","primaryAlpha","secondary","bg","white","p5","parent","sketchCanvas","createCanvas","noFill","stroke","i","ellipse","windowHeight","Math","sin","strokeWeight"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAQMC,I;;;;;AACJ,gBAAmBC,KAAnB,EAAsCC,IAAtC,EAAiDC,KAAjD,EAA6D;AAAA;;AAAA;;AAC3D,8EAAMA,KAAN;AAD2D,UAA1CF,KAA0C,GAA1CA,KAA0C;AAAA,UAAvBC,IAAuB,GAAvBA,IAAuB;AAG3D,UAAKE,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAH2D;AAM5D;;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AACZD,QAAAA,SAAS,EAAE;AADC,OAAd;;AAIA,gBAAmC;AACjC,YAAIE,CAAC,GAAG,CAAR;AACA,YAAIC,KAAK,GAAG,EAAZ;AACA,YAAIC,YAAY,GAAG,IAAnB;AACA,YAAIC,OAAO,GAAGC,MAAM,CAACC,UAArB;AACA,YAAIC,OAAO,GAAGF,MAAM,CAACG,WAArB;AAEA,YAAIC,KAAK,GAAG;AACVC,UAAAA,OAAO,EAAE,mBADC;AAEVC,UAAAA,YAAY,EAAE,kBAFJ;AAGVC,UAAAA,SAAS,EAAE,SAHD;AAIVC,UAAAA,EAAE,EAAE,SAJM;AAKVC,UAAAA,KAAK,EAAE;AALG,SAAZ;;AAQA,aAAKnB,KAAL,GAAa,UAACoB,EAAD,EAAUC,MAAV,EAA0B;AACrC;AACA,cAAIC,YAAY,GAAGF,EAAE,CAACG,YAAH,CAAgBd,OAAhB,EAAyBG,OAAzB,CAAnB;AACAU,UAAAA,YAAY,CAACD,MAAb,CAAoB,QAApB;AACD,SAJD;;AAMA,aAAKpB,IAAL,GAAY,UAACmB,EAAD,EAAa;AACvBb,UAAAA,KAAK,IAAI,CAAT;AACAD,UAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAU,CAAd;AAEAc,UAAAA,EAAE,CAACI,MAAH;AACAJ,UAAAA,EAAE,CAACK,MAAH,CAAUX,KAAK,CAACC,OAAhB;;AAEA,eAAK,IAAIW,CAAC,GAAG,CAAC,IAAd,EAAoBA,CAAC,GAAG,EAAxB,EAA4BA,CAAC,EAA7B,EAAiC;AAC/BN,YAAAA,EAAE,CAACO,OAAH,CACED,CAAC,GAAG,GADN,EAEEN,EAAE,CAACQ,YAAH,GAAkB,CAFpB,EAGEC,IAAI,CAACC,GAAL,CAASvB,KAAT,KAAmBsB,IAAI,CAACC,GAAL,CAASvB,KAAT,IAAkBC,YAArC,CAHF,EAIEqB,IAAI,CAACC,GAAL,CAASvB,KAAT,KAAmBsB,IAAI,CAACC,GAAL,CAASvB,KAAT,IAAkBC,YAArC,CAJF;AAMAY,YAAAA,EAAE,CAACW,YAAH,CAAgB,GAAhB;AACD;AACF,SAhBD;AAiBD;AACF;;;6BAEQ;AACP,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEG,KAAK5B,KAAL,CAAWC,SAAX,IAAwB,IAAxB,GACC,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKJ,KAApB;AAA2B,QAAA,IAAI,EAAE,KAAKC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC,SALJ,CADF;AAUD;;;;EAlEgBL,a;;AAqEnB,eAAeG,IAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Layout } from \"../../components/Layout/Layout\";\nimport Sketch from \"react-p5\";\n\ninterface TestState {\n  domLoaded: boolean;\n  setup: any;\n  draw: any;\n}\n\nclass Test extends PureComponent<{ setup: any; draw: any }, TestState> {\n  constructor(public setup: any, public draw: any, props: any) {\n    super(props);\n\n    this.state = {\n      domLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      domLoaded: true\n    });\n\n    if (typeof window !== \"undefined\") {\n      let x = 0;\n      let scale = 50;\n      let initialScale = 1500;\n      let canvasX = window.innerWidth;\n      let canvasY = window.innerHeight;\n\n      let color = {\n        primary: \"rgba(0, 0, 0, .3)\",\n        primaryAlpha: \"rgba(0, 0, 0, 1)\",\n        secondary: \"#000000\",\n        bg: \"#ffffff\",\n        white: \"#ffffff\"\n      };\n\n      this.setup = (p5: any, parent: any) => {\n        // Our Canvas\n        let sketchCanvas = p5.createCanvas(canvasX, canvasY);\n        sketchCanvas.parent(\"sketch\");\n      };\n\n      this.draw = (p5: any) => {\n        scale += 1;\n        x = x * 1.1 + 2;\n\n        p5.noFill();\n        p5.stroke(color.primary);\n\n        for (let i = -1500; i < 10; i++) {\n          p5.ellipse(\n            i * 200,\n            p5.windowHeight / 2,\n            Math.sin(scale) * (Math.sin(scale) * initialScale),\n            Math.sin(scale) * (Math.sin(scale) * initialScale)\n          );\n          p5.strokeWeight(0.5);\n        }\n      };\n    }\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h1>Test Hello </h1>\n        {this.state.domLoaded == true ? (\n          <Sketch setup={this.setup} draw={this.draw} />\n        ) : (\n          \"Loading\"\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}