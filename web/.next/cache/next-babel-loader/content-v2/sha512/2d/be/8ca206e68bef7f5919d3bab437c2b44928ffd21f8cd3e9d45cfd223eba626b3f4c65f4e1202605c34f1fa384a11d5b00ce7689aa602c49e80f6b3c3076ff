{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectMetaSection/ProjectMetaSection.tsx\",\n    _this = this;\n\n// Core\nimport React from \"react\"; // Types\n\n// Constants\nimport { TableRowListingClassName } from \"../../../components/Sections/TableListings/styles.scss\"; // Components\n\nimport { AccordionListingRow } from \"../../../components/Sections/AccordionListingRow\";\nimport { TableColumnListing } from \"../../../components/Sections/TableListings\";\nimport { TableRowListing } from \"../../../components/Sections/TableListings/TableRowListings\"; // Begin Component\n// __________________________________________________________________________________________\n\nexport var ProjectMetaSectionClassName = \"project-meta-section\";\n/**\n *\n * @name ProjectMetaSection\n * @author Peter Laxalt\n *\n */\n\nvar ProjectMetaSection = function ProjectMetaSection(_ref) {\n  var project = _ref.project;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\".concat(ProjectMetaSectionClassName),\n    children: [project.meta && project.meta.team && /*#__PURE__*/_jsxDEV(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: \"Shoutouts\",\n      labelRight: \"Credits\",\n      children: [project.meta && project.meta.team && project.meta.team.core && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--team-table\"),\n        data: project.meta.team.core.map(function (person) {\n          var field = [];\n          field[0] = person.name;\n          field[1] = person.role;\n          field[2] = person.web;\n          field[3] = person.contact;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Team\",\n        tableHeaders: Object.keys(project.meta.team.core[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this), project.meta && project.meta.team && project.meta.team.mentions && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--team-table\"),\n        data: project.meta.team.mentions.map(function (person) {\n          var field = [];\n          field[0] = person.name;\n          field[1] = person.role;\n          field[2] = person.web;\n          field[3] = person.contact;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Shoutouts\",\n        tableHeaders: Object.keys(project.meta.team.core[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this), project.meta && project.meta.tools && /*#__PURE__*/_jsxDEV(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: \"Approach\",\n      labelRight: \"Tools\",\n      children: [project.meta && project.meta.tools && project.meta.tools.software && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--tools-table\"),\n        data: project.meta.tools.software.map(function (tool) {\n          var field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Software\",\n        tableHeaders: Object.keys(project.meta.tools.software[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, _this), project.meta && project.meta.tools && project.meta.tools.gear && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--tools-table\"),\n        data: project.meta.tools.gear.map(function (tool) {\n          var field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Gear\",\n        tableHeaders: Object.keys(project.meta.tools.gear[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, _this), project.meta && project.meta.tools && project.meta.tools.frontend && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--tools-table\"),\n        data: project.meta.tools.frontend.map(function (tool) {\n          var field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Frontend\",\n        tableHeaders: Object.keys(project.meta.tools.frontend[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, _this), project.meta && project.meta.tools && project.meta.tools.backend && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--tools-table\"),\n        data: project.meta.tools.backend.map(function (tool) {\n          var field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Backend\",\n        tableHeaders: Object.keys(project.meta.tools.backend[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, _this), project.meta && project.meta.awards && /*#__PURE__*/_jsxDEV(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: \"Awards\",\n      labelRight: \"Wins\",\n      children: [project.meta && project.meta.awards && project.meta.awards.items && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--tools-table\"),\n        data: project.meta.awards.items.map(function (award) {\n          var field = [];\n          field[0] = award.name;\n          field[1] = award.provider;\n          field[2] = award.year;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Awards\",\n        tableHeaders: Object.keys(project.meta.awards.items[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, _this), project.meta && project.meta.awards && project.meta.awards.mentions && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--tools-table\"),\n        data: project.meta.awards.mentions.map(function (award) {\n          var field = [];\n          field[0] = award.name;\n          field[1] = award.publisher;\n          field[2] = award.year;\n          return {\n            fields: field\n          };\n        }),\n        tableName: \"Mentions\",\n        tableHeaders: Object.keys(project.meta.awards.mentions[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, _this), project.meta && project.meta.awards && project.meta.awards.wins && /*#__PURE__*/_jsxDEV(TableColumnListing, {\n        hasSidebar: true,\n        addClass: \"\".concat(TableRowListingClassName, \"--wins-table\"),\n        data: project.meta.awards.wins.map(function (win) {\n          return {\n            label: win\n          };\n        }),\n        tableName: \"Wins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ProjectMetaSection;\nexport default ProjectMetaSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectMetaSection\");","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectMetaSection/ProjectMetaSection.tsx"],"names":["React","TableRowListingClassName","AccordionListingRow","TableColumnListing","TableRowListing","ProjectMetaSectionClassName","ProjectMetaSection","project","meta","team","core","map","person","field","name","role","web","contact","fields","Object","keys","mentions","tools","software","tool","purpose","gear","frontend","backend","awards","items","award","provider","year","publisher","wins","win","label"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAGA;AACA,SAASC,wBAAT,QAAyC,wDAAzC,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,kDAApC;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,eAAT,QAAgC,6DAAhC,C,CAEA;AACA;;AAMA,OAAO,IAAMC,2BAA2B,GAAG,sBAApC;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAwD,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC7E,sBACE;AAAK,IAAA,SAAS,YAAKF,2BAAL,CAAd;AAAA,eACGE,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaC,IAA7B,iBACC,QAAC,mBAAD;AACE,MAAA,UAAU,EAAE,IADd;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,SAAS,aAHX;AAIE,MAAA,UAAU,WAJZ;AAAA,iBAMGF,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaC,IAA7B,IAAqCF,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkBC,IAAvD,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAKT,wBAAL,iBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkBC,IAAlB,CAAuBC,GAAvB,CAA2B,UAACC,MAAD,EAAY;AAC3C,cAAIC,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACE,IAAlB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACG,IAAlB;AACAF,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACI,GAAlB;AACAH,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACK,OAAlB;AAEA,iBAAO;AACLC,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SAXK,CAHR;AAeE,QAAA,SAAS,QAfX;AAgBE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkBC,IAAlB,CAAuB,CAAvB,CAAZ;AAhBhB;AAAA;AAAA;AAAA;AAAA,eAPJ,EA2BGH,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaC,IAA7B,IAAqCF,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkBY,QAAvD,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAKpB,wBAAL,iBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkBY,QAAlB,CAA2BV,GAA3B,CAA+B,UAACC,MAAD,EAAY;AAC/C,cAAIC,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACE,IAAlB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACG,IAAlB;AACAF,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACI,GAAlB;AACAH,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,MAAM,CAACK,OAAlB;AAEA,iBAAO;AACLC,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SAXK,CAHR;AAeE,QAAA,SAAS,aAfX;AAgBE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkBC,IAAlB,CAAuB,CAAvB,CAAZ;AAhBhB;AAAA;AAAA;AAAA;AAAA,eA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAoDGH,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAac,KAA7B,iBACC,QAAC,mBAAD;AACE,MAAA,UAAU,EAAE,IADd;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,SAAS,YAHX;AAIE,MAAA,UAAU,SAJZ;AAAA,iBAMGf,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAac,KAA7B,IAAsCf,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBC,QAAzD,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAKtB,wBAAL,kBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBC,QAAnB,CAA4BZ,GAA5B,CAAgC,UAACa,IAAD,EAAU;AAC9C,cAAIX,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACV,IAAhB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACC,OAAhB;AAEA,iBAAO;AACLP,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SATK,CAHR;AAaE,QAAA,SAAS,YAbX;AAcE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBC,QAAnB,CAA4B,CAA5B,CAAZ;AAdhB;AAAA;AAAA;AAAA;AAAA,eAPJ,EAyBGhB,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAac,KAA7B,IAAsCf,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBI,IAAzD,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAKzB,wBAAL,kBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBI,IAAnB,CAAwBf,GAAxB,CAA4B,UAACa,IAAD,EAAU;AAC1C,cAAIX,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACV,IAAhB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACC,OAAhB;AAEA,iBAAO;AACLP,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SATK,CAHR;AAaE,QAAA,SAAS,QAbX;AAcE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBI,IAAnB,CAAwB,CAAxB,CAAZ;AAdhB;AAAA;AAAA;AAAA;AAAA,eA1BJ,EA4CGnB,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAac,KAA7B,IAAsCf,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBK,QAAzD,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAK1B,wBAAL,kBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBK,QAAnB,CAA4BhB,GAA5B,CAAgC,UAACa,IAAD,EAAU;AAC9C,cAAIX,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACV,IAAhB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACC,OAAhB;AAEA,iBAAO;AACLP,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SATK,CAHR;AAaE,QAAA,SAAS,YAbX;AAcE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBK,QAAnB,CAA4B,CAA5B,CAAZ;AAdhB;AAAA;AAAA;AAAA;AAAA,eA7CJ,EA+DGpB,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAac,KAA7B,IAAsCf,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBM,OAAzD,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAK3B,wBAAL,kBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBM,OAAnB,CAA2BjB,GAA3B,CAA+B,UAACa,IAAD,EAAU;AAC7C,cAAIX,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACV,IAAhB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWW,IAAI,CAACC,OAAhB;AAEA,iBAAO;AACLP,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SATK,CAHR;AAaE,QAAA,SAAS,WAbX;AAcE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAac,KAAb,CAAmBM,OAAnB,CAA2B,CAA3B,CAAZ;AAdhB;AAAA;AAAA;AAAA;AAAA,eAhEJ;AAAA;AAAA;AAAA;AAAA;AAAA,aArDJ,EAyIGrB,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaqB,MAA7B,iBACC,QAAC,mBAAD;AACE,MAAA,UAAU,EAAE,IADd;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,SAAS,UAHX;AAIE,MAAA,UAAU,QAJZ;AAAA,iBAMGtB,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaqB,MAA7B,IAAuCtB,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBC,KAA3D,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAK7B,wBAAL,kBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBC,KAApB,CAA0BnB,GAA1B,CAA8B,UAACoB,KAAD,EAAW;AAC7C,cAAIlB,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWkB,KAAK,CAACjB,IAAjB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWkB,KAAK,CAACC,QAAjB;AACAnB,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWkB,KAAK,CAACE,IAAjB;AAEA,iBAAO;AACLf,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SAVK,CAHR;AAcE,QAAA,SAAS,UAdX;AAeE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBC,KAApB,CAA0B,CAA1B,CAAZ;AAfhB;AAAA;AAAA;AAAA;AAAA,eAPJ,EA0BGvB,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaqB,MAA7B,IAAuCtB,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBR,QAA3D,iBACC,QAAC,eAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAKpB,wBAAL,kBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBR,QAApB,CAA6BV,GAA7B,CAAiC,UAACoB,KAAD,EAAW;AAChD,cAAIlB,KAAe,GAAG,EAAtB;AAEAA,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWkB,KAAK,CAACjB,IAAjB;AACAD,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWkB,KAAK,CAACG,SAAjB;AACArB,UAAAA,KAAK,CAAC,CAAD,CAAL,GAAWkB,KAAK,CAACE,IAAjB;AAEA,iBAAO;AACLf,YAAAA,MAAM,EAAEL;AADH,WAAP;AAGD,SAVK,CAHR;AAcE,QAAA,SAAS,YAdX;AAeE,QAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBR,QAApB,CAA6B,CAA7B,CAAZ;AAfhB;AAAA;AAAA;AAAA;AAAA,eA3BJ,EA8CGd,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaqB,MAA7B,IAAuCtB,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBM,IAA3D,iBACC,QAAC,kBAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,QAAQ,YAAKlC,wBAAL,iBAFV;AAGE,QAAA,IAAI,EAAEM,OAAO,CAACC,IAAR,CAAaqB,MAAb,CAAoBM,IAApB,CAAyBxB,GAAzB,CAA6B,UAACyB,GAAD,EAAS;AAC1C,iBAAO;AACLC,YAAAA,KAAK,EAAED;AADF,WAAP;AAGD,SAJK,CAHR;AAQE,QAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,eA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,aA1IJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA0MD,CA3MD;;KAAM9B,kB;AA6MN,eAAeA,kBAAf","sourcesContent":["// Core\nimport { NextPage } from \"next\";\nimport React from \"react\";\n\n// Types\nimport { LXLT_Project } from \"../../../constants/site/Settings\";\n\n// Constants\nimport { TableRowListingClassName } from \"../../../components/Sections/TableListings/styles.scss\";\n\n// Components\nimport { AccordionListingRow } from \"../../../components/Sections/AccordionListingRow\";\nimport { TableColumnListing } from \"../../../components/Sections/TableListings\";\nimport { TableRowListing } from \"../../../components/Sections/TableListings/TableRowListings\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LXLT_ProjectMetaSection = {\n  project: LXLT_Project;\n};\n\nexport const ProjectMetaSectionClassName = \"project-meta-section\";\n\n/**\n *\n * @name ProjectMetaSection\n * @author Peter Laxalt\n *\n */\nconst ProjectMetaSection: NextPage<LXLT_ProjectMetaSection> = ({ project }) => {\n  return (\n    <div className={`${ProjectMetaSectionClassName}`}>\n      {project.meta && project.meta.team && (\n        <AccordionListingRow\n          hasSidebar={true}\n          alternativeStyle={true}\n          labelLeft={`Shoutouts`}\n          labelRight={`Credits`}\n        >\n          {project.meta && project.meta.team && project.meta.team.core && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--team-table`}\n              data={project.meta.team.core.map((person) => {\n                let field: string[] = [];\n\n                field[0] = person.name;\n                field[1] = person.role;\n                field[2] = person.web;\n                field[3] = person.contact;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Team`}\n              tableHeaders={Object.keys(project.meta.team.core[0])}\n            />\n          )}\n\n          {project.meta && project.meta.team && project.meta.team.mentions && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--team-table`}\n              data={project.meta.team.mentions.map((person) => {\n                let field: string[] = [];\n\n                field[0] = person.name;\n                field[1] = person.role;\n                field[2] = person.web;\n                field[3] = person.contact;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Shoutouts`}\n              tableHeaders={Object.keys(project.meta.team.core[0])}\n            />\n          )}\n        </AccordionListingRow>\n      )}\n\n      {project.meta && project.meta.tools && (\n        <AccordionListingRow\n          hasSidebar={true}\n          alternativeStyle={true}\n          labelLeft={`Approach`}\n          labelRight={`Tools`}\n        >\n          {project.meta && project.meta.tools && project.meta.tools.software && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.software.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Software`}\n              tableHeaders={Object.keys(project.meta.tools.software[0])}\n            />\n          )}\n\n          {project.meta && project.meta.tools && project.meta.tools.gear && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.gear.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Gear`}\n              tableHeaders={Object.keys(project.meta.tools.gear[0])}\n            />\n          )}\n\n          {project.meta && project.meta.tools && project.meta.tools.frontend && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.frontend.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Frontend`}\n              tableHeaders={Object.keys(project.meta.tools.frontend[0])}\n            />\n          )}\n\n          {project.meta && project.meta.tools && project.meta.tools.backend && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.backend.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Backend`}\n              tableHeaders={Object.keys(project.meta.tools.backend[0])}\n            />\n          )}\n        </AccordionListingRow>\n      )}\n\n      {project.meta && project.meta.awards && (\n        <AccordionListingRow\n          hasSidebar={true}\n          alternativeStyle={true}\n          labelLeft={`Awards`}\n          labelRight={`Wins`}\n        >\n          {project.meta && project.meta.awards && project.meta.awards.items && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.awards.items.map((award) => {\n                let field: string[] = [];\n\n                field[0] = award.name;\n                field[1] = award.provider;\n                field[2] = award.year;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Awards`}\n              tableHeaders={Object.keys(project.meta.awards.items[0])}\n            />\n          )}\n\n          {project.meta && project.meta.awards && project.meta.awards.mentions && (\n            <TableRowListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.awards.mentions.map((award) => {\n                let field: string[] = [];\n\n                field[0] = award.name;\n                field[1] = award.publisher;\n                field[2] = award.year;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Mentions`}\n              tableHeaders={Object.keys(project.meta.awards.mentions[0])}\n            />\n          )}\n\n          {project.meta && project.meta.awards && project.meta.awards.wins && (\n            <TableColumnListing\n              hasSidebar={true}\n              addClass={`${TableRowListingClassName}--wins-table`}\n              data={project.meta.awards.wins.map((win) => {\n                return {\n                  label: win,\n                };\n              })}\n              tableName={`Wins`}\n\n            />\n          )}\n        </AccordionListingRow>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectMetaSection;\n"]},"metadata":{},"sourceType":"module"}