{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n// Core\nimport React, { createRef, PureComponent } from \"react\"; // Styles\n\nimport { CanvasCursorStyle, CanvasCursorClassName, CanvasCursorGlobalStyles } from \"./styles.scss\"; // Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Cursor\nexport var CanvasCursor = /*#__PURE__*/function (_PureComponent) {\n  _inherits(CanvasCursor, _PureComponent);\n\n  var _super = _createSuper(CanvasCursor);\n\n  function CanvasCursor(props) {\n    var _this;\n\n    _classCallCheck(this, CanvasCursor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"ctx\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"canvasRef\", /*#__PURE__*/createRef());\n\n    _this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseIsPressed: false,\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0\n      },\n      helper: {\n        text: \"\",\n        lastOpacity: 0,\n        opacity: 0\n      },\n      vw: 0,\n      vh: 0\n    };\n    _this.ctx;\n    _this.calculateSize = _this.calculateSize.bind(_assertThisInitialized(_this));\n    _this.renderMouse = _this.renderMouse.bind(_assertThisInitialized(_this));\n    _this.startDrawing = _this.startDrawing.bind(_assertThisInitialized(_this));\n    _this.drawLine = _this.drawLine.bind(_assertThisInitialized(_this));\n    _this.stopDrawing = _this.stopDrawing.bind(_assertThisInitialized(_this));\n    _this.renderLine = _this.renderLine.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CanvasCursor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      // _____________________\n      // Setup our sizes\n      this.calculateSize();\n      this.setState({\n        mouseX: window.innerWidth / 2,\n        mouseY: window.innerHeight / 2,\n        mouseCursor: {\n          radius: 10,\n          lastX: window.innerWidth / 2,\n          lastY: window.innerHeight / 2\n        }\n      }); // _____________________\n      // Update initial coordinates\n\n      this.updateMouseCoords(); // _____________________\n      // Add event listeners\n\n      window.addEventListener(\"mousemove\", function (e) {\n        _this2.setState({\n          mouseX: e.clientX,\n          mouseY: e.clientY\n        });\n\n        _this2.drawLine(e);\n      });\n      window.addEventListener(\"resize\", this.calculateSize, false);\n      window.addEventListener(\"mousedown\", this.startDrawing);\n      window.addEventListener(\"mouseup\", this.stopDrawing); // window.addEventListener(\"keydown\", this.clearCanvas);\n    } // ______________________________\n    // Calculate Sizes\n\n  }, {\n    key: \"calculateSize\",\n    value: function calculateSize() {\n      this.setState({\n        vw: window.innerWidth,\n        vh: window.innerHeight\n      });\n\n      if (this.canvasRef.current) {\n        this.canvasRef.current.width = window.innerWidth;\n        this.canvasRef.current.height = window.innerHeight;\n      }\n    } // ______________________________\n    // Canvas Reference\n\n  }, {\n    key: \"updateMouseCoords\",\n    // ______________________________\n    // Update Mouse Coordinates\n    value: function updateMouseCoords() {\n      requestAnimationFrame(this.renderMouse);\n    } // ______________________________\n    // Render to canvas\n\n  }, {\n    key: \"renderMouse\",\n    value: function renderMouse() {\n      if (this.canvasRef.current) {\n        var ctx = this.canvasRef.current.getContext(\"2d\");\n        this.setState({\n          mouseCursor: {\n            radius: 10,\n            lastX: this.lerp(this.state.mouseCursor.lastX, this.state.mouseX, 0.25),\n            lastY: this.lerp(this.state.mouseCursor.lastY, this.state.mouseY, 0.25)\n          }\n        });\n        ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n        ctx.beginPath();\n        ctx.arc(this.state.mouseCursor.lastX, this.state.mouseCursor.lastY, this.state.mouseCursor.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.closePath(); // _____________________________\n        // Scroll Down Helper\n\n        if (window.scrollY < 100 && this.state.mouseY > 100 && this.state.mouseY < window.innerHeight - 100) {\n          this.setState({\n            helper: {\n              text: \"Scroll Down\",\n              lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n              opacity: 1\n            }\n          });\n          ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n          ctx.fillStyle = \"rgba(255,255,255, \".concat(this.state.helper.lastOpacity, \")\");\n          ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n        } else {\n          this.setState({\n            helper: {\n              text: \"Scroll Down\",\n              lastOpacity: this.lerp(this.state.helper.lastOpacity, this.state.helper.opacity, 0.15),\n              opacity: 0\n            }\n          });\n          ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n          ctx.fillStyle = \"rgba(255,255,255, \".concat(this.state.helper.lastOpacity, \")\");\n          ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n        } // ____________________________\n        // Recursively animate\n\n\n        requestAnimationFrame(this.renderMouse);\n      }\n    } // ______________________________\n    // LERP Helper Function\n\n  }, {\n    key: \"lerp\",\n    value: function lerp(a, b, n) {\n      return (1 - n) * a + n * b;\n    } // ____________________________\n    // Drawing Functions\n\n  }, {\n    key: \"startDrawing\",\n    value: function startDrawing(e) {\n      this.setState({\n        mouseIsPressed: true\n      });\n    }\n  }, {\n    key: \"drawLine\",\n    value: function drawLine(e) {\n      if (this.state.mouseIsPressed === true) {\n        console.log(\"DRAWING\");\n        this.renderLine(\"#ffffff\", this.state.mouseX, this.state.mouseY, this.state.mouseCursor.lastX, this.state.mouseCursor.lastY);\n      }\n    }\n  }, {\n    key: \"stopDrawing\",\n    value: function stopDrawing() {\n      this.setState({\n        mouseIsPressed: false\n      });\n    } // clearCanvas(whenPressKey) {\n    //   if (whenPressKey.keyCode == key.C) {\n    //     paper.clearRect(0, 0, square.width, square.height);\n    //   }\n    // }\n\n  }, {\n    key: \"renderLine\",\n    value: function renderLine(color, xStart, yStart, xEnd, yEnd) {\n      var ctx = this.canvasRef.current.getContext(\"2d\");\n      console.count(\"rendering line\");\n      console.log(ctx);\n      ctx.beginPath();\n      ctx.strokeStyle = color;\n      ctx.lineWidth = 2;\n      ctx.moveTo(xStart, yStart);\n      ctx.lineTo(xEnd, yEnd);\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CanvasCursorGlobalStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CanvasCursorStyle, {\n          ref: this.canvasRef,\n          className: \"\".concat(CanvasCursorClassName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n\n  return CanvasCursor;\n}(PureComponent);","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx"],"names":["React","createRef","PureComponent","CanvasCursorStyle","CanvasCursorClassName","CanvasCursorGlobalStyles","CanvasCursor","props","state","mouseX","mouseY","mouseIsPressed","mouseCursor","radius","lastX","lastY","helper","text","lastOpacity","opacity","vw","vh","ctx","calculateSize","bind","renderMouse","startDrawing","drawLine","stopDrawing","renderLine","init","setState","window","innerWidth","innerHeight","updateMouseCoords","addEventListener","e","clientX","clientY","canvasRef","current","width","height","requestAnimationFrame","getContext","lerp","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath","scrollY","font","fillText","a","b","n","console","log","color","xStart","yStart","xEnd","yEnd","count","strokeStyle","lineWidth","moveTo","lineTo","stroke"],"mappings":"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","sourcesContent":["/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n\n// Core\nimport React, { createRef, PureComponent } from \"react\";\n\n// Styles\nimport {\n  CanvasCursorStyle,\n  CanvasCursorClassName,\n  CanvasCursorGlobalStyles,\n} from \"./styles.scss\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport type LXLT_CanvasCursor = {};\n\nexport type LXLT_CanvasCursor_State = {\n  mouseX: number;\n  mouseY: number;\n  mouseIsPressed: boolean;\n\n  mouseCursor: {\n    radius: number;\n    lastX: number;\n    lastY: number;\n  };\n\n  helper: {\n    text: string;\n    lastOpacity: number;\n    opacity: number;\n  };\n\n  vw: number;\n  vh: number;\n};\n\n// Cursor\nexport class CanvasCursor extends PureComponent<\n  LXLT_CanvasCursor,\n  LXLT_CanvasCursor_State\n> {\n  ctx: CanvasRenderingContext2D;\n\n  constructor(props: LXLT_CanvasCursor) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseIsPressed: false,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0,\n      },\n\n      helper: {\n        text: \"\",\n        lastOpacity: 0,\n        opacity: 0,\n      },\n\n      vw: 0,\n      vh: 0,\n    };\n\n    this.ctx;\n    this.calculateSize = this.calculateSize.bind(this);\n    this.renderMouse = this.renderMouse.bind(this);\n    this.startDrawing = this.startDrawing.bind(this);\n    this.drawLine = this.drawLine.bind(this);\n    this.stopDrawing = this.stopDrawing.bind(this);\n    this.renderLine = this.renderLine.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    // _____________________\n    // Setup our sizes\n    this.calculateSize();\n\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2,\n      },\n    });\n\n    // _____________________\n    // Update initial coordinates\n    this.updateMouseCoords();\n\n    // _____________________\n    // Add event listeners\n    window.addEventListener(\"mousemove\", (e) => {\n      this.setState({\n        mouseX: e.clientX,\n        mouseY: e.clientY,\n      });\n\n      this.drawLine(e);\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n    window.addEventListener(\"mousedown\", this.startDrawing);\n    window.addEventListener(\"mouseup\", this.stopDrawing);\n    // window.addEventListener(\"keydown\", this.clearCanvas);\n  }\n\n  // ______________________________\n  // Calculate Sizes\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight,\n    });\n\n    if (this.canvasRef.current) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  // ______________________________\n  // Canvas Reference\n  canvasRef: React.RefObject<HTMLCanvasElement> = createRef<HTMLCanvasElement>();\n\n  // ______________________________\n  // Update Mouse Coordinates\n  updateMouseCoords() {\n    requestAnimationFrame(this.renderMouse);\n  }\n\n  // ______________________________\n  // Render to canvas\n  renderMouse() {\n    if (this.canvasRef.current) {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n\n      this.setState({\n        mouseCursor: {\n          radius: 10,\n          lastX: this.lerp(\n            this.state.mouseCursor.lastX,\n            this.state.mouseX,\n            0.25\n          ),\n          lastY: this.lerp(\n            this.state.mouseCursor.lastY,\n            this.state.mouseY,\n            0.25\n          ),\n        },\n      });\n\n      ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n      ctx.beginPath();\n      ctx.arc(\n        this.state.mouseCursor.lastX,\n        this.state.mouseCursor.lastY,\n        this.state.mouseCursor.radius,\n        0,\n        Math.PI * 2,\n        false\n      );\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill();\n      ctx.closePath();\n\n      // _____________________________\n      // Scroll Down Helper\n      if (\n        window.scrollY < 100 &&\n        this.state.mouseY > 100 &&\n        this.state.mouseY < window.innerHeight - 100\n      ) {\n        this.setState({\n          helper: {\n            text: \"Scroll Down\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n            opacity: 1,\n          },\n        });\n\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(\n          this.state.helper.text,\n          this.state.mouseCursor.lastX + 15,\n          this.state.mouseCursor.lastY + -15\n        );\n      } else {\n        this.setState({\n          helper: {\n            text: \"Scroll Down\",\n            lastOpacity: this.lerp(\n              this.state.helper.lastOpacity,\n              this.state.helper.opacity,\n              0.15\n            ),\n            opacity: 0,\n          },\n        });\n\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(\n          this.state.helper.text,\n          this.state.mouseCursor.lastX + 15,\n          this.state.mouseCursor.lastY + -15\n        );\n      }\n\n      // ____________________________\n      // Recursively animate\n\n      requestAnimationFrame(this.renderMouse);\n    }\n  }\n\n  // ______________________________\n  // LERP Helper Function\n  lerp(a: number, b: number, n: number) {\n    return (1 - n) * a + n * b;\n  }\n\n  // ____________________________\n  // Drawing Functions\n  startDrawing(e) {\n    this.setState({\n      mouseIsPressed: true,\n    });\n  }\n\n  drawLine(e) {\n    if (this.state.mouseIsPressed === true) {\n      console.log(\"DRAWING\");\n\n      this.renderLine(\n        \"#ffffff\",\n        this.state.mouseX,\n        this.state.mouseY,\n        this.state.mouseCursor.lastX,\n        this.state.mouseCursor.lastY\n      );\n    }\n  }\n\n  stopDrawing() {\n    this.setState({\n      mouseIsPressed: false,\n    });\n  }\n\n  // clearCanvas(whenPressKey) {\n  //   if (whenPressKey.keyCode == key.C) {\n  //     paper.clearRect(0, 0, square.width, square.height);\n  //   }\n  // }\n\n  renderLine(\n    color: string,\n    xStart: number,\n    yStart: number,\n    xEnd: number,\n    yEnd: number\n  ) {\n    let ctx = this.canvasRef.current.getContext(\"2d\");\n\n    console.count(\"rendering line\");\n    console.log(ctx);\n\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.moveTo(xStart, yStart);\n    ctx.lineTo(xEnd, yEnd);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  render() {\n    return (\n      <>\n        {/* <UniversallyHideCursor /> */}\n        <CanvasCursorGlobalStyles />\n        <CanvasCursorStyle\n          ref={this.canvasRef}\n          className={`${CanvasCursorClassName}`}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}