{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n// Core\nimport React, { createRef, PureComponent } from \"react\";\n// Styles\nimport { CanvasCursorStyle, CanvasCursorClassName } from \"./styles.scss\"; // Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Cursor\nexport class CanvasCursor extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"ctx\", void 0);\n\n    _defineProperty(this, \"canvasRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0\n      },\n      vw: 0,\n      vh: 0\n    }; // this.setCursorPosition = this.setCursorPosition.bind(this);\n\n    this.ctx;\n    this.calculateSize = this.calculateSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.calculateSize();\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2\n      }\n    });\n    this.ctx = this.canvasRef.current.getContext(\"2d\");\n    window.addEventListener(\"mousemove\", e => {\n      this.setState({\n        mouseX: e.pageX,\n        mouseY: e.pageY\n      });\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n  }\n\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight\n    });\n\n    if (this.canvasRef) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  renderMouse() {\n    this.setState({\n      mouseCursor: {\n        radius: 10,\n        lastX: this.lerp(this.state.mouseCursor.lastX, this.state.mouseX, 0.25),\n        lastY: this.lerp(this.state.mouseCursor.lastY, this.state.mouseY, 0.25)\n      }\n    });\n    requestAnimationFrame(this.renderMouse);\n  }\n\n  lerp(a, b, n) {\n    return (1 - n) * a + n * b;\n  }\n\n  render() {\n    // const UniversallyHideCursor = createGlobalStyle`\n    //   body, html {\n    //     cursor: none !important;\n    //     a {\n    //       cursor: none !important;\n    //     }\n    //     * {\n    //       cursor: none !important;\n    //     }\n    //   }\n    // `;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CanvasCursorStyle, {\n        ref: this.canvasRef,\n        className: `${CanvasCursorClassName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx"],"names":["React","createRef","PureComponent","CanvasCursorStyle","CanvasCursorClassName","CanvasCursor","constructor","props","state","mouseX","mouseY","mouseCursor","radius","lastX","lastY","vw","vh","ctx","calculateSize","bind","componentDidMount","setState","window","innerWidth","innerHeight","canvasRef","current","getContext","addEventListener","e","pageX","pageY","width","height","renderMouse","lerp","requestAnimationFrame","a","b","n","render"],"mappings":"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","sourcesContent":["/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n\n// Core\nimport { request } from \"https\";\nimport React, { Component, createRef, PureComponent } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// Styles\nimport { CanvasCursorStyle, CanvasCursorClassName } from \"./styles.scss\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport type LXLT_CanvasCursor = {};\n\nexport type LXLT_CanvasCursor_State = {\n  mouseX: number;\n  mouseY: number;\n  mouseCursor: {\n    radius: number;\n    lastX: number;\n    lastY: number;\n  };\n\n  vw: number;\n  vh: number;\n};\n\n// Cursor\nexport class CanvasCursor extends PureComponent<\n  LXLT_CanvasCursor,\n  LXLT_CanvasCursor_State\n> {\n  ctx: CanvasRenderingContext2D;\n\n  constructor(props: LXLT_CanvasCursor) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0,\n      },\n\n      vw: 0,\n      vh: 0,\n    };\n\n    // this.setCursorPosition = this.setCursorPosition.bind(this);\n    this.ctx;\n    this.calculateSize = this.calculateSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.calculateSize();\n\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2,\n      },\n    });\n\n    this.ctx = this.canvasRef.current.getContext(\"2d\");\n\n    window.addEventListener(\"mousemove\", (e) => {\n      this.setState({\n        mouseX: e.pageX,\n        mouseY: e.pageY,\n      });\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n  }\n\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight,\n    });\n\n    if (this.canvasRef) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  renderMouse() {\n    this.setState({\n      mouseCursor: {\n        radius: 10,\n        lastX: this.lerp(this.state.mouseCursor.lastX, this.state.mouseX, 0.25),\n        lastY: this.lerp(this.state.mouseCursor.lastY, this.state.mouseY, 0.25),\n      },\n    });\n\n    requestAnimationFrame(this.renderMouse);\n  }\n\n  lerp(a: number, b: number, n: number) {\n    return (1 - n) * a + n * b;\n  }\n\n  canvasRef: React.RefObject<HTMLCanvasElement> = createRef<HTMLCanvasElement>();\n\n  render() {\n    // const UniversallyHideCursor = createGlobalStyle`\n    //   body, html {\n    //     cursor: none !important;\n\n    //     a {\n    //       cursor: none !important;\n    //     }\n\n    //     * {\n    //       cursor: none !important;\n    //     }\n    //   }\n    // `;\n\n    return (\n      <>\n        {/* <UniversallyHideCursor /> */}\n        <CanvasCursorStyle\n          ref={this.canvasRef}\n          className={`${CanvasCursorClassName}`}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}