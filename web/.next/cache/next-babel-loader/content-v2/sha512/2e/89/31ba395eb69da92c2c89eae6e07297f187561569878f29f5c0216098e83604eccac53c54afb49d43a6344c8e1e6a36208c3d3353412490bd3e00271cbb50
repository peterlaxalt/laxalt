{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx\";\n// Core\nimport Link from \"next/link\";\nimport React, { Fragment, useState } from \"react\";\n// Styles\nimport { GlobalSidebarPaneOffsetVariables, LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nexport const LayeredSidebar = ({\n  addClass,\n  panes\n}) => {\n  if (panes) {\n    const {\n      0: isHovered,\n      1: setHover\n    } = useState(false);\n    return /*#__PURE__*/_jsxDEV(LayeredSidebarStyle, {\n      className: `${LayeredSidebarClassName} ${addClass && addClass}`,\n      children: [/*#__PURE__*/_jsxDEV(GlobalSidebarPaneOffsetVariables, {\n        panes: panes.length,\n        isHovered: isHovered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${LayeredSidebarClassName}__inner`,\n        children: panes.map((pane, idx) => {\n          let paneItemsMajor = pane.items ? pane.items.filter(item => item.isMajor) : [];\n          let paneItemsMinor = pane.items ? pane.items.filter(item => !item.isMajor) : [];\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${LayeredSidebarClassName}__pane`,\n              onMouseEnter: () => idx == panes.length - 1 ? null : setHover(true),\n              onMouseLeave: () => idx == panes.length - 1 ? null : setHover(false),\n              style: {\n                opacity: idx === 3 ? 0 : 1\n              },\n              children: [pane.header && !pane.headerBadge ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${LayeredSidebarClassName}__pane__header`,\n                children: pane.header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this) : pane.headerBadge ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${LayeredSidebarClassName}__pane__header ${LayeredSidebarClassName}__pane__header--badge`,\n                children: /*#__PURE__*/_jsxDEV(pane.headerBadge, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this) : null, pane.items && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [paneItemsMajor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`,\n                  children: paneItemsMajor.map((paneItem, idxx) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isActive ? \"is-active\" : \"is-not-active\"}  ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          children: paneItem.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 35\n                      }, this)\n                    }, idxx + idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this), paneItemsMinor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`,\n                  children: paneItemsMinor.map((paneItem, idxx) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isActive ? \"is-active\" : \"is-not-active\"} ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          children: paneItem.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 144,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 35\n                      }, this)\n                    }, idxx + idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx"],"names":["Link","React","Fragment","useState","GlobalSidebarPaneOffsetVariables","LayeredSidebarClassName","LayeredSidebarStyle","LayeredSidebar","addClass","panes","isHovered","setHover","length","map","pane","idx","paneItemsMajor","items","filter","item","isMajor","paneItemsMinor","opacity","header","headerBadge","paneItem","idxx","isActive","href","label"],"mappings":"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","sourcesContent":["// Core\nimport Link from \"next/link\";\nimport React, { Fragment, useState } from \"react\";\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\n\n// Styles\nimport {\n  GlobalSidebarPaneOffsetVariables,\n  LayeredSidebarClassName,\n  LayeredSidebarStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_SidebarPaneItem = {\n  label: string;\n  href: string;\n  isMajor: boolean;\n  isActive: boolean;\n};\n\nexport type LXLT_SidebarPane = {\n  header?: string;\n  headerBadge?: () => JSX.Element;\n  items?: LXLT_SidebarPaneItem[];\n};\n\nexport type LXLT_LayeredSidebar = {\n  addClass?: string;\n  panes?: LXLT_SidebarPane[];\n};\n\n// Begin Data\n// __________________________________________________________________________________________\n\nexport const LayeredSidebar: React.FunctionComponent<LXLT_LayeredSidebar> = ({\n  addClass,\n  panes,\n}) => {\n  if (panes) {\n    const [isHovered, setHover] = useState(false);\n\n    return (\n      <LayeredSidebarStyle\n        className={`${LayeredSidebarClassName} ${addClass && addClass}`}\n      >\n        <GlobalSidebarPaneOffsetVariables\n          panes={panes.length}\n          isHovered={isHovered}\n        />\n\n        <div className={`${LayeredSidebarClassName}__inner`}>\n          {panes.map((pane: LXLT_SidebarPane, idx: number) => {\n            let paneItemsMajor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => item.isMajor)\n              : [];\n\n            let paneItemsMinor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => !item.isMajor)\n              : [];\n\n            return (\n              <Fragment key={idx}>\n                {/* ____________________________________________________________ */}\n                {/* Navigaton Pane */}\n                <div\n                  className={`${LayeredSidebarClassName}__pane`}\n                  onMouseEnter={() =>\n                    idx == panes.length - 1 ? null : setHover(true)\n                  }\n                  onMouseLeave={() =>\n                    idx == panes.length - 1 ? null : setHover(false)\n                  }\n                  style={{opacity: idx === 3 ? 0 : 1}}\n                >\n                  {/* ____________________________________________________________ */}\n                  {/* List header */}\n                  {pane.header && !pane.headerBadge ? (\n                    <div className={`${LayeredSidebarClassName}__pane__header`}>\n                      {pane.header}\n                    </div>\n                  ) : pane.headerBadge ? (\n                    <div\n                      className={`${LayeredSidebarClassName}__pane__header ${LayeredSidebarClassName}__pane__header--badge`}\n                    >\n                      <pane.headerBadge />\n                    </div>\n                  ) : null}\n\n                  {/* ____________________________________________________________ */}\n                  {/* List items */}\n                  {pane.items && (\n                    <>\n                      {/* ____________________________________________________________ */}\n                      {/* Major list items */}\n                      {paneItemsMajor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`}\n                        >\n                          {paneItemsMajor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isActive\n                                      ? \"is-active\"\n                                      : \"is-not-active\"\n                                  }  ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx + idx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n\n                      {/* ____________________________________________________________ */}\n                      {/* Minor list items */}\n                      {paneItemsMinor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`}\n                        >\n                          {paneItemsMinor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isActive\n                                      ? \"is-active\"\n                                      : \"is-not-active\"\n                                  } ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx + idx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n                    </>\n                  )}\n                </div>\n              </Fragment>\n            );\n          })}\n        </div>\n      </LayeredSidebarStyle>\n    );\n  } else {\n    return null;\n  }\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}