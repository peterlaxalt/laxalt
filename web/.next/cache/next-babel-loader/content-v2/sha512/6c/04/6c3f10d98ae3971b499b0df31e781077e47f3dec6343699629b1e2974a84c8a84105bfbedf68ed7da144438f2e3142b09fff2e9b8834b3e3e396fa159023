{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Core\nimport React, { useEffect, useState } from \"react\"; // Constants\n\n// Components\n// Styles\nimport { HeadlineWrapperClassName, HeadlineWrapperStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nexport var HeadlineTransitionThreshold = 200;\nexport var HeadlineWrapper = function HeadlineWrapper(_ref) {\n  var addClass = _ref.addClass,\n      children = _ref.children,\n      style = _ref.style;\n\n  var _useState = useState(false),\n      isScrolled = _useState[0],\n      toggleScroll = _useState[1];\n\n  var scrollModifier = \"\".concat(HeadlineWrapperClassName, \"--\").concat(isScrolled ? \"is-scrolled\" : \"is-not-scrolled\");\n\n  var listenToScroll = function listenToScroll() {\n    if (window.scrollY > HeadlineTransitionThreshold) {\n      toggleScroll(true);\n      return;\n    } else {\n      toggleScroll(false);\n      return;\n    }\n  };\n\n  useEffect(function () {\n    if (\"object\") {\n      window.addEventListener(\"scroll\", listenToScroll);\n    }\n\n    return function () {\n      window.removeEventListener(\"scroll\", listenToScroll);\n    };\n  });\n  return /*#__PURE__*/_jsx(HeadlineWrapperStyle, {\n    className: \"\".concat(HeadlineWrapperClassName, \" \").concat(scrollModifier, \" \").concat(addClass && addClass, \" \"),\n    style: _objectSpread({}, style),\n    children: children\n  });\n};\nexport var AfterHeadlineWrapper = function AfterHeadlineWrapper(_ref2) {\n  var addClass = _ref2.addClass,\n      children = _ref2.children,\n      style = _ref2.style;\n\n  var _useState2 = useState(false),\n      isScrolled = _useState2[0],\n      toggleScroll = _useState2[1];\n\n  var scrollModifier = \"\".concat(HeadlineWrapperClassName, \"__after--\").concat(isScrolled ? \"is-scrolled\" : \"is-not-scrolled\");\n\n  var listenToScroll = function listenToScroll() {\n    if (window.scrollY > HeadlineTransitionThreshold) {\n      toggleScroll(true);\n      return;\n    } else {\n      toggleScroll(false);\n      return;\n    }\n  };\n\n  useEffect(function () {\n    if (\"object\") {\n      window.addEventListener(\"scroll\", listenToScroll);\n    }\n\n    return function () {\n      window.removeEventListener(\"scroll\", listenToScroll);\n    };\n  });\n  return /*#__PURE__*/_jsx(HeadlineWrapperStyle, {\n    className: \"\".concat(HeadlineWrapperClassName, \"__after \").concat(scrollModifier, \" \").concat(addClass && addClass, \" \"),\n    style: _objectSpread({}, style),\n    children: children\n  });\n}; // End Component\n// ______________________________________________________________________________","map":null,"metadata":{},"sourceType":"module"}