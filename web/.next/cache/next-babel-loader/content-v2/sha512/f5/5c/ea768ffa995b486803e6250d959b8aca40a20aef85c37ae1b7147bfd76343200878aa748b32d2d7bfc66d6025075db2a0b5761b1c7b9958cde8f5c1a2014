{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectNextSection/ProjectNextSection.tsx\";\n// Core\nimport React, { useEffect, useRef, useState } from \"react\"; // Types\n\nimport { SiteProjects } from \"../../../constants/site/Settings\"; // Vendor\n\nimport gsap from \"gsap\"; // Components\n\nimport { ProjectCard } from \"../../ProjectCard\"; // Styles\n\nimport { ProjectNextSectionClassName, ProjectNextSectionStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nlet lastTranslateX = 0;\nexport const ProjectNextSection = /*#__PURE__*/React.memo(({\n  addClass = \"\"\n}) => {\n  const {\n    0: dynamicHeight,\n    1: setDynamicHeight\n  } = useState(null); // const [translateX, setTranslateX] = useState(0);\n  // const [windowSize, setWindowSize] = useState(0);\n\n  const {\n    0: isBreakPoint,\n    1: setBreakPoint\n  } = useState(false);\n  const {\n    0: isScrolled,\n    1: setScrolled\n  } = useState(false);\n  const containerRef = useRef();\n  const objectRef = useRef();\n  let currentTranslation = 0;\n  let boundingClientX = 0;\n\n  const calcDynamicHeight = objectWidth => {\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    return objectWidth - vw + vh;\n  };\n\n  const handleDynamicHeight = (ref, setDynamicHeight) => {\n    if (ref && ref.current) {\n      const objectWidth = ref.current.scrollWidth;\n      const dynamicHeight = calcDynamicHeight(objectWidth);\n      setDynamicHeight(dynamicHeight);\n    }\n  };\n\n  const applyScrollListener = ref => // setTranslateX: (translateX: number) => void\n  {\n    window.addEventListener(\"scroll\", () => {\n      const offsetTop = ref && ref.current ? -ref.current.offsetTop : 0; // setDharmaPaused(offsetTop < windowSize / -2);\n      // setTranslateX(offsetTop);\n\n      gsap.to(objectRef.current, {\n        x: offsetTop,\n        transition: 0.1,\n        // duration: 0.02,\n        ease: \"sine.out\"\n      });\n\n      if (offsetTop < window.innerWidth / -2) {\n        setBreakPoint(true);\n      } else {\n        setBreakPoint(false);\n      }\n\n      if (offsetTop < -100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n\n      window.dharmaPaused = offsetTop < window.innerWidth / -2;\n    });\n  };\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight); // setWindowSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ProjectNextSectionStyle, {\n      className: `${ProjectNextSectionClassName} ${ProjectNextSectionClassName}--${isScrolled ? `is-scrolled` : `is-not-scrolled`} ${ProjectNextSectionClassName}--${isBreakPoint ? `is-at-breakpoint` : `is-not-at-breakpoint`} ${ProjectNextSectionClassName}--${boundingClientX > lastTranslateX ? `is-at-end` : `is-not-at-end`} ${addClass && addClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ProjectNextSectionClassName}__outer`,\n        style: {\n          height: `${dynamicHeight}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ProjectNextSectionClassName}__sticky-wrapper`,\n          ref: containerRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${ProjectNextSectionClassName}__x-translate-wrapper` // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n            ,\n            ref: objectRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${ProjectNextSectionClassName}__horizontal-wrapper`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${ProjectNextSectionClassName}__content-wrapper`,\n                children: SiteProjects.map((item, idx) => {\n                  return /*#__PURE__*/_jsxDEV(ProjectCard, {\n                    count: idx + 1,\n                    total: SiteProjects.length,\n                    item: item\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}); // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectNextSection/ProjectNextSection.tsx"],"names":["React","useEffect","useRef","useState","SiteProjects","gsap","ProjectCard","ProjectNextSectionClassName","ProjectNextSectionStyle","lastTranslateX","ProjectNextSection","memo","addClass","dynamicHeight","setDynamicHeight","isBreakPoint","setBreakPoint","isScrolled","setScrolled","containerRef","objectRef","currentTranslation","boundingClientX","calcDynamicHeight","objectWidth","vw","window","innerWidth","vh","innerHeight","handleDynamicHeight","ref","current","scrollWidth","applyScrollListener","addEventListener","offsetTop","to","x","transition","ease","dharmaPaused","resizeHandler","height","map","item","idx","length"],"mappings":"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","sourcesContent":["// Core\nimport React, { useEffect, useRef, useState } from \"react\";\n\n// Types\nimport { LXLT_Project, SiteProjects } from \"../../../constants/site/Settings\";\n\n// Vendor\nimport gsap from \"gsap\";\n\n// Components\nimport { ProjectCard } from \"../../ProjectCard\";\n\n// Styles\nimport {\n  ProjectNextSectionClassName,\n  ProjectNextSectionStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_ProjectNextSection = {\n  addClass?: string;\n};\n\nexport type LXLT_ScrollCard = {\n  item: LXLT_Project;\n  count?: number;\n  total?: number;\n};\n\ndeclare global {\n  interface Window {\n    dharmaPaused: boolean;\n  }\n}\n\n// Begin Component\n// __________________________________________________________________________________________\n\nlet lastTranslateX: number = 0;\n\nexport const ProjectNextSection: React.FunctionComponent<LXLT_ProjectNextSection> = React.memo(\n  ({ addClass = \"\" }) => {\n    const [dynamicHeight, setDynamicHeight] = useState(null);\n    // const [translateX, setTranslateX] = useState(0);\n    // const [windowSize, setWindowSize] = useState(0);\n    const [isBreakPoint, setBreakPoint] = useState(false);\n    const [isScrolled, setScrolled] = useState(false);\n\n    const containerRef = useRef<HTMLDivElement>();\n    const objectRef = useRef<HTMLDivElement>();\n\n    let currentTranslation = 0;\n    let boundingClientX = 0;\n\n    const calcDynamicHeight = (objectWidth: number) => {\n      const vw = window.innerWidth;\n      const vh = window.innerHeight;\n      return objectWidth - vw + vh;\n    };\n\n    const handleDynamicHeight = (\n      ref: React.RefObject<HTMLDivElement>,\n      setDynamicHeight: (dynamicHeight: number) => void\n    ) => {\n      if (ref && ref.current) {\n        const objectWidth: number = ref.current.scrollWidth;\n        const dynamicHeight: number = calcDynamicHeight(objectWidth);\n        setDynamicHeight(dynamicHeight);\n      }\n    };\n\n    const applyScrollListener = (\n      ref: React.RefObject<HTMLDivElement>\n      // setTranslateX: (translateX: number) => void\n    ) => {\n      window.addEventListener(\"scroll\", () => {\n        const offsetTop: number =\n          ref && ref.current ? -ref.current.offsetTop : 0;\n\n        // setDharmaPaused(offsetTop < windowSize / -2);\n        // setTranslateX(offsetTop);\n\n        gsap.to(objectRef.current, {\n          x: offsetTop,\n          transition: 0.1,\n          // duration: 0.02,\n          ease: \"sine.out\",\n        });\n\n        if (offsetTop < window.innerWidth / -2) {\n          setBreakPoint(true);\n        } else {\n          setBreakPoint(false);\n        }\n\n        if (offsetTop < -100) {\n          setScrolled(true);\n        } else {\n          setScrolled(false);\n        }\n\n        window.dharmaPaused = offsetTop < window.innerWidth / -2;\n      });\n    };\n\n    const resizeHandler = () => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      // setWindowSize(window.innerWidth);\n    };\n\n    useEffect(() => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      window.addEventListener(\"resize\", resizeHandler);\n      applyScrollListener(containerRef);\n    }, []);\n\n    return (\n      <>\n        <ProjectNextSectionStyle\n          className={`${ProjectNextSectionClassName} ${ProjectNextSectionClassName}--${\n            isScrolled ? `is-scrolled` : `is-not-scrolled`\n          } ${ProjectNextSectionClassName}--${\n            isBreakPoint ? `is-at-breakpoint` : `is-not-at-breakpoint`\n          } ${ProjectNextSectionClassName}--${\n            boundingClientX > lastTranslateX ? `is-at-end` : `is-not-at-end`\n          } ${addClass && addClass}`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Outer Container with Dynamic Height */}\n          <div\n            className={`${ProjectNextSectionClassName}__outer`}\n            style={{ height: `${dynamicHeight}px` }}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Sticky Wrapper */}\n            <div\n              className={`${ProjectNextSectionClassName}__sticky-wrapper`}\n              ref={containerRef}\n            >\n              {/* ____________________________________________________________________ */}\n              {/* Translation Wrapper */}\n              <div\n                className={`${ProjectNextSectionClassName}__x-translate-wrapper`}\n                // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n                ref={objectRef}\n              >\n                {/* ____________________________________________________________________ */}\n                {/* Horizontal Wrapper */}\n                <div\n                  className={`${ProjectNextSectionClassName}__horizontal-wrapper`}\n                >\n                  {/* ____________________________________________________________________ */}\n                  {/* Content Wrapper */}\n                  <div\n                    className={`${ProjectNextSectionClassName}__content-wrapper`}\n                  >\n                    {SiteProjects.map((item: LXLT_Project, idx: number) => {\n                      return (\n                        <ProjectCard\n                          key={idx}\n                          count={idx + 1}\n                          total={SiteProjects.length}\n                          item={item}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ProjectNextSectionStyle>\n      </>\n    );\n  }\n);\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}