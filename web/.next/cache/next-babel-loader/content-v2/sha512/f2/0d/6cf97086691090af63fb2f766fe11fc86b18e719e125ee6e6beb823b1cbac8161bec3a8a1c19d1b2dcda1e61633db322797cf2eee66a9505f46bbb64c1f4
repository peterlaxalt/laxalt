{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Core\nimport Link from \"next/link\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { HeadlineTransitionThreshold } from \"../HeadlineWrapper\"; // Styles\n\nimport { GlobalSidebarPaneOffsetVariables, LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nexport var LayeredSidebar = function LayeredSidebar(_ref) {\n  var addClass = _ref.addClass,\n      panes = _ref.panes;\n\n  if (panes) {\n    var _useState = useState(false),\n        isHovered = _useState[0],\n        setHover = _useState[1];\n\n    var _useState2 = useState(false),\n        isScrolled = _useState2[0],\n        toggleScroll = _useState2[1];\n\n    var scrollModifier = \"\".concat(LayeredSidebarClassName, \"--\").concat(isScrolled ? \"is-scrolled\" : \"is-not-scrolled\");\n\n    var listenToScroll = function listenToScroll() {\n      if (window.scrollY > HeadlineTransitionThreshold) {\n        toggleScroll(true);\n        return;\n      } else {\n        toggleScroll(false);\n        return;\n      }\n    };\n\n    useEffect(function () {\n      if (\"object\") {\n        window.addEventListener(\"scroll\", listenToScroll);\n      }\n\n      return function () {\n        window.removeEventListener(\"scroll\", listenToScroll);\n      };\n    });\n    return /*#__PURE__*/_jsxs(LayeredSidebarStyle, {\n      className: \"\".concat(LayeredSidebarClassName, \" \").concat(scrollModifier, \" \").concat(addClass && addClass),\n      children: [/*#__PURE__*/_jsx(GlobalSidebarPaneOffsetVariables, {\n        panes: panes.length,\n        isHovered: isHovered\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"\".concat(LayeredSidebarClassName, \"__inner\"),\n        children: panes.map(function (pane, idx) {\n          var paneItemsMajor = pane.items ? pane.items.filter(function (item) {\n            return item.isMajor;\n          }) : [];\n          var paneItemsMinor = pane.items ? pane.items.filter(function (item) {\n            return !item.isMajor;\n          }) : [];\n          return /*#__PURE__*/_jsx(Fragment, {\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"\".concat(LayeredSidebarClassName, \"__pane\"),\n              onMouseEnter: function onMouseEnter() {\n                return idx == panes.length - 1 ? null : setHover(true);\n              },\n              onMouseLeave: function onMouseLeave() {\n                return idx == panes.length - 1 ? null : setHover(false);\n              },\n              children: [pane.header && !pane.headerBadge ? /*#__PURE__*/_jsx(\"div\", {\n                className: \"\".concat(LayeredSidebarClassName, \"__pane__header\"),\n                children: pane.header\n              }) : pane.headerBadge ? /*#__PURE__*/_jsx(\"div\", {\n                className: \"\".concat(LayeredSidebarClassName, \"__pane__header \").concat(LayeredSidebarClassName, \"__pane__header--badge\"),\n                children: /*#__PURE__*/_jsx(pane.headerBadge, {})\n              }) : null, pane.items && /*#__PURE__*/_jsxs(_Fragment, {\n                children: [paneItemsMajor.length > 0 && /*#__PURE__*/_jsx(\"ul\", {\n                  className: \"\".concat(LayeredSidebarClassName, \"__pane__list \").concat(LayeredSidebarClassName, \"__pane__list--major\"),\n                  style: {\n                    opacity: idx === 2 ? 0 : 1\n                  } // TEMPORARY\n                  ,\n                  children: paneItemsMajor.map(function (paneItem, idxx) {\n                    return /*#__PURE__*/_jsx(\"li\", {\n                      className: \"\".concat(LayeredSidebarClassName, \"__pane__list__item \").concat(LayeredSidebarClassName, \"__pane__list__item--\").concat(paneItem.isActive ? \"is-active\" : \"is-not-active\", \"  \").concat(LayeredSidebarClassName, \"__pane__list__item--\").concat(paneItem.isMajor ? \"major\" : \"minor\"),\n                      children: /*#__PURE__*/_jsx(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsx(\"a\", {\n                          children: paneItem.label\n                        })\n                      })\n                    }, idxx + idx);\n                  })\n                }), paneItemsMinor.length > 0 && /*#__PURE__*/_jsx(\"ul\", {\n                  className: \"\".concat(LayeredSidebarClassName, \"__pane__list \").concat(LayeredSidebarClassName, \"__pane__list--minor\"),\n                  style: {\n                    opacity: idx === 2 ? 0 : 1\n                  } // TEMPORARY\n                  ,\n                  children: paneItemsMinor.map(function (paneItem, idxx) {\n                    return /*#__PURE__*/_jsx(\"li\", {\n                      className: \"\".concat(LayeredSidebarClassName, \"__pane__list__item \").concat(LayeredSidebarClassName, \"__pane__list__item--\").concat(paneItem.isActive ? \"is-active\" : \"is-not-active\", \" \").concat(LayeredSidebarClassName, \"__pane__list__item--\").concat(paneItem.isMajor ? \"major\" : \"minor\"),\n                      children: /*#__PURE__*/_jsx(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsx(\"a\", {\n                          children: paneItem.label\n                        })\n                      })\n                    }, idxx + idx);\n                  })\n                })]\n              })]\n            })\n          }, idx);\n        })\n      })]\n    });\n  } else {\n    return null;\n  }\n}; // End Component\n// ______________________________________________________________________________","map":null,"metadata":{},"sourceType":"module"}