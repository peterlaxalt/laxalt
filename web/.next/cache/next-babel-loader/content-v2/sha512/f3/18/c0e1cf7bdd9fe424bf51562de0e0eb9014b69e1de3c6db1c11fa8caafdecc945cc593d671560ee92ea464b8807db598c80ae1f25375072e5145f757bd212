{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n// Core\nimport React, { createRef, PureComponent } from \"react\";\n// Styles\nimport { CanvasCursorStyle, CanvasCursorClassName } from \"./styles.scss\"; // Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Cursor\nexport class CanvasCursor extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"ctx\", void 0);\n\n    _defineProperty(this, \"canvasRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0\n      },\n      vw: 0,\n      vh: 0\n    };\n    this.ctx;\n    this.calculateSize = this.calculateSize.bind(this);\n    this.renderMouse = this.renderMouse.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    this.calculateSize();\n    this.updateMouseCoords();\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2\n      }\n    });\n    window.addEventListener(\"mousemove\", e => {\n      this.setState({\n        mouseX: e.pageX,\n        mouseY: e.pageY\n      });\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n  } // ______________________________\n  // Calculate Sizes\n\n\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight\n    });\n\n    if (this.canvasRef) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  } // ______________________________\n  // Canvas Reference\n\n\n  // ______________________________\n  // Update Mouse Coordinates\n  updateMouseCoords() {\n    this.setState({\n      mouseCursor: {\n        radius: 10,\n        lastX: this.lerp(this.state.mouseCursor.lastX, this.state.mouseX, 0.25),\n        lastY: this.lerp(this.state.mouseCursor.lastY, this.state.mouseY, 0.25)\n      }\n    });\n    requestAnimationFrame(this.renderMouse);\n  } // ______________________________\n  // Render to canvas\n\n\n  renderMouse() {\n    if (this.canvasRef) {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n      ctx.beginPath();\n      ctx.arc(this.state.mouseCursor.lastX, this.state.mouseCursor.lastY, this.state.mouseCursor.radius, 0, Math.PI * 2, false);\n      ctx.fillStyle = \"#000000\";\n      ctx.fill();\n      ctx.closePath();\n      console.log('RENDERED');\n      requestAnimationFrame(this.renderMouse);\n    }\n  } // ______________________________\n  // LERP Helper Function\n\n\n  lerp(a, b, n) {\n    return (1 - n) * a + n * b;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CanvasCursorStyle, {\n        ref: this.canvasRef,\n        className: `${CanvasCursorClassName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx"],"names":["React","createRef","PureComponent","CanvasCursorStyle","CanvasCursorClassName","CanvasCursor","constructor","props","state","mouseX","mouseY","mouseCursor","radius","lastX","lastY","vw","vh","ctx","calculateSize","bind","renderMouse","componentDidMount","init","updateMouseCoords","setState","window","innerWidth","innerHeight","addEventListener","e","pageX","pageY","canvasRef","current","width","height","lerp","requestAnimationFrame","getContext","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath","console","log","a","b","n","render"],"mappings":"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","sourcesContent":["/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n\n// Core\nimport { request } from \"https\";\nimport React, { Component, createRef, PureComponent } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// Styles\nimport { CanvasCursorStyle, CanvasCursorClassName } from \"./styles.scss\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport type LXLT_CanvasCursor = {};\n\nexport type LXLT_CanvasCursor_State = {\n  mouseX: number;\n  mouseY: number;\n  mouseCursor: {\n    radius: number;\n    lastX: number;\n    lastY: number;\n  };\n\n  vw: number;\n  vh: number;\n};\n\n// Cursor\nexport class CanvasCursor extends PureComponent<\n  LXLT_CanvasCursor,\n  LXLT_CanvasCursor_State\n> {\n  ctx: CanvasRenderingContext2D;\n\n  constructor(props: LXLT_CanvasCursor) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0,\n      },\n\n      vw: 0,\n      vh: 0,\n    };\n\n    this.ctx;\n    this.calculateSize = this.calculateSize.bind(this);\n    this.renderMouse = this.renderMouse.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    this.calculateSize();\n\n    this.updateMouseCoords();\n\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2,\n      },\n    });\n\n    window.addEventListener(\"mousemove\", (e) => {\n      this.setState({\n        mouseX: e.pageX,\n        mouseY: e.pageY,\n      });\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n  }\n\n  // ______________________________\n  // Calculate Sizes\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight,\n    });\n\n    if (this.canvasRef) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  // ______________________________\n  // Canvas Reference\n  canvasRef: React.RefObject<HTMLCanvasElement> = createRef<HTMLCanvasElement>();\n\n  // ______________________________\n  // Update Mouse Coordinates\n  updateMouseCoords() {\n    this.setState({\n      mouseCursor: {\n        radius: 10,\n        lastX: this.lerp(this.state.mouseCursor.lastX, this.state.mouseX, 0.25),\n        lastY: this.lerp(this.state.mouseCursor.lastY, this.state.mouseY, 0.25),\n      },\n    });\n\n    requestAnimationFrame(this.renderMouse);\n  }\n\n  // ______________________________\n  // Render to canvas\n  renderMouse() {\n    if (this.canvasRef) {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n\n      ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n      ctx.beginPath();\n      ctx.arc(\n        this.state.mouseCursor.lastX,\n        this.state.mouseCursor.lastY,\n        this.state.mouseCursor.radius,\n        0,\n        Math.PI * 2,\n        false\n      );\n      ctx.fillStyle = \"#000000\";\n      ctx.fill();\n      ctx.closePath();\n\n      console.log('RENDERED');\n\n      requestAnimationFrame(this.renderMouse);\n    }\n  }\n\n  // ______________________________\n  // LERP Helper Function\n  lerp(a: number, b: number, n: number) {\n    return (1 - n) * a + n * b;\n  }\n\n  render() {\n    return (\n      <>\n        {/* <UniversallyHideCursor /> */}\n        <CanvasCursorStyle\n          ref={this.canvasRef}\n          className={`${CanvasCursorClassName}`}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}