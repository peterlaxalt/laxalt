{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/utils/lazyImage.tsx\";\n// Core\nimport React from \"react\";\nimport LazyLoad from \"vanilla-lazyload\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * LazyImage.tsx\n * @author Peter Laxalt\n * @description Lazy loaded image component.\n *\n */\nexport class LazyImage extends React.Component {\n  // Update lazyLoad after first rendering of every image\n  componentDidMount() {\n    // @ts-ignore\n    if (!document.lazyLoadInstance) {\n      // @ts-ignore\n      document.lazyLoadInstance = new LazyLoad({\n        elements_selector: \".lazy\"\n      });\n    } // @ts-ignore\n\n\n    document.lazyLoadInstance.update();\n  } // Update lazyLoad after rerendering of every image\n\n\n  componentDidUpdate() {\n    // @ts-ignore\n    document.lazyLoadInstance.update();\n  } // Just render the image with data-src\n\n\n  render() {\n    // @ts-ignore\n    const {\n      alt,\n      src,\n      srcset,\n      sizes,\n      width,\n      height,\n      aspectRatio,\n      style,\n      addClass\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: alt,\n      className: `lazy ${addClass ? addClass : \"\"}`,\n      \"data-src\": src,\n      \"data-srcset\": srcset,\n      \"data-sizes\": sizes,\n      width: width,\n      height: height,\n      style: style,\n      \"data-aspect-ratio\": aspectRatio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default LazyImage;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/utils/lazyImage.tsx"],"names":["React","LazyLoad","LazyImage","Component","componentDidMount","document","lazyLoadInstance","elements_selector","update","componentDidUpdate","render","alt","src","srcset","sizes","width","height","aspectRatio","style","addClass","props"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAEA;AACA;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAoD;AACzD;AACAC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAI,CAACC,QAAQ,CAACC,gBAAd,EAAgC;AAC9B;AACAD,MAAAA,QAAQ,CAACC,gBAAT,GAA4B,IAAIL,QAAJ,CAAa;AACvCM,QAAAA,iBAAiB,EAAE;AADoB,OAAb,CAA5B;AAGD,KAPiB,CASlB;;;AACAF,IAAAA,QAAQ,CAACC,gBAAT,CAA0BE,MAA1B;AACD,GAbwD,CAezD;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB;AACAJ,IAAAA,QAAQ,CAACC,gBAAT,CAA0BE,MAA1B;AACD,GAnBwD,CAqBzD;;;AACAE,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AACJC,MAAAA,GADI;AAEJC,MAAAA,GAFI;AAGJC,MAAAA,MAHI;AAIJC,MAAAA,KAJI;AAKJC,MAAAA,KALI;AAMJC,MAAAA,MANI;AAOJC,MAAAA,WAPI;AAQJC,MAAAA,KARI;AASJC,MAAAA;AATI,QAUF,KAAKC,KAVT;AAYA,wBACE;AACE,MAAA,GAAG,EAAET,GADP;AAEE,MAAA,SAAS,EAAG,QAAOQ,QAAQ,GAAGA,QAAH,GAAc,EAAG,EAF9C;AAGE,kBAAUP,GAHZ;AAIE,qBAAaC,MAJf;AAKE,oBAAYC,KALd;AAME,MAAA,KAAK,EAAEC,KANT;AAOE,MAAA,MAAM,EAAEC,MAPV;AAQE,MAAA,KAAK,EAAEE,KART;AASE,2BAAmBD;AATrB;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAjDwD;AAoD3D,eAAef,SAAf","sourcesContent":["// Core\nimport React from \"react\";\nimport LazyLoad from \"vanilla-lazyload\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype Props = {\n  alt?: string;\n  src?: string;\n  srcset?: string;\n  sizes?: string;\n  width?: string;\n  height?: string;\n  style?: object;\n  title?: string;\n  addClass?: string;\n  aspectRatio?: string;\n};\n\n/**\n *\n * LazyImage.tsx\n * @author Peter Laxalt\n * @description Lazy loaded image component.\n *\n */\n\nexport class LazyImage extends React.Component<Props, any> {\n  // Update lazyLoad after first rendering of every image\n  componentDidMount() {\n    // @ts-ignore\n    if (!document.lazyLoadInstance) {\n      // @ts-ignore\n      document.lazyLoadInstance = new LazyLoad({\n        elements_selector: \".lazy\",\n      });\n    }\n\n    // @ts-ignore\n    document.lazyLoadInstance.update();\n  }\n\n  // Update lazyLoad after rerendering of every image\n  componentDidUpdate() {\n    // @ts-ignore\n    document.lazyLoadInstance.update();\n  }\n\n  // Just render the image with data-src\n  render() {\n    // @ts-ignore\n    const {\n      alt,\n      src,\n      srcset,\n      sizes,\n      width,\n      height,\n      aspectRatio,\n      style,\n      addClass,\n    } = this.props;\n\n    return (\n      <img\n        alt={alt}\n        className={`lazy ${addClass ? addClass : \"\"}`}\n        data-src={src}\n        data-srcset={srcset}\n        data-sizes={sizes}\n        width={width}\n        height={height}\n        style={style}\n        data-aspect-ratio={aspectRatio}\n      />\n    );\n  }\n}\n\nexport default LazyImage;\n"]},"metadata":{},"sourceType":"module"}