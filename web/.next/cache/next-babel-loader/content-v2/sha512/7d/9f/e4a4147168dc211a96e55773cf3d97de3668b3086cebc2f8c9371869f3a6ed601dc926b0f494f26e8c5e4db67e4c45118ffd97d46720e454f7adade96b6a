{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// Core\nimport gsap from \"gsap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { SiteProjects } from \"../../../constants/site/Settings\";\nimport { ProjectCard } from \"../../ProjectCard\"; // Components\n// Styles\n\nimport { ProjectScrollBlurOverlayStyles, ProjectScrollSectionClassName, ProjectScrollSectionStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nvar lastTranslateX = 0;\nexport var ProjectScrollSection = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var _ref$addClass = _ref.addClass,\n      addClass = _ref$addClass === void 0 ? \"\" : _ref$addClass;\n\n  var _useState = useState(null),\n      dynamicHeight = _useState[0],\n      setDynamicHeight = _useState[1]; // const [translateX, setTranslateX] = useState(0);\n  // const [windowSize, setWindowSize] = useState(0);\n\n\n  var _useState2 = useState(false),\n      isBreakPoint = _useState2[0],\n      setBreakPoint = _useState2[1];\n\n  var _useState3 = useState(false),\n      isScrolled = _useState3[0],\n      setScrolled = _useState3[1];\n\n  var containerRef = useRef();\n  var objectRef = useRef();\n  var currentTranslation = 0;\n  var boundingClientX = 0;\n\n  var calcDynamicHeight = function calcDynamicHeight(objectWidth) {\n    var vw = window.innerWidth;\n    var vh = window.innerHeight;\n    return objectWidth - vw + vh;\n  };\n\n  var handleDynamicHeight = function handleDynamicHeight(ref, setDynamicHeight) {\n    var objectWidth = ref.current.scrollWidth;\n    var dynamicHeight = calcDynamicHeight(objectWidth);\n    setDynamicHeight(dynamicHeight);\n  };\n\n  var applyScrollListener = function applyScrollListener(ref) // setTranslateX: (translateX: number) => void\n  {\n    window.addEventListener(\"scroll\", function () {\n      var offsetTop = ref && ref.current ? -ref.current.offsetTop : 0; // setDharmaPaused(offsetTop < windowSize / -2);\n      // setTranslateX(offsetTop);\n\n      gsap.to(objectRef.current, {\n        x: offsetTop,\n        transition: 0.1,\n        // duration: 0.02,\n        ease: \"sine.out\"\n      });\n\n      if (offsetTop < window.innerWidth / -2) {\n        setBreakPoint(true);\n      } else {\n        setBreakPoint(false);\n      }\n\n      if (offsetTop < -100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n\n      window.dharmaPaused = offsetTop < window.innerWidth / -2;\n    });\n  };\n\n  var resizeHandler = function resizeHandler() {\n    handleDynamicHeight(objectRef, setDynamicHeight); // setWindowSize(window.innerWidth);\n  };\n\n  useEffect(function () {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectScrollBlurOverlayStyles, {\n      isBreakpoint: isBreakPoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(ProjectScrollSectionStyle, {\n      className: \"\".concat(ProjectScrollSectionClassName, \" \").concat(ProjectScrollSectionClassName, \"--\").concat(isScrolled ? \"is-scrolled\" : \"is-not-scrolled\", \" \").concat(ProjectScrollSectionClassName, \"--\").concat(isBreakPoint ? \"is-at-breakpoint\" : \"is-not-at-breakpoint\", \" \").concat(ProjectScrollSectionClassName, \"--\").concat(boundingClientX > lastTranslateX ? \"is-at-end\" : \"is-not-at-end\", \" \").concat(addClass && addClass),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(ProjectScrollSectionClassName, \"__outer\"),\n        style: {\n          height: \"\".concat(dynamicHeight, \"px\")\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ProjectScrollSectionClassName, \"__sticky-wrapper\"),\n          ref: containerRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\".concat(ProjectScrollSectionClassName, \"__x-translate-wrapper\") // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n            ,\n            ref: objectRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\".concat(ProjectScrollSectionClassName, \"__horizontal-wrapper\"),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\".concat(ProjectScrollSectionClassName, \"__content-wrapper\"),\n                children: SiteProjects.map(function (item, idx) {\n                  return /*#__PURE__*/_jsxDEV(ProjectCard, {\n                    count: idx + 1,\n                    total: SiteProjects.length,\n                    item: item\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n}, \"zk8ZYGNcTnhGGrP/htMLlsPzheE=\")); // End Component\n// ______________________________________________________________________________\n\n_c2 = ProjectScrollSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectScrollSection$React.memo\");\n$RefreshReg$(_c2, \"ProjectScrollSection\");","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx"],"names":["gsap","React","useEffect","useRef","useState","SiteProjects","ProjectCard","ProjectScrollBlurOverlayStyles","ProjectScrollSectionClassName","ProjectScrollSectionStyle","lastTranslateX","ProjectScrollSection","memo","addClass","dynamicHeight","setDynamicHeight","isBreakPoint","setBreakPoint","isScrolled","setScrolled","containerRef","objectRef","currentTranslation","boundingClientX","calcDynamicHeight","objectWidth","vw","window","innerWidth","vh","innerHeight","handleDynamicHeight","ref","current","scrollWidth","applyScrollListener","addEventListener","offsetTop","to","x","transition","ease","dharmaPaused","resizeHandler","height","map","item","idx","length"],"mappings":"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","sourcesContent":["// Core\nimport gsap from \"gsap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  LXLT_Category,\n  LXLT_Project,\n  SiteProjects,\n} from \"../../../constants/site/Settings\";\nimport { Theme } from \"../../../constants/Theme\";\nimport { isVisible, percentIsVisible } from \"../../../utils/isVisible\";\nimport { ProjectCard } from \"../../ProjectCard\";\n\n// Components\n\n// Styles\nimport {\n  ProjectScrollBlurOverlayStyles,\n  ProjectScrollSectionClassName,\n  ProjectScrollSectionGlobalStyles,\n  ProjectScrollSectionStyle,\n  ScrollCardClassName,\n  ScrollCardStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_ProjectScrollSection = {\n  addClass?: string;\n};\n\nexport type LXLT_ScrollCard = {\n  item: LXLT_Project;\n  count?: number;\n  total?: number;\n};\n\ndeclare global {\n  interface Window {\n    dharmaPaused: boolean;\n  }\n}\n\n// Begin Component\n// __________________________________________________________________________________________\n\nlet lastTranslateX: number = 0;\n\nexport const ProjectScrollSection: React.FunctionComponent<LXLT_ProjectScrollSection> = React.memo(\n  ({ addClass = \"\" }) => {\n    const [dynamicHeight, setDynamicHeight] = useState(null);\n    // const [translateX, setTranslateX] = useState(0);\n    // const [windowSize, setWindowSize] = useState(0);\n    const [isBreakPoint, setBreakPoint] = useState(false);\n    const [isScrolled, setScrolled] = useState(false);\n\n    const containerRef = useRef<HTMLDivElement>();\n    const objectRef = useRef<HTMLDivElement>();\n\n    let currentTranslation = 0;\n    let boundingClientX = 0;\n\n    const calcDynamicHeight = (objectWidth: number) => {\n      const vw = window.innerWidth;\n      const vh = window.innerHeight;\n      return objectWidth - vw + vh;\n    };\n\n    const handleDynamicHeight = (\n      ref: React.RefObject<HTMLDivElement>,\n      setDynamicHeight: (dynamicHeight: number) => void\n    ) => {\n      const objectWidth: number = ref.current.scrollWidth;\n      const dynamicHeight: number = calcDynamicHeight(objectWidth);\n      setDynamicHeight(dynamicHeight);\n    };\n\n    const applyScrollListener = (\n      ref: React.RefObject<HTMLDivElement>\n      // setTranslateX: (translateX: number) => void\n    ) => {\n      window.addEventListener(\"scroll\", () => {\n        const offsetTop: number =\n          ref && ref.current ? -ref.current.offsetTop : 0;\n\n        // setDharmaPaused(offsetTop < windowSize / -2);\n        // setTranslateX(offsetTop);\n\n        gsap.to(objectRef.current, {\n          x: offsetTop,\n          transition: 0.1,\n          // duration: 0.02,\n          ease: \"sine.out\",\n        });\n\n        if (offsetTop < window.innerWidth / -2) {\n          setBreakPoint(true);\n        } else {\n          setBreakPoint(false);\n        }\n\n        if (offsetTop < -100) {\n          setScrolled(true);\n        } else {\n          setScrolled(false);\n        }\n\n        window.dharmaPaused = offsetTop < window.innerWidth / -2;\n      });\n    };\n\n    const resizeHandler = () => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      // setWindowSize(window.innerWidth);\n    };\n\n    useEffect(() => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      window.addEventListener(\"resize\", resizeHandler);\n      applyScrollListener(containerRef);\n    }, []);\n\n    return (\n      <>\n        {/* <ProjectScrollSectionGlobalStyles isScrolled={isBreakPoint} /> */}\n        <ProjectScrollBlurOverlayStyles isBreakpoint={isBreakPoint} />\n        <ProjectScrollSectionStyle\n          className={`${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${\n            isScrolled ? `is-scrolled` : `is-not-scrolled`\n          } ${ProjectScrollSectionClassName}--${\n            isBreakPoint ? `is-at-breakpoint` : `is-not-at-breakpoint`\n          } ${ProjectScrollSectionClassName}--${\n            boundingClientX > lastTranslateX ? `is-at-end` : `is-not-at-end`\n          } ${addClass && addClass}`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Outer Container with Dynamic Height */}\n          <div\n            className={`${ProjectScrollSectionClassName}__outer`}\n            style={{ height: `${dynamicHeight}px` }}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Sticky Wrapper */}\n            <div\n              className={`${ProjectScrollSectionClassName}__sticky-wrapper`}\n              ref={containerRef}\n            >\n              {/* ____________________________________________________________________ */}\n              {/* Translation Wrapper */}\n              <div\n                className={`${ProjectScrollSectionClassName}__x-translate-wrapper`}\n                // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n                ref={objectRef}\n              >\n                {/* ____________________________________________________________________ */}\n                {/* Horizontal Wrapper */}\n                <div\n                  className={`${ProjectScrollSectionClassName}__horizontal-wrapper`}\n                >\n                  {/* ____________________________________________________________________ */}\n                  {/* Content Wrapper */}\n                  <div\n                    className={`${ProjectScrollSectionClassName}__content-wrapper`}\n                  >\n                    {SiteProjects.map((item: LXLT_Project, idx: number) => {\n                      return (\n                        <ProjectCard\n                          key={idx}\n                          count={idx + 1}\n                          total={SiteProjects.length}\n                          item={item}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ProjectScrollSectionStyle>\n      </>\n    );\n  }\n);\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}