{"ast":null,"code":"// Imports\n// _________________________________________________________________________\n// Core\nimport styled, { createGlobalStyle, css } from \"styled-components\"; // Constants\n\nimport { Theme } from \"../../constants/Theme\";\nimport { Root } from \"../../constants/Root\";\nimport { CssFrameBorderWidth, CssFrameSizeWithBorderString } from \"../MellowFrameHeader/styles.scss\";\nimport { Rotate } from \"../../constants/styles/Animation\"; // Begin Styles\n// _________________________________________________________________________\n\n/**\n *\n * @name LayeredSidebarClassName\n * @description The root class name for styling. BEM naming conventions.\n *\n */\n\nexport const LayeredSidebarClassName = \"layered-sidebar\";\nexport const LayeredSidebarWidth = \"350px\";\nexport const LayeredPaneWidth = \"180px\";\nexport const LayeredSidebarTransitionTime = \".25s\";\nexport const LayeredCollapsedRatio = -0.65;\nexport const LayeredPaneCollapsedPaneWidth = `calc(${LayeredPaneWidth} + (${LayeredPaneWidth} * ${LayeredCollapsedRatio}))`;\nexport const GlobalSidebarPaneOffsetVariables = createGlobalStyle`\n  :root {\n    /* --${LayeredSidebarClassName}__global-pane-offset: calc(${props => props.panes - 1} * (${LayeredPaneCollapsedPaneWidth}) + ${CssFrameBorderWidth}); */\n\n    // Hovered\n    --${LayeredSidebarClassName}__global-pane-offset: ${props => props.isHovered ? `calc(${LayeredPaneWidth} + (${props.panes - 2} * (${LayeredPaneCollapsedPaneWidth})) + ${CssFrameBorderWidth})` : `calc(${props.panes - 1} * (${LayeredPaneCollapsedPaneWidth}) + ${CssFrameBorderWidth})`};\n  }\n`;\nexport const SidebarFullwidthCss = css([\"width:calc(100vw - (\", \" * 2));clip-path:polygon( var(--\", \"__global-pane-offset) 0%,100% 0%,100% 100%,var(--\", \"__global-pane-offset) 100% );transition:clip-path \", \" ease-in-out;margin-left:calc(\", \" * -1);@media (max-width:\", \"){width:100%;max-width:100%;margin-left:0;clip-path:unset;}\"], CssFrameSizeWithBorderString, LayeredSidebarClassName, LayeredSidebarClassName, LayeredSidebarTransitionTime, LayeredSidebarWidth, Theme.Base.Media.Width.Sm);\n/**\n *\n * @name LayeredSidebarStyle\n * @author Peter Laxalt\n *\n */\n\nexport const LayeredSidebarStyle = styled.nav.withConfig({\n  displayName: \"stylesscss__LayeredSidebarStyle\",\n  componentId: \"sc-1xghijt-0\"\n})([\"&.\", \"{--\", \"__pane-width:\", \";--\", \"__pane-padding:calc(\", \" * .5);&.\", \"--frame-inactive{transform:translateX(0);}opacity:1;transition:opacity 1s ease;&.\", \"--is-scrolled{opacity:.35;&:hover{opacity:1;}}.\", \"__inner{display:flex;flex-wrap:nowrap;.\", \"__pane{width:var(--\", \"__pane-width);height:100vh;background:\", \";padding-top:calc(\", \" * 2.5);position:relative;z-index:2;&:not(:first-child){border-left:\", \" solid \", \";margin-left:calc(var(--\", \"__pane-width) * \", \");will-change:margin-left;transition:margin-left \", \" ease-in-out;}&:hover{+ .\", \"__pane{margin-left:0;}}&__header{font-size:1.9rem;font-weight:bold;padding-left:var(--\", \"__pane-padding);padding-right:calc(\", \" / 2);text-transform:uppercase;&--badge{svg{width:100%;max-width:100%;height:auto;z-index:1;fill:currentColor;animation:\", \" 20s linear infinite;}+.\", \"__pane__list--minor,+.\", \"__pane__list--major{padding-top:calc(\", \" * 1.5);}}}&__list{&--major{padding-top:calc(\", \" * 1.5);}&--minor{padding-top:1.5rem;}&__item{white-space:nowrap;&--major{font-size:1.1rem;letter-spacing:.05rem;font-family:\", \";font-style:italic;line-height:1.5;}&--minor{font-size:.6rem;font-weight:bold;text-transform:uppercase;letter-spacing:.1rem;line-height:2.25;}a{color:\", \";display:block;padding-left:var(--\", \"__pane-padding);padding-right:calc(\", \" / 2);&:hover{background:\", \";color:\", \";text-decoration:none;}}&--is-active{a{font-weight:bold;}}}}}}}\"], LayeredSidebarClassName, LayeredSidebarClassName, LayeredPaneWidth, LayeredSidebarClassName, Root.FrameSize, LayeredSidebarClassName, LayeredSidebarClassName, LayeredSidebarClassName, LayeredSidebarClassName, LayeredSidebarClassName, Theme.Color.varBackground, Root.FrameSize, CssFrameBorderWidth, Theme.Color.varForeground, LayeredSidebarClassName, LayeredCollapsedRatio, LayeredSidebarTransitionTime, LayeredSidebarClassName, LayeredSidebarClassName, Root.FrameSize, Rotate, LayeredSidebarClassName, LayeredSidebarClassName, Root.FrameSize, Root.FrameSize, Theme.Font.Code, Theme.Color.varForeground, LayeredSidebarClassName, Root.FrameSize, Theme.Color.varForeground, Theme.Color.varBackground);","map":{"version":3,"sources":["/Users/manzanita/Repositories/laxalt/web/components/LayeredSidebar/styles.scss.tsx"],"names":["styled","createGlobalStyle","css","Theme","Root","CssFrameBorderWidth","CssFrameSizeWithBorderString","Rotate","LayeredSidebarClassName","LayeredSidebarWidth","LayeredPaneWidth","LayeredSidebarTransitionTime","LayeredCollapsedRatio","LayeredPaneCollapsedPaneWidth","GlobalSidebarPaneOffsetVariables","props","panes","isHovered","SidebarFullwidthCss","Base","Media","Width","Sm","LayeredSidebarStyle","nav","FrameSize","Color","varBackground","varForeground","Font","Code"],"mappings":"AAAA;AACA;AAEA;AACA,OAAOA,MAAP,IAAiBC,iBAAjB,EAAoCC,GAApC,QAA+C,mBAA/C,C,CAEA;;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SACEC,mBADF,EAEEC,4BAFF,QAGO,kCAHP;AAIA,SAASC,MAAT,QAAuB,kCAAvB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,uBAAuB,GAAG,iBAAhC;AACP,OAAO,MAAMC,mBAAmB,GAAG,OAA5B;AACP,OAAO,MAAMC,gBAAgB,GAAG,OAAzB;AACP,OAAO,MAAMC,4BAA4B,GAAG,MAArC;AACP,OAAO,MAAMC,qBAAqB,GAAG,CAAC,IAA/B;AACP,OAAO,MAAMC,6BAA6B,GAAI,QAAOH,gBAAiB,OAAMA,gBAAiB,MAAKE,qBAAsB,IAAjH;AAEP,OAAO,MAAME,gCAAgC,GAAGb,iBAG7C;AACH;AACA,WAAWO,uBAAwB,8BAA8BO,KAAD,IAC9DA,KAAK,CAACC,KAAN,GACA,CAAE,OAAMH,6BAA8B,OAAMR,mBAAoB;AAClE;AACA;AACA,QAAQG,uBAAwB,yBAAyBO,KAAD,IACtDA,KAAK,CAACE,SAAN,GACK,QAAOP,gBAAiB,OACvBK,KAAK,CAACC,KAAN,GAAc,CACf,OAAMH,6BAA8B,QAAOR,mBAAoB,GAHpE,GAIK,QACCU,KAAK,CAACC,KAAN,GAAc,CACf,OAAMH,6BAA8B,OAAMR,mBAAoB,GAAG;AACxE;AACA,CAnBO;AAqBP,OAAO,MAAMa,mBAAmB,GAAGhB,GAAH,wSACPI,4BADO,EAIpBE,uBAJoB,EAOpBA,uBAPoB,EAUNG,4BAVM,EAYVF,mBAZU,EAcTN,KAAK,CAACgB,IAAN,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,EAdd,CAAzB;AAsBP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,mBAAmB,GAAGvB,MAAM,CAACwB,GAAV;AAAA;AAAA;AAAA,84CAC1BhB,uBAD0B,EAIxBA,uBAJwB,EAIgBE,gBAJhB,EAKxBF,uBALwB,EAKuBJ,IAAI,CAACqB,SAL5B,EAmBxBjB,uBAnBwB,EA0BxBA,uBA1BwB,EAkCzBA,uBAlCyB,EAsCvBA,uBAtCuB,EAuCTA,uBAvCS,EA0CVL,KAAK,CAACuB,KAAN,CAAYC,aA1CF,EA4CJvB,IAAI,CAACqB,SA5CD,EAkDPpB,mBAlDO,EAkDsBF,KAAK,CAACuB,KAAN,CAAYE,aAlDlC,EAoDIpB,uBApDJ,EAoD8CI,qBApD9C,EAuDID,4BAvDJ,EA6DjBH,uBA7DiB,EAiFAA,uBAjFA,EAkFAJ,IAAI,CAACqB,SAlFL,EAiGLlB,MAjGK,EAoGhBC,uBApGgB,EAqGhBA,uBArGgB,EAsGEJ,IAAI,CAACqB,SAtGP,EA8GArB,IAAI,CAACqB,SA9GL,EA6HHtB,KAAK,CAAC0B,IAAN,CAAWC,IA7HR,EA6IT3B,KAAK,CAACuB,KAAN,CAAYE,aA7IH,EAiJIpB,uBAjJJ,EAkJIJ,IAAI,CAACqB,SAlJT,EAqJFtB,KAAK,CAACuB,KAAN,CAAYE,aArJV,EAsJPzB,KAAK,CAACuB,KAAN,CAAYC,aAtJL,CAAzB","sourcesContent":["// Imports\n// _________________________________________________________________________\n\n// Core\nimport styled, { createGlobalStyle, css } from \"styled-components\";\n\n// Constants\nimport { Theme } from \"../../constants/Theme\";\nimport { Root } from \"../../constants/Root\";\nimport {\n  CssFrameBorderWidth,\n  CssFrameSizeWithBorderString,\n} from \"../MellowFrameHeader/styles.scss\";\nimport { Rotate } from \"../../constants/styles/Animation\";\n\n// Begin Styles\n// _________________________________________________________________________\n\n/**\n *\n * @name LayeredSidebarClassName\n * @description The root class name for styling. BEM naming conventions.\n *\n */\nexport const LayeredSidebarClassName = \"layered-sidebar\";\nexport const LayeredSidebarWidth = \"350px\";\nexport const LayeredPaneWidth = \"180px\";\nexport const LayeredSidebarTransitionTime = \".25s\";\nexport const LayeredCollapsedRatio = -0.65;\nexport const LayeredPaneCollapsedPaneWidth = `calc(${LayeredPaneWidth} + (${LayeredPaneWidth} * ${LayeredCollapsedRatio}))`;\n\nexport const GlobalSidebarPaneOffsetVariables = createGlobalStyle<{\n  panes: number;\n  isHovered: boolean;\n}>`\n  :root {\n    /* --${LayeredSidebarClassName}__global-pane-offset: calc(${(props) =>\n  props.panes -\n  1} * (${LayeredPaneCollapsedPaneWidth}) + ${CssFrameBorderWidth}); */\n\n    // Hovered\n    --${LayeredSidebarClassName}__global-pane-offset: ${(props) =>\n  props.isHovered\n    ? `calc(${LayeredPaneWidth} + (${\n        props.panes - 2\n      } * (${LayeredPaneCollapsedPaneWidth})) + ${CssFrameBorderWidth})`\n    : `calc(${\n        props.panes - 1\n      } * (${LayeredPaneCollapsedPaneWidth}) + ${CssFrameBorderWidth})`};\n  }\n`;\n\nexport const SidebarFullwidthCss = css`\n  width: calc(100vw - (${CssFrameSizeWithBorderString} * 2));\n\n  clip-path: polygon(\n    var(--${LayeredSidebarClassName}__global-pane-offset) 0%,\n    100% 0%,\n    100% 100%,\n    var(--${LayeredSidebarClassName}__global-pane-offset) 100%\n  );\n\n  transition: clip-path ${LayeredSidebarTransitionTime} ease-in-out;\n\n  margin-left: calc(${LayeredSidebarWidth} * -1);\n\n  @media (max-width: ${Theme.Base.Media.Width.Sm}) {\n    width: 100%;\n    max-width: 100%;\n    margin-left: 0;\n    clip-path: unset;\n  }\n`;\n\n/**\n *\n * @name LayeredSidebarStyle\n * @author Peter Laxalt\n *\n */\nexport const LayeredSidebarStyle = styled.nav`\n  &.${LayeredSidebarClassName} {\n    // ___________________________\n    // Configuration\n    --${LayeredSidebarClassName}__pane-width: ${LayeredPaneWidth};\n    --${LayeredSidebarClassName}__pane-padding: calc(${Root.FrameSize} * .5);\n\n    /* position: fixed;\n\n    left: 0;\n    top: 0; */\n\n    /* transform: translateX(${Root.FrameSize}); */\n\n    /* will-change: transform; */\n    /* transition: transform .5s ease-in-out; */\n\n    // ___________________________\n    // Modifiers\n    &.${LayeredSidebarClassName}--frame-inactive {\n      transform: translateX(0);\n    }\n\n    opacity: 1;\n    transition: opacity 1s ease;\n\n    &.${LayeredSidebarClassName}--is-scrolled {\n      opacity: .35;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n\n    .${LayeredSidebarClassName}__inner {\n      display: flex;\n      flex-wrap: nowrap;\n\n      .${LayeredSidebarClassName}__pane {\n        width: var(--${LayeredSidebarClassName}__pane-width);\n        height: 100vh;\n\n        background: ${Theme.Color.varBackground};\n\n        padding-top: calc(${Root.FrameSize} * 2.5);\n\n        position: relative;\n        z-index: 2;\n\n        &:not(:first-child) {\n          border-left: ${CssFrameBorderWidth} solid ${Theme.Color.varForeground};\n          /* transform: translateX(-50%); */\n          margin-left: calc(var(--${LayeredSidebarClassName}__pane-width) * ${LayeredCollapsedRatio});\n\n          will-change: margin-left;\n          transition: margin-left ${LayeredSidebarTransitionTime} ease-in-out;\n        }\n\n\n\n        &:hover {\n          + .${LayeredSidebarClassName}__pane {\n            margin-left: 0;\n\n            /* + .${LayeredSidebarClassName}__pane {\n              margin-left: 0;\n            } */\n          }\n        }\n\n        /* &:first-child {\n          padding-left: calc(${Root.FrameSize} * .5);\n        } */\n\n        &__header {\n          /* font-family: dharma; */\n          /* font-size: 5rem; */\n\n          font-size: 1.9rem;\n          font-weight: bold;\n\n          padding-left: var(--${LayeredSidebarClassName}__pane-padding);\n          padding-right: calc(${Root.FrameSize} / 2);\n\n          text-transform: uppercase;\n\n          &--badge {\n            svg {\n              width: 100%;\n              max-width: 100%;\n\n              height: auto;\n\n              z-index: 1;\n\n              fill: currentColor;\n\n              animation: ${Rotate} 20s linear infinite;\n            }\n\n            +.${LayeredSidebarClassName}__pane__list--minor,\n            +.${LayeredSidebarClassName}__pane__list--major {\n              padding-top: calc(${Root.FrameSize} * 1.5);\n            }\n          }\n        }\n\n        &__list {\n\n          &--major {\n            padding-top: calc(${Root.FrameSize} * 1.5);\n          }\n\n          &--minor {\n            padding-top: 1.5rem;\n          }\n\n          &__item {\n            white-space: nowrap;\n\n\n            &--major {\n              font-size: 1.1rem;\n              letter-spacing: .05rem;\n\n              font-family: ${Theme.Font.Code};\n              font-style: italic;\n\n              line-height: 1.5;\n            }\n\n            &--minor {\n              font-size: .6rem;\n              font-weight: bold;\n              text-transform: uppercase;\n              letter-spacing: .1rem;\n\n              line-height: 2.25;\n            }\n\n            a {\n              color: ${Theme.Color.varForeground};\n\n              display: block;\n\n              padding-left: var(--${LayeredSidebarClassName}__pane-padding);\n              padding-right: calc(${Root.FrameSize} / 2);\n\n              &:hover {\n                background: ${Theme.Color.varForeground};\n                color: ${Theme.Color.varBackground};\n\n                text-decoration: none;\n              }\n            }\n\n            &--is-active {\n              a {\n                font-weight: bold;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}