{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectNextSection/ProjectNextSection.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// Core\nimport React, { useEffect, useRef, useState } from \"react\"; // Types\n\nimport { SiteProjects } from \"../../../constants/site/Settings\"; // Vendor\n\nimport gsap from \"gsap\"; // Components\n\nimport { ProjectCard } from \"../../ProjectCard\"; // Styles\n\nimport { ProjectNextSectionClassName, ProjectNextSectionStyle } from \"./styles.scss\";\nimport Link from \"next/link\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nvar lastTranslateX = 0;\nexport var ProjectNextSection = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var _ref$addClass = _ref.addClass,\n      addClass = _ref$addClass === void 0 ? \"\" : _ref$addClass,\n      project = _ref.project;\n\n  var _useState = useState(null),\n      dynamicHeight = _useState[0],\n      setDynamicHeight = _useState[1]; // const [translateX, setTranslateX] = useState(0);\n  // const [windowSize, setWindowSize] = useState(0);\n\n\n  var _useState2 = useState(false),\n      isBreakPoint = _useState2[0],\n      setBreakPoint = _useState2[1];\n\n  var _useState3 = useState(false),\n      isScrolled = _useState3[0],\n      setScrolled = _useState3[1];\n\n  var containerRef = useRef();\n  var objectRef = useRef();\n  var currentTranslation = 0;\n  var boundingClientX = 0;\n\n  var calcDynamicHeight = function calcDynamicHeight(objectWidth) {\n    var vw = window.innerWidth;\n    var vh = window.innerHeight;\n    return objectWidth - vw + vh;\n  };\n\n  var handleDynamicHeight = function handleDynamicHeight(ref, setDynamicHeight) {\n    if (ref && ref.current) {\n      var objectWidth = ref.current.scrollWidth;\n\n      var _dynamicHeight = calcDynamicHeight(objectWidth);\n\n      setDynamicHeight(_dynamicHeight);\n    }\n  };\n\n  var applyScrollListener = function applyScrollListener(ref) // setTranslateX: (translateX: number) => void\n  {\n    window.addEventListener(\"scroll\", function () {\n      var offsetTop = ref && ref.current ? -ref.current.offsetTop : 0; // setDharmaPaused(offsetTop < windowSize / -2);\n      // setTranslateX(offsetTop);\n\n      gsap.to(objectRef.current, {\n        x: offsetTop,\n        transition: 0.1,\n        // duration: 0.02,\n        ease: \"sine.out\"\n      });\n\n      if (offsetTop < window.innerWidth / -2) {\n        setBreakPoint(true);\n      } else {\n        setBreakPoint(false);\n      }\n\n      if (offsetTop < -100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n\n      window.dharmaPaused = offsetTop < window.innerWidth / -2;\n    });\n  };\n\n  var resizeHandler = function resizeHandler() {\n    handleDynamicHeight(objectRef, setDynamicHeight); // setWindowSize(window.innerWidth);\n  };\n\n  useEffect(function () {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ProjectNextSectionStyle, {\n      className: \"\".concat(ProjectNextSectionClassName, \" \").concat(ProjectNextSectionClassName, \"--\").concat(isScrolled ? \"is-scrolled\" : \"is-not-scrolled\", \" \").concat(ProjectNextSectionClassName, \"--\").concat(isBreakPoint ? \"is-at-breakpoint\" : \"is-not-at-breakpoint\", \" \").concat(ProjectNextSectionClassName, \"--\").concat(boundingClientX > lastTranslateX ? \"is-at-end\" : \"is-not-at-end\", \" \").concat(addClass && addClass),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(ProjectNextSectionClassName, \"__outer\"),\n        style: {\n          height: \"\".concat(dynamicHeight, \"px\")\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ProjectNextSectionClassName, \"__sticky-wrapper\"),\n          ref: containerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\".concat(ProjectNextSectionClassName, \"__headline \").concat(ProjectNextSectionClassName, \"__headline--next \"),\n            children: \"Up Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\".concat(ProjectNextSectionClassName, \"__headline \").concat(ProjectNextSectionClassName, \"__headline--keep-browsing \"),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: project.parentSlug,\n              children: [\"IN \", /*#__PURE__*/_jsxDEV(\"a\", {\n                children: project.parentSlug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 22\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\".concat(ProjectNextSectionClassName, \"__x-translate-wrapper\") // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n            ,\n            ref: objectRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\".concat(ProjectNextSectionClassName, \"__horizontal-wrapper\"),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\".concat(ProjectNextSectionClassName, \"__content-wrapper\"),\n                children: SiteProjects.map(function (item, idx) {\n                  if (item.slug !== project.slug) {\n                    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n                      count: idx + 1,\n                      total: SiteProjects.length,\n                      item: item\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 27\n                    }, _this);\n                  } else {\n                    return null;\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n}, \"zk8ZYGNcTnhGGrP/htMLlsPzheE=\")); // End Component\n// ______________________________________________________________________________\n\n_c2 = ProjectNextSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectNextSection$React.memo\");\n$RefreshReg$(_c2, \"ProjectNextSection\");","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectNextSection/ProjectNextSection.tsx"],"names":["React","useEffect","useRef","useState","SiteProjects","gsap","ProjectCard","ProjectNextSectionClassName","ProjectNextSectionStyle","Link","lastTranslateX","ProjectNextSection","memo","addClass","project","dynamicHeight","setDynamicHeight","isBreakPoint","setBreakPoint","isScrolled","setScrolled","containerRef","objectRef","currentTranslation","boundingClientX","calcDynamicHeight","objectWidth","vw","window","innerWidth","vh","innerHeight","handleDynamicHeight","ref","current","scrollWidth","applyScrollListener","addEventListener","offsetTop","to","x","transition","ease","dharmaPaused","resizeHandler","height","parentSlug","map","item","idx","slug","length"],"mappings":"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","sourcesContent":["// Core\nimport React, { useEffect, useRef, useState } from \"react\";\n\n// Types\nimport { LXLT_Project, SiteProjects } from \"../../../constants/site/Settings\";\n\n// Vendor\nimport gsap from \"gsap\";\n\n// Components\nimport { ProjectCard } from \"../../ProjectCard\";\n\n// Styles\nimport {\n  ProjectNextSectionClassName,\n  ProjectNextSectionStyle,\n} from \"./styles.scss\";\nimport Link from \"next/link\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_ProjectNextSection = {\n  addClass?: string;\n  project: LXLT_Project;\n};\n\nexport type LXLT_ScrollCard = {\n  item: LXLT_Project;\n  count?: number;\n  total?: number;\n};\n\ndeclare global {\n  interface Window {\n    dharmaPaused: boolean;\n  }\n}\n\n// Begin Component\n// __________________________________________________________________________________________\n\nlet lastTranslateX: number = 0;\n\nexport const ProjectNextSection: React.FunctionComponent<LXLT_ProjectNextSection> = React.memo(\n  ({ addClass = \"\", project }) => {\n    const [dynamicHeight, setDynamicHeight] = useState(null);\n    // const [translateX, setTranslateX] = useState(0);\n    // const [windowSize, setWindowSize] = useState(0);\n    const [isBreakPoint, setBreakPoint] = useState(false);\n    const [isScrolled, setScrolled] = useState(false);\n\n    const containerRef = useRef<HTMLDivElement>();\n    const objectRef = useRef<HTMLDivElement>();\n\n    let currentTranslation = 0;\n    let boundingClientX = 0;\n\n    const calcDynamicHeight = (objectWidth: number) => {\n      const vw = window.innerWidth;\n      const vh = window.innerHeight;\n      return objectWidth - vw + vh;\n    };\n\n    const handleDynamicHeight = (\n      ref: React.RefObject<HTMLDivElement>,\n      setDynamicHeight: (dynamicHeight: number) => void\n    ) => {\n      if (ref && ref.current) {\n        const objectWidth: number = ref.current.scrollWidth;\n        const dynamicHeight: number = calcDynamicHeight(objectWidth);\n        setDynamicHeight(dynamicHeight);\n      }\n    };\n\n    const applyScrollListener = (\n      ref: React.RefObject<HTMLDivElement>\n      // setTranslateX: (translateX: number) => void\n    ) => {\n      window.addEventListener(\"scroll\", () => {\n        const offsetTop: number =\n          ref && ref.current ? -ref.current.offsetTop : 0;\n\n        // setDharmaPaused(offsetTop < windowSize / -2);\n        // setTranslateX(offsetTop);\n\n        gsap.to(objectRef.current, {\n          x: offsetTop,\n          transition: 0.1,\n          // duration: 0.02,\n          ease: \"sine.out\",\n        });\n\n        if (offsetTop < window.innerWidth / -2) {\n          setBreakPoint(true);\n        } else {\n          setBreakPoint(false);\n        }\n\n        if (offsetTop < -100) {\n          setScrolled(true);\n        } else {\n          setScrolled(false);\n        }\n\n        window.dharmaPaused = offsetTop < window.innerWidth / -2;\n      });\n    };\n\n    const resizeHandler = () => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      // setWindowSize(window.innerWidth);\n    };\n\n    useEffect(() => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      window.addEventListener(\"resize\", resizeHandler);\n      applyScrollListener(containerRef);\n    }, []);\n\n    return (\n      <>\n        <ProjectNextSectionStyle\n          className={`${ProjectNextSectionClassName} ${ProjectNextSectionClassName}--${\n            isScrolled ? `is-scrolled` : `is-not-scrolled`\n          } ${ProjectNextSectionClassName}--${\n            isBreakPoint ? `is-at-breakpoint` : `is-not-at-breakpoint`\n          } ${ProjectNextSectionClassName}--${\n            boundingClientX > lastTranslateX ? `is-at-end` : `is-not-at-end`\n          } ${addClass && addClass}`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Outer Container with Dynamic Height */}\n          <div\n            className={`${ProjectNextSectionClassName}__outer`}\n            style={{ height: `${dynamicHeight}px` }}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Sticky Wrapper */}\n            <div\n              className={`${ProjectNextSectionClassName}__sticky-wrapper`}\n              ref={containerRef}\n            >\n              {/* ____________________________________________________________________ */}\n              {/* Headline */}\n              <div\n                className={`${ProjectNextSectionClassName}__headline ${ProjectNextSectionClassName}__headline--next `}\n              >\n                Up Next\n              </div>\n\n              <div\n                className={`${ProjectNextSectionClassName}__headline ${ProjectNextSectionClassName}__headline--keep-browsing `}\n              >\n                <Link href={project.parentSlug}>\n                  IN <a>{project.parentSlug}</a>\n                </Link>\n              </div>\n\n              {/* ____________________________________________________________________ */}\n              {/* Translation Wrapper */}\n              <div\n                className={`${ProjectNextSectionClassName}__x-translate-wrapper`}\n                // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n                ref={objectRef}\n              >\n                {/* ____________________________________________________________________ */}\n                {/* Horizontal Wrapper */}\n                <div\n                  className={`${ProjectNextSectionClassName}__horizontal-wrapper`}\n                >\n                  {/* ____________________________________________________________________ */}\n                  {/* Content Wrapper */}\n                  <div\n                    className={`${ProjectNextSectionClassName}__content-wrapper`}\n                  >\n                    {SiteProjects.map((item: LXLT_Project, idx: number) => {\n                      if (item.slug !== project.slug) {\n                        return (\n                          <ProjectCard\n                            key={idx}\n                            count={idx + 1}\n                            total={SiteProjects.length}\n                            item={item}\n                          />\n                        );\n                      } else {\n                        return null;\n                      }\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ProjectNextSectionStyle>\n      </>\n    );\n  }\n);\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}