{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Core\nimport React from \"react\"; // Types\n\n// Constants\nimport { TableRowListingClassName } from \"../../../components/Sections/TableListings/styles.scss\"; // Components\n\nimport { AccordionListingRow } from \"../../../components/Sections/AccordionListingRow\";\nimport { TableColumnListing } from \"../../../components/Sections/TableListings\";\nimport { TableRowListing } from \"../../../components/Sections/TableListings/TableRowListings\"; // Begin Component\n// __________________________________________________________________________________________\n\nexport const ProjectMetaSectionClassName = \"project-meta-section\";\n/**\n *\n * @name ProjectMetaSection\n * @author Peter Laxalt\n *\n */\n\nconst ProjectMetaSection = ({\n  project\n}) => {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: `${ProjectMetaSectionClassName}`,\n    children: [project.meta && project.meta.team && /*#__PURE__*/_jsxs(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: `Shoutouts`,\n      labelRight: `Credits`,\n      children: [project.meta && project.meta.team && project.meta.team.core && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--team-table`,\n        data: project.meta.team.core.map(person => {\n          let field = [];\n          field[0] = person.name;\n          field[1] = person.role;\n          field[2] = person.web;\n          field[3] = person.contact;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Team`,\n        tableHeaders: Object.keys(project.meta.team.core[0])\n      }), project.meta && project.meta.team && project.meta.team.mentions && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--team-table`,\n        data: project.meta.team.mentions.map(person => {\n          let field = [];\n          field[0] = person.name;\n          field[1] = person.role;\n          field[2] = person.web;\n          field[3] = person.contact;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Shoutouts`,\n        tableHeaders: Object.keys(project.meta.team.core[0])\n      })]\n    }), project.meta && project.meta.tools && /*#__PURE__*/_jsxs(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: `Approach`,\n      labelRight: `Tools`,\n      children: [project.meta && project.meta.tools && project.meta.tools.software && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.software.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Software`,\n        tableHeaders: Object.keys(project.meta.tools.software[0])\n      }), project.meta && project.meta.tools && project.meta.tools.gear && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.gear.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Gear`,\n        tableHeaders: Object.keys(project.meta.tools.gear[0])\n      }), project.meta && project.meta.tools && project.meta.tools.frontend && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.frontend.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Frontend`,\n        tableHeaders: Object.keys(project.meta.tools.frontend[0])\n      }), project.meta && project.meta.tools && project.meta.tools.backend && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.backend.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Backend`,\n        tableHeaders: Object.keys(project.meta.tools.backend[0])\n      })]\n    }), project.meta && project.meta.awards && /*#__PURE__*/_jsxs(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: `Awards`,\n      labelRight: `Wins`,\n      children: [project.meta && project.meta.awards && project.meta.awards.items && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.awards.items.map(award => {\n          let field = [];\n          field[0] = award.name;\n          field[1] = award.provider;\n          field[2] = award.year;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Awards`,\n        tableHeaders: Object.keys(project.meta.awards.items[0])\n      }), project.meta && project.meta.awards && project.meta.awards.mentions && /*#__PURE__*/_jsx(TableRowListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.awards.mentions.map(award => {\n          let field = [];\n          field[0] = award.name;\n          field[1] = award.publisher;\n          field[2] = award.year;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Mentions`,\n        tableHeaders: Object.keys(project.meta.awards.mentions[0])\n      }), project.meta && project.meta.awards && project.meta.awards.wins && /*#__PURE__*/_jsx(TableColumnListing, {\n        hasSidebar: true,\n        addClass: `${TableRowListingClassName}--wins-table`,\n        data: project.meta.awards.wins.map(win => {\n          return {\n            label: win\n          };\n        }),\n        tableName: `Wins`\n      })]\n    })]\n  });\n};\n\nexport default ProjectMetaSection;","map":null,"metadata":{},"sourceType":"module"}