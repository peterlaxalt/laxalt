{"ast":null,"code":"/**\n *\n * @name slugify.tsx\n * @author Peter Laxalt\n * @description Turn strings into slugs.\n * @example slugify(\"String Name Here\") outputs \"string-name-here\"\n *\n */\nconst slugify = string => {\n  const a = \"àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;\";\n  const b = \"aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n  return string.toString().toLowerCase().replace(/\\s+/g, \"-\") // Replace spaces with -\n  .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n  .replace(/&/g, \"-and-\") // Replace & with ‘and’\n  .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word characters\n  .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n  .replace(/^-+/, \"\") // Trim - from start of text\n  .replace(/-+$/, \"\"); // Trim - from end of text\n};\n\nexport default slugify;","map":{"version":3,"sources":["/Users/manzanita/Repositories/laxalt/web/utils/slugify.tsx"],"names":["slugify","string","a","b","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAIC,MAAD,IAAoB;AAClC,QAAMC,CAAC,GAAG,mDAAV;AACA,QAAMC,CAAC,GAAG,mDAAV;AACA,QAAMC,CAAC,GAAG,IAAIC,MAAJ,CAAWH,CAAC,CAACI,KAAF,CAAQ,EAAR,EAAYC,IAAZ,CAAiB,GAAjB,CAAX,EAAkC,GAAlC,CAAV;AACA,SAAON,MAAM,CACVO,QADI,GAEJC,WAFI,GAGJC,OAHI,CAGI,MAHJ,EAGY,GAHZ,EAGiB;AAHjB,GAIJA,OAJI,CAIIN,CAJJ,EAIQO,CAAD,IAAOR,CAAC,CAACS,MAAF,CAASV,CAAC,CAACW,OAAF,CAAUF,CAAV,CAAT,CAJd,EAIsC;AAJtC,GAKJD,OALI,CAKI,IALJ,EAKU,OALV,EAKmB;AALnB,GAMJA,OANI,CAMI,WANJ,EAMiB,EANjB,EAMqB;AANrB,GAOJA,OAPI,CAOI,QAPJ,EAOc,GAPd,EAOmB;AAPnB,GAQJA,OARI,CAQI,KARJ,EAQW,EARX,EAQe;AARf,GASJA,OATI,CASI,KATJ,EASW,EATX,CAAP,CAJkC,CAaX;AACxB,CAdD;;AAgBA,eAAeV,OAAf","sourcesContent":["/**\n *\n * @name slugify.tsx\n * @author Peter Laxalt\n * @description Turn strings into slugs.\n * @example slugify(\"String Name Here\") outputs \"string-name-here\"\n *\n */\nconst slugify = (string: string) => {\n  const a = \"àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;\";\n  const b = \"aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, \"-and-\") // Replace & with ‘and’\n    .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word characters\n    .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n};\n\nexport default slugify;\n"]},"metadata":{},"sourceType":"module"}