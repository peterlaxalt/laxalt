{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n// Core\nimport React, { createRef, PureComponent } from \"react\"; // Styles\n\nimport { CanvasCursorStyle, CanvasCursorClassName, CanvasCursorGlobalStyles } from \"./styles.scss\"; // Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Cursor\nexport class CanvasCursor extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"ctx\", void 0);\n\n    _defineProperty(this, \"canvasRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseIsPressed: false,\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0\n      },\n      helper: {\n        text: \"\",\n        lastOpacity: 0,\n        opacity: 0\n      },\n      vw: 0,\n      vh: 0\n    };\n    this.ctx;\n    this.calculateSize = this.calculateSize.bind(this);\n    this.renderMouse = this.renderMouse.bind(this);\n    this.startDrawing = this.startDrawing.bind(this);\n    this.drawLine = this.drawLine.bind(this);\n    this.stopDrawing = this.stopDrawing.bind(this);\n    this.renderLine = this.renderLine.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    // _____________________\n    // Setup our sizes\n    this.calculateSize();\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2\n      }\n    }); // _____________________\n    // Update initial coordinates\n\n    this.updateMouseCoords(); // _____________________\n    // Add event listeners\n\n    window.addEventListener(\"mousemove\", e => {\n      this.setState({\n        mouseX: e.clientX,\n        mouseY: e.clientY\n      });\n      this.drawLine(e);\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n    window.addEventListener(\"mousedown\", this.startDrawing);\n    window.addEventListener(\"mouseup\", this.stopDrawing); // window.addEventListener(\"keydown\", this.clearCanvas);\n  } // ______________________________\n  // Calculate Sizes\n\n\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight\n    });\n\n    if (this.canvasRef.current) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  } // ______________________________\n  // Canvas Reference\n\n\n  // ______________________________\n  // Update Mouse Coordinates\n  updateMouseCoords() {\n    requestAnimationFrame(this.renderMouse);\n  } // ______________________________\n  // Render to canvas\n\n\n  renderMouse() {\n    if (this.canvasRef.current) {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n      this.setState({\n        mouseCursor: {\n          radius: 10,\n          lastX: this.lerp(this.state.mouseCursor.lastX, this.state.mouseX, 0.25),\n          lastY: this.lerp(this.state.mouseCursor.lastY, this.state.mouseY, 0.25)\n        }\n      });\n      ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n      ctx.beginPath();\n      ctx.arc(this.state.mouseCursor.lastX, this.state.mouseCursor.lastY, this.state.mouseCursor.radius, 0, Math.PI * 2, false);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill();\n      ctx.closePath(); // _____________________________\n      // Scroll Down Helper\n\n      if (window.scrollY < 100 && this.state.mouseY > 100 && this.state.mouseY < window.innerHeight - 100) {\n        this.setState({\n          helper: {\n            text: \"Scroll Down\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n            opacity: 1\n          }\n        });\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n      } else {\n        this.setState({\n          helper: {\n            text: \"Scroll Down\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, this.state.helper.opacity, 0.15),\n            opacity: 0\n          }\n        });\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n      } // ____________________________\n      // Recursively animate\n\n\n      requestAnimationFrame(this.renderMouse);\n    }\n  } // ______________________________\n  // LERP Helper Function\n\n\n  lerp(a, b, n) {\n    return (1 - n) * a + n * b;\n  } // ____________________________\n  // Drawing Functions\n\n\n  startDrawing(e) {\n    this.setState({\n      mouseIsPressed: true\n    });\n  }\n\n  drawLine(e) {\n    if (this.state.mouseIsPressed) {\n      console.log(\"DRAWING\");\n      this.renderLine(\"#ffffff\", this.state.mouseX, this.state.mouseY, this.state.mouseCursor.lastX, this.state.mouseCursor.lastY);\n    }\n  }\n\n  stopDrawing() {\n    this.setState({\n      mouseIsPressed: false\n    });\n  } // clearCanvas(whenPressKey) {\n  //   if (whenPressKey.keyCode == key.C) {\n  //     paper.clearRect(0, 0, square.width, square.height);\n  //   }\n  // }\n\n\n  renderLine(color, xStart, yStart, xEnd, yEnd) {\n    let ctx = this.canvasRef.current.getContext(\"2d\");\n    console.count(\"rendering line\", ctx);\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.moveTo(xStart, yStart);\n    ctx.lineTo(xEnd, yEnd);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CanvasCursorGlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CanvasCursorStyle, {\n        ref: this.canvasRef,\n        className: `${CanvasCursorClassName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx"],"names":["React","createRef","PureComponent","CanvasCursorStyle","CanvasCursorClassName","CanvasCursorGlobalStyles","CanvasCursor","constructor","props","state","mouseX","mouseY","mouseIsPressed","mouseCursor","radius","lastX","lastY","helper","text","lastOpacity","opacity","vw","vh","ctx","calculateSize","bind","renderMouse","startDrawing","drawLine","stopDrawing","renderLine","componentDidMount","init","setState","window","innerWidth","innerHeight","updateMouseCoords","addEventListener","e","clientX","clientY","canvasRef","current","width","height","requestAnimationFrame","getContext","lerp","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath","scrollY","font","fillText","a","b","n","console","log","color","xStart","yStart","xEnd","yEnd","count","strokeStyle","lineWidth","moveTo","lineTo","stroke","render"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD,C,CAEA;;AACA,SACEC,iBADF,EAEEC,qBAFF,EAGEC,wBAHF,QAIO,eAJP,C,CAMA;AACA;;AAyBA;AACA,OAAO,MAAMC,YAAN,SAA2BJ,aAA3B,CAGL;AAGAK,EAAAA,WAAW,CAACC,KAAD,EAA2B;AACpC,UAAMA,KAAN;;AADoC;;AAAA,oDAyFUP,SAAS,EAzFnB;;AAGpC,SAAKQ,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CADG;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAGXC,MAAAA,cAAc,EAAE,KAHL;AAKXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE,EADG;AAEXC,QAAAA,KAAK,EAAE,CAFI;AAGXC,QAAAA,KAAK,EAAE;AAHI,OALF;AAWXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,WAAW,EAAE,CAFP;AAGNC,QAAAA,OAAO,EAAE;AAHH,OAXG;AAiBXC,MAAAA,EAAE,EAAE,CAjBO;AAkBXC,MAAAA,EAAE,EAAE;AAlBO,KAAb;AAqBA,SAAKC,GAAL;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKK,UAAL,GAAkB,KAAKA,UAAL,CAAgBL,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL;AACD;;AAEDA,EAAAA,IAAI,GAAG;AACL;AACA;AACA,SAAKR,aAAL;AAEA,SAAKS,QAAL,CAAc;AACZvB,MAAAA,MAAM,EAAEwB,MAAM,CAACC,UAAP,GAAoB,CADhB;AAEZxB,MAAAA,MAAM,EAAEuB,MAAM,CAACE,WAAP,GAAqB,CAFjB;AAIZvB,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE,EADG;AAEXC,QAAAA,KAAK,EAAEmB,MAAM,CAACC,UAAP,GAAoB,CAFhB;AAGXnB,QAAAA,KAAK,EAAEkB,MAAM,CAACE,WAAP,GAAqB;AAHjB;AAJD,KAAd,EALK,CAgBL;AACA;;AACA,SAAKC,iBAAL,GAlBK,CAoBL;AACA;;AACAH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,WAAxB,EAAsCC,CAAD,IAAO;AAC1C,WAAKN,QAAL,CAAc;AACZvB,QAAAA,MAAM,EAAE6B,CAAC,CAACC,OADE;AAEZ7B,QAAAA,MAAM,EAAE4B,CAAC,CAACE;AAFE,OAAd;AAKA,WAAKb,QAAL,CAAcW,CAAd;AACD,KAPD;AAQAL,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKd,aAAvC,EAAsD,KAAtD;AACAU,IAAAA,MAAM,CAACI,gBAAP,CAAwB,WAAxB,EAAqC,KAAKX,YAA1C;AACAO,IAAAA,MAAM,CAACI,gBAAP,CAAwB,SAAxB,EAAmC,KAAKT,WAAxC,EAhCK,CAiCL;AACD,GA1ED,CA4EA;AACA;;;AACAL,EAAAA,aAAa,GAAG;AACd,SAAKS,QAAL,CAAc;AACZZ,MAAAA,EAAE,EAAEa,MAAM,CAACC,UADC;AAEZb,MAAAA,EAAE,EAAEY,MAAM,CAACE;AAFC,KAAd;;AAKA,QAAI,KAAKM,SAAL,CAAeC,OAAnB,EAA4B;AAC1B,WAAKD,SAAL,CAAeC,OAAf,CAAuBC,KAAvB,GAA+BV,MAAM,CAACC,UAAtC;AACA,WAAKO,SAAL,CAAeC,OAAf,CAAuBE,MAAvB,GAAgCX,MAAM,CAACE,WAAvC;AACD;AACF,GAxFD,CA0FA;AACA;;;AAGA;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAClBS,IAAAA,qBAAqB,CAAC,KAAKpB,WAAN,CAArB;AACD,GAlGD,CAoGA;AACA;;;AACAA,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKgB,SAAL,CAAeC,OAAnB,EAA4B;AAC1B,UAAIpB,GAAG,GAAG,KAAKmB,SAAL,CAAeC,OAAf,CAAuBI,UAAvB,CAAkC,IAAlC,CAAV;AAEA,WAAKd,QAAL,CAAc;AACZpB,QAAAA,WAAW,EAAE;AACXC,UAAAA,MAAM,EAAE,EADG;AAEXC,UAAAA,KAAK,EAAE,KAAKiC,IAAL,CACL,KAAKvC,KAAL,CAAWI,WAAX,CAAuBE,KADlB,EAEL,KAAKN,KAAL,CAAWC,MAFN,EAGL,IAHK,CAFI;AAOXM,UAAAA,KAAK,EAAE,KAAKgC,IAAL,CACL,KAAKvC,KAAL,CAAWI,WAAX,CAAuBG,KADlB,EAEL,KAAKP,KAAL,CAAWE,MAFN,EAGL,IAHK;AAPI;AADD,OAAd;AAgBAY,MAAAA,GAAG,CAAC0B,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKxC,KAAL,CAAWY,EAA/B,EAAmC,KAAKZ,KAAL,CAAWa,EAA9C;AACAC,MAAAA,GAAG,CAAC2B,SAAJ;AACA3B,MAAAA,GAAG,CAAC4B,GAAJ,CACE,KAAK1C,KAAL,CAAWI,WAAX,CAAuBE,KADzB,EAEE,KAAKN,KAAL,CAAWI,WAAX,CAAuBG,KAFzB,EAGE,KAAKP,KAAL,CAAWI,WAAX,CAAuBC,MAHzB,EAIE,CAJF,EAKEsC,IAAI,CAACC,EAAL,GAAU,CALZ,EAME,KANF;AAQA9B,MAAAA,GAAG,CAAC+B,SAAJ,GAAgB,SAAhB;AACA/B,MAAAA,GAAG,CAACgC,IAAJ;AACAhC,MAAAA,GAAG,CAACiC,SAAJ,GA/B0B,CAiC1B;AACA;;AACA,UACEtB,MAAM,CAACuB,OAAP,GAAiB,GAAjB,IACA,KAAKhD,KAAL,CAAWE,MAAX,GAAoB,GADpB,IAEA,KAAKF,KAAL,CAAWE,MAAX,GAAoBuB,MAAM,CAACE,WAAP,GAAqB,GAH3C,EAIE;AACA,aAAKH,QAAL,CAAc;AACZhB,UAAAA,MAAM,EAAE;AACNC,YAAAA,IAAI,EAAE,aADA;AAENC,YAAAA,WAAW,EAAE,KAAK6B,IAAL,CAAU,KAAKvC,KAAL,CAAWQ,MAAX,CAAkBE,WAA5B,EAAyC,CAAzC,EAA4C,IAA5C,CAFP;AAGNC,YAAAA,OAAO,EAAE;AAHH;AADI,SAAd;AAQAG,QAAAA,GAAG,CAACmC,IAAJ,GAAW,iCAAX;AACAnC,QAAAA,GAAG,CAAC+B,SAAJ,GAAiB,qBAAoB,KAAK7C,KAAL,CAAWQ,MAAX,CAAkBE,WAAY,GAAnE;AACAI,QAAAA,GAAG,CAACoC,QAAJ,CACE,KAAKlD,KAAL,CAAWQ,MAAX,CAAkBC,IADpB,EAEE,KAAKT,KAAL,CAAWI,WAAX,CAAuBE,KAAvB,GAA+B,EAFjC,EAGE,KAAKN,KAAL,CAAWI,WAAX,CAAuBG,KAAvB,GAA+B,CAAC,EAHlC;AAKD,OApBD,MAoBO;AACL,aAAKiB,QAAL,CAAc;AACZhB,UAAAA,MAAM,EAAE;AACNC,YAAAA,IAAI,EAAE,aADA;AAENC,YAAAA,WAAW,EAAE,KAAK6B,IAAL,CACX,KAAKvC,KAAL,CAAWQ,MAAX,CAAkBE,WADP,EAEX,KAAKV,KAAL,CAAWQ,MAAX,CAAkBG,OAFP,EAGX,IAHW,CAFP;AAONA,YAAAA,OAAO,EAAE;AAPH;AADI,SAAd;AAYAG,QAAAA,GAAG,CAACmC,IAAJ,GAAW,iCAAX;AACAnC,QAAAA,GAAG,CAAC+B,SAAJ,GAAiB,qBAAoB,KAAK7C,KAAL,CAAWQ,MAAX,CAAkBE,WAAY,GAAnE;AACAI,QAAAA,GAAG,CAACoC,QAAJ,CACE,KAAKlD,KAAL,CAAWQ,MAAX,CAAkBC,IADpB,EAEE,KAAKT,KAAL,CAAWI,WAAX,CAAuBE,KAAvB,GAA+B,EAFjC,EAGE,KAAKN,KAAL,CAAWI,WAAX,CAAuBG,KAAvB,GAA+B,CAAC,EAHlC;AAKD,OA3EyB,CA6E1B;AACA;;;AAEA8B,MAAAA,qBAAqB,CAAC,KAAKpB,WAAN,CAArB;AACD;AACF,GAzLD,CA2LA;AACA;;;AACAsB,EAAAA,IAAI,CAACY,CAAD,EAAYC,CAAZ,EAAuBC,CAAvB,EAAkC;AACpC,WAAO,CAAC,IAAIA,CAAL,IAAUF,CAAV,GAAcE,CAAC,GAAGD,CAAzB;AACD,GA/LD,CAiMA;AACA;;;AACAlC,EAAAA,YAAY,CAACY,CAAD,EAAI;AACd,SAAKN,QAAL,CAAc;AACZrB,MAAAA,cAAc,EAAE;AADJ,KAAd;AAGD;;AAEDgB,EAAAA,QAAQ,CAACW,CAAD,EAAI;AACV,QAAI,KAAK9B,KAAL,CAAWG,cAAf,EAA+B;AAC7BmD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,WAAKlC,UAAL,CACE,SADF,EAEE,KAAKrB,KAAL,CAAWC,MAFb,EAGE,KAAKD,KAAL,CAAWE,MAHb,EAIE,KAAKF,KAAL,CAAWI,WAAX,CAAuBE,KAJzB,EAKE,KAAKN,KAAL,CAAWI,WAAX,CAAuBG,KALzB;AAOD;AACF;;AAEDa,EAAAA,WAAW,GAAG;AACZ,SAAKI,QAAL,CAAc;AACZrB,MAAAA,cAAc,EAAE;AADJ,KAAd;AAGD,GA3ND,CA6NA;AACA;AACA;AACA;AACA;;;AAEAkB,EAAAA,UAAU,CACRmC,KADQ,EAERC,MAFQ,EAGRC,MAHQ,EAIRC,IAJQ,EAKRC,IALQ,EAMR;AACA,QAAI9C,GAAG,GAAG,KAAKmB,SAAL,CAAeC,OAAf,CAAuBI,UAAvB,CAAkC,IAAlC,CAAV;AAEAgB,IAAAA,OAAO,CAACO,KAAR,CAAc,gBAAd,EAAgC/C,GAAhC;AAEAA,IAAAA,GAAG,CAAC2B,SAAJ;AACA3B,IAAAA,GAAG,CAACgD,WAAJ,GAAkBN,KAAlB;AACA1C,IAAAA,GAAG,CAACiD,SAAJ,GAAgB,CAAhB;AACAjD,IAAAA,GAAG,CAACkD,MAAJ,CAAWP,MAAX,EAAmBC,MAAnB;AACA5C,IAAAA,GAAG,CAACmD,MAAJ,CAAWN,IAAX,EAAiBC,IAAjB;AACA9C,IAAAA,GAAG,CAACoD,MAAJ;AACApD,IAAAA,GAAG,CAACiC,SAAJ;AACD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,iBAAD;AACE,QAAA,GAAG,EAAE,KAAKlC,SADZ;AAEE,QAAA,SAAS,EAAG,GAAEtC,qBAAsB;AAFtC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAUD;;AAlQD","sourcesContent":["/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n\n// Core\nimport React, { createRef, PureComponent } from \"react\";\n\n// Styles\nimport {\n  CanvasCursorStyle,\n  CanvasCursorClassName,\n  CanvasCursorGlobalStyles,\n} from \"./styles.scss\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport type LXLT_CanvasCursor = {};\n\nexport type LXLT_CanvasCursor_State = {\n  mouseX: number;\n  mouseY: number;\n  mouseIsPressed: boolean;\n\n  mouseCursor: {\n    radius: number;\n    lastX: number;\n    lastY: number;\n  };\n\n  helper: {\n    text: string;\n    lastOpacity: number;\n    opacity: number;\n  };\n\n  vw: number;\n  vh: number;\n};\n\n// Cursor\nexport class CanvasCursor extends PureComponent<\n  LXLT_CanvasCursor,\n  LXLT_CanvasCursor_State\n> {\n  ctx: CanvasRenderingContext2D;\n\n  constructor(props: LXLT_CanvasCursor) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseIsPressed: false,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0,\n      },\n\n      helper: {\n        text: \"\",\n        lastOpacity: 0,\n        opacity: 0,\n      },\n\n      vw: 0,\n      vh: 0,\n    };\n\n    this.ctx;\n    this.calculateSize = this.calculateSize.bind(this);\n    this.renderMouse = this.renderMouse.bind(this);\n    this.startDrawing = this.startDrawing.bind(this);\n    this.drawLine = this.drawLine.bind(this);\n    this.stopDrawing = this.stopDrawing.bind(this);\n    this.renderLine = this.renderLine.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    // _____________________\n    // Setup our sizes\n    this.calculateSize();\n\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2,\n      },\n    });\n\n    // _____________________\n    // Update initial coordinates\n    this.updateMouseCoords();\n\n    // _____________________\n    // Add event listeners\n    window.addEventListener(\"mousemove\", (e) => {\n      this.setState({\n        mouseX: e.clientX,\n        mouseY: e.clientY,\n      });\n\n      this.drawLine(e);\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n    window.addEventListener(\"mousedown\", this.startDrawing);\n    window.addEventListener(\"mouseup\", this.stopDrawing);\n    // window.addEventListener(\"keydown\", this.clearCanvas);\n  }\n\n  // ______________________________\n  // Calculate Sizes\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight,\n    });\n\n    if (this.canvasRef.current) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  // ______________________________\n  // Canvas Reference\n  canvasRef: React.RefObject<HTMLCanvasElement> = createRef<HTMLCanvasElement>();\n\n  // ______________________________\n  // Update Mouse Coordinates\n  updateMouseCoords() {\n    requestAnimationFrame(this.renderMouse);\n  }\n\n  // ______________________________\n  // Render to canvas\n  renderMouse() {\n    if (this.canvasRef.current) {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n\n      this.setState({\n        mouseCursor: {\n          radius: 10,\n          lastX: this.lerp(\n            this.state.mouseCursor.lastX,\n            this.state.mouseX,\n            0.25\n          ),\n          lastY: this.lerp(\n            this.state.mouseCursor.lastY,\n            this.state.mouseY,\n            0.25\n          ),\n        },\n      });\n\n      ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n      ctx.beginPath();\n      ctx.arc(\n        this.state.mouseCursor.lastX,\n        this.state.mouseCursor.lastY,\n        this.state.mouseCursor.radius,\n        0,\n        Math.PI * 2,\n        false\n      );\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill();\n      ctx.closePath();\n\n      // _____________________________\n      // Scroll Down Helper\n      if (\n        window.scrollY < 100 &&\n        this.state.mouseY > 100 &&\n        this.state.mouseY < window.innerHeight - 100\n      ) {\n        this.setState({\n          helper: {\n            text: \"Scroll Down\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n            opacity: 1,\n          },\n        });\n\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(\n          this.state.helper.text,\n          this.state.mouseCursor.lastX + 15,\n          this.state.mouseCursor.lastY + -15\n        );\n      } else {\n        this.setState({\n          helper: {\n            text: \"Scroll Down\",\n            lastOpacity: this.lerp(\n              this.state.helper.lastOpacity,\n              this.state.helper.opacity,\n              0.15\n            ),\n            opacity: 0,\n          },\n        });\n\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(\n          this.state.helper.text,\n          this.state.mouseCursor.lastX + 15,\n          this.state.mouseCursor.lastY + -15\n        );\n      }\n\n      // ____________________________\n      // Recursively animate\n\n      requestAnimationFrame(this.renderMouse);\n    }\n  }\n\n  // ______________________________\n  // LERP Helper Function\n  lerp(a: number, b: number, n: number) {\n    return (1 - n) * a + n * b;\n  }\n\n  // ____________________________\n  // Drawing Functions\n  startDrawing(e) {\n    this.setState({\n      mouseIsPressed: true,\n    });\n  }\n\n  drawLine(e) {\n    if (this.state.mouseIsPressed) {\n      console.log(\"DRAWING\");\n\n      this.renderLine(\n        \"#ffffff\",\n        this.state.mouseX,\n        this.state.mouseY,\n        this.state.mouseCursor.lastX,\n        this.state.mouseCursor.lastY\n      );\n    }\n  }\n\n  stopDrawing() {\n    this.setState({\n      mouseIsPressed: false,\n    });\n  }\n\n  // clearCanvas(whenPressKey) {\n  //   if (whenPressKey.keyCode == key.C) {\n  //     paper.clearRect(0, 0, square.width, square.height);\n  //   }\n  // }\n\n  renderLine(\n    color: string,\n    xStart: number,\n    yStart: number,\n    xEnd: number,\n    yEnd: number\n  ) {\n    let ctx = this.canvasRef.current.getContext(\"2d\");\n\n    console.count(\"rendering line\", ctx);\n\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.moveTo(xStart, yStart);\n    ctx.lineTo(xEnd, yEnd);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  render() {\n    return (\n      <>\n        {/* <UniversallyHideCursor /> */}\n        <CanvasCursorGlobalStyles />\n        <CanvasCursorStyle\n          ref={this.canvasRef}\n          className={`${CanvasCursorClassName}`}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}