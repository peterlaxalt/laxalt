{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/manzanita/Repositories/laxalt/web/components/HoverGrid/HoverGrid.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n *\n * HoverGrid.js\n * @author Peter Laxalt\n * @description The website HoverGrid.\n *\n */\n// Core\nimport React, { Component } from \"react\";\n// Styles\nimport { HoverGridStyle } from \"./styles.scss\"; // Begin Component\n//////////////////////////////////////////////////////////////////////\n// HoverGrid\n\nexport var HoverGrid = /*#__PURE__*/function (_Component) {\n  _inherits(HoverGrid, _Component);\n\n  var _super = _createSuper(HoverGrid);\n\n  function HoverGrid(props) {\n    var _this;\n\n    _classCallCheck(this, HoverGrid);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"quadrant\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"view\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"requestUpdate\", function (e) {\n      var init = function init() {\n        _this.setMouseCoords(e);\n      };\n\n      window.requestAnimationFrame(init);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createQuadrants\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          quadrant = _assertThisInitialize.quadrant,\n          view = _assertThisInitialize.view;\n\n      var v = view.current;\n      var q = quadrant.current;\n\n      function cloneAndAddNode(n, view, c) {\n        var nClone = n.cloneNode(true);\n        nClone.classList.remove(\"--root\");\n        nClone.classList.add(c);\n        view.appendChild(nClone);\n      }\n\n      cloneAndAddNode(q, v, \"--1a\");\n      cloneAndAddNode(q, v, \"--2a\");\n      cloneAndAddNode(q, v, \"--3a\");\n      cloneAndAddNode(q, v, \"--1b\");\n      cloneAndAddNode(q, v, \"--3b\");\n      cloneAndAddNode(q, v, \"--1c\");\n      cloneAndAddNode(q, v, \"--2c\");\n      cloneAndAddNode(q, v, \"--3c\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setQuadrantCoords\", function () {\n      var _this$state = _this.state,\n          mouseX = _this$state.mouseX,\n          mouseY = _this$state.mouseY,\n          winH = _this$state.winH,\n          winW = _this$state.winW;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          quadrant = _assertThisInitialize2.quadrant;\n\n      var q = quadrant.current;\n\n      if (q) {\n        console.log(\"quadrant:\", q);\n\n        _this.setGridCoords(q);\n\n        return;\n      } else {\n        console.log(\"quadrant not found\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setGridCoords\", function (q) {\n      console.log(\"setGridCoords:\", _this.state);\n      var qW = q.clientWidth;\n      var qH = q.clientHeight;\n\n      _this.setState({\n        quadW: qW,\n        quadH: qH,\n        gX: qW * -1,\n        gY: qH * -1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateGridCoords\", function () {\n      var _this$state2 = _this.state,\n          mouseX = _this$state2.mouseX,\n          mouseY = _this$state2.mouseY,\n          winH = _this$state2.winH,\n          winW = _this$state2.winW,\n          cxRatio = _this$state2.cxRatio,\n          cyRatio = _this$state2.cyRatio,\n          posX = _this$state2.posX,\n          posY = _this$state2.posY,\n          quadW = _this$state2.quadW,\n          quadH = _this$state2.quadH,\n          gX = _this$state2.gX,\n          gY = _this$state2.gY;\n      var strength = 0.5;\n      var xSensitivity = 0.97;\n      var ySensitivity = 0.97;\n\n      var inc = function inc(r) {\n        return strength * (1 - r);\n      };\n\n      if (cxRatio <= xSensitivity) {\n        if (posX == \"right\" && gX - inc(cxRatio) >= quadW * -2) {\n          _this.setState({\n            gX: gX - inc(cxRatio)\n          });\n        }\n\n        if (posX == \"left\" && gX + inc(cxRatio) <= 0) {\n          _this.setState({\n            gX: gX + inc(cxRatio)\n          });\n        }\n      }\n\n      if (cyRatio <= ySensitivity) {\n        if (posY == \"top\" && gY + inc(cyRatio) <= 0) {\n          _this.setState({\n            gY: gY + inc(cyRatio)\n          });\n        }\n\n        if (posY == \"bottom\" && gY - inc(cyRatio) >= quadH * -2) {\n          _this.setState({\n            gY: gY - inc(cyRatio)\n          });\n        }\n      }\n\n      _this.updateGridCoords;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setMouseCoords\", function (e) {\n      _this.setState({\n        mouseX: e.clientX,\n        mouseY: e.clientY\n      });\n\n      _this.setMousePosition;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setMousePosition\", function () {\n      var _this$state3 = _this.state,\n          mouseX = _this$state3.mouseX,\n          mouseY = _this$state3.mouseY,\n          winH = _this$state3.winH,\n          winW = _this$state3.winW;\n      var cY = winH / 2;\n      var cX = winW / 2;\n      var cxRatio = cX;\n      var cyRatio = 0;\n      var l = false;\n      var r = false;\n      var t = false;\n      var b = false;\n      var pos = \"initial\";\n      var x = \"initial\";\n      var y = \"initial\"; // Center ratio\n\n      if (mouseX <= cX) {\n        cxRatio = mouseX / cX;\n      }\n\n      if (mouseX > cX) {\n        cxRatio = (winW - mouseX) / cX;\n      }\n\n      if (mouseY <= cY) {\n        cyRatio = mouseY / cY;\n      }\n\n      if (mouseY > cY) {\n        cyRatio = (winH - mouseY) / cY;\n      } // Positions\n\n\n      if (mouseX < cX) {\n        l = true;\n        r = false;\n        x = \"left\";\n      }\n\n      if (mouseX > cX) {\n        l = false;\n        r = true;\n        x = \"right\";\n      }\n\n      if (mouseX == cX) {\n        l = false;\n        r = false;\n        x = \"center\";\n      }\n\n      if (mouseY > cY) {\n        b = true;\n        t = false;\n        y = \"bottom\";\n      }\n\n      if (mouseY < cY) {\n        b = false;\n        t = true;\n        y = \"top\";\n      }\n\n      if (mouseY == cY) {\n        b = false;\n        t = false;\n        y = \"center\";\n      }\n\n      _this.setState({\n        posY: y,\n        posX: x,\n        cxRatio: cxRatio,\n        cyRatio: cyRatio\n      });\n\n      _this.updateGridCoords;\n    });\n\n    _this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      winW: 0,\n      winH: 0,\n      posX: \"center\",\n      posY: \"center\",\n      cxRatio: 0,\n      // Ratio from the center, 0 is center\n      cyRatio: 0,\n      // Ratio from the center, 0 is center\n      gX: 0,\n      gY: 0,\n      quadW: 0,\n      quadH: 0\n    };\n    _this.quadrant = /*#__PURE__*/React.createRef();\n    _this.view = /*#__PURE__*/React.createRef(); // this.setHoverGridPosition = this.setHoverGridPosition.bind(this);\n    // // this.toggleHoverGridState = this.toggleHoverGridState.bind(this);\n\n    return _this;\n  }\n\n  _createClass(HoverGrid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        winW: window.innerWidth,\n        winH: window.innerHeight\n      });\n      this.setQuadrantCoords();\n      this.createQuadrants(); // function step() {\n      //   window.requestAnimationFrame(this.set.\n      // }\n\n      document.addEventListener(\"mousemove\", this.requestUpdate); // document.addEventListener(\"mousedown\", this.toggleHoverGridState, false);\n      // document.addEventListener(\"mouseup\", this.toggleHoverGridState, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"mousemove\", this.requestUpdate, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var items = [1, 2, 3, 4, 5, 6];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(HoverGridStyle, {\n          style: _defineProperty({}, \"--c\", 3),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"v\",\n            style: {\n              transform: \"translate(\".concat(this.state.gX, \"px, \").concat(this.state.gY, \"px)\")\n            },\n            ref: this.view,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"q --root\",\n              ref: this.quadrant,\n              children: items.map(function (i, idx) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"i i--\".concat(i),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    \"data-i\": i,\n                    className: \"i-i\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, _this2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, _this2);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return HoverGrid;\n}(Component);","map":{"version":3,"sources":["/Users/manzanita/Repositories/laxalt/web/components/HoverGrid/HoverGrid.tsx"],"names":["React","Component","HoverGridStyle","HoverGrid","props","e","init","setMouseCoords","window","requestAnimationFrame","quadrant","view","v","current","q","cloneAndAddNode","n","c","nClone","cloneNode","classList","remove","add","appendChild","state","mouseX","mouseY","winH","winW","console","log","setGridCoords","qW","clientWidth","qH","clientHeight","setState","quadW","quadH","gX","gY","cxRatio","cyRatio","posX","posY","strength","xSensitivity","ySensitivity","inc","r","updateGridCoords","clientX","clientY","setMousePosition","cY","cX","l","t","b","pos","x","y","createRef","innerWidth","innerHeight","setQuadrantCoords","createQuadrants","document","addEventListener","requestUpdate","removeEventListener","items","transform","map","i","idx"],"mappings":"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","sourcesContent":["/**\n *\n * HoverGrid.js\n * @author Peter Laxalt\n * @description The website HoverGrid.\n *\n */\n\n// Core\nimport { timeStamp } from \"console\";\nimport React, { Component, createRef } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// Styles\nimport { HoverGridStyle } from \"./styles.scss\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// HoverGrid\nexport class HoverGrid extends Component<{}, any> {\n  quadrant: React.RefObject<HTMLDivElement>;\n  view: React.RefObject<HTMLDivElement>;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n\n      winW: 0,\n      winH: 0,\n\n      posX: \"center\",\n      posY: \"center\",\n\n      cxRatio: 0, // Ratio from the center, 0 is center\n      cyRatio: 0, // Ratio from the center, 0 is center\n\n      gX: 0,\n      gY: 0,\n\n      quadW: 0,\n      quadH: 0,\n    };\n\n    this.quadrant = React.createRef();\n    this.view = React.createRef();\n\n    // this.setHoverGridPosition = this.setHoverGridPosition.bind(this);\n    // // this.toggleHoverGridState = this.toggleHoverGridState.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.setState({\n      winW: window.innerWidth,\n      winH: window.innerHeight,\n    });\n\n    this.setQuadrantCoords();\n    this.createQuadrants();\n\n    // function step() {\n    //   window.requestAnimationFrame(this.set.\n    // }\n\n    document.addEventListener(\"mousemove\", this.requestUpdate);\n\n    // document.addEventListener(\"mousedown\", this.toggleHoverGridState, false);\n    // document.addEventListener(\"mouseup\", this.toggleHoverGridState, false);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener(\"mousemove\", this.requestUpdate, false);\n  }\n\n  requestUpdate = (e: MouseEvent) => {\n    const init = () => {\n      this.setMouseCoords(e);\n    };\n\n    window.requestAnimationFrame(init);\n  };\n\n  createQuadrants = () => {\n    let { quadrant, view } = this;\n\n    let v = view.current;\n    let q = quadrant.current;\n\n    function cloneAndAddNode(\n      n: HTMLDivElement,\n      view: HTMLDivElement,\n      c: string\n    ) {\n      let nClone = n.cloneNode(true) as HTMLDivElement;\n\n      nClone.classList.remove(\"--root\");\n      nClone.classList.add(c);\n\n      view.appendChild(nClone);\n    }\n\n    cloneAndAddNode(q, v, \"--1a\");\n    cloneAndAddNode(q, v, \"--2a\");\n    cloneAndAddNode(q, v, \"--3a\");\n    cloneAndAddNode(q, v, \"--1b\");\n    cloneAndAddNode(q, v, \"--3b\");\n    cloneAndAddNode(q, v, \"--1c\");\n    cloneAndAddNode(q, v, \"--2c\");\n    cloneAndAddNode(q, v, \"--3c\");\n  };\n\n  setQuadrantCoords = () => {\n    let { mouseX, mouseY, winH, winW } = this.state;\n    let { quadrant } = this;\n\n    let q = quadrant.current;\n\n    if (q) {\n      console.log(\"quadrant:\", q);\n\n      this.setGridCoords(q);\n\n      return;\n    } else {\n      console.log(\"quadrant not found\");\n    }\n  };\n\n  setGridCoords = (q: HTMLDivElement) => {\n    console.log(\"setGridCoords:\", this.state);\n\n    let qW = q.clientWidth;\n    let qH = q.clientHeight;\n\n    this.setState({\n      quadW: qW,\n      quadH: qH,\n\n      gX: qW * -1,\n      gY: qH * -1,\n    });\n  };\n\n  updateGridCoords = () => {\n    let {\n      mouseX,\n      mouseY,\n      winH,\n      winW,\n      cxRatio,\n      cyRatio,\n      posX,\n      posY,\n      quadW,\n      quadH,\n      gX,\n      gY,\n    } = this.state;\n\n    let strength = 0.5;\n\n    let xSensitivity = 0.97;\n    let ySensitivity = 0.97;\n\n    let inc = (r: number) => {\n      return strength * (1 - r);\n    };\n\n    if (cxRatio <= xSensitivity) {\n      if (posX == \"right\" && gX - inc(cxRatio) >= quadW * -2) {\n        this.setState({\n          gX: gX - inc(cxRatio),\n        });\n      }\n\n      if (posX == \"left\" && gX + inc(cxRatio) <= 0) {\n        this.setState({\n          gX: gX + inc(cxRatio),\n        });\n      }\n    }\n\n    if (cyRatio <= ySensitivity) {\n      if (posY == \"top\" && gY + inc(cyRatio) <= 0) {\n        this.setState({\n          gY: gY + inc(cyRatio),\n        });\n      }\n\n      if (posY == \"bottom\" && gY - inc(cyRatio) >= quadH * -2) {\n        this.setState({\n          gY: gY - inc(cyRatio),\n        });\n      }\n    }\n\n    this.updateGridCoords;\n  };\n\n  setMouseCoords = (e: MouseEvent) => {\n    this.setState({\n      mouseX: e.clientX,\n      mouseY: e.clientY,\n    });\n\n    this.setMousePosition;\n  };\n\n  setMousePosition = () => {\n    let { mouseX, mouseY, winH, winW } = this.state;\n\n    let cY = winH / 2;\n    let cX = winW / 2;\n\n    let cxRatio = cX;\n    let cyRatio = 0;\n\n    let l = false;\n    let r = false;\n    let t = false;\n    let b = false;\n\n    let pos = \"initial\";\n\n    let x = \"initial\";\n    let y = \"initial\";\n\n    // Center ratio\n    if (mouseX <= cX) {\n      cxRatio = mouseX / cX;\n    }\n\n    if (mouseX > cX) {\n      cxRatio = (winW - mouseX) / cX;\n    }\n\n    if (mouseY <= cY) {\n      cyRatio = mouseY / cY;\n    }\n\n    if (mouseY > cY) {\n      cyRatio = (winH - mouseY) / cY;\n    }\n\n    // Positions\n    if (mouseX < cX) {\n      l = true;\n      r = false;\n\n      x = \"left\";\n    }\n\n    if (mouseX > cX) {\n      l = false;\n      r = true;\n\n      x = \"right\";\n    }\n\n    if (mouseX == cX) {\n      l = false;\n      r = false;\n\n      x = \"center\";\n    }\n\n    if (mouseY > cY) {\n      b = true;\n      t = false;\n\n      y = \"bottom\";\n    }\n\n    if (mouseY < cY) {\n      b = false;\n      t = true;\n\n      y = \"top\";\n    }\n\n    if (mouseY == cY) {\n      b = false;\n      t = false;\n\n      y = \"center\";\n    }\n\n    this.setState({\n      posY: y,\n      posX: x,\n\n      cxRatio: cxRatio,\n      cyRatio: cyRatio,\n    });\n\n    this.updateGridCoords;\n  };\n\n  render() {\n    let items = [1, 2, 3, 4, 5, 6];\n\n    return (\n      <>\n        <HoverGridStyle\n          style={{\n            [`--c` as any]: 3,\n          }}\n        >\n          <div\n            className=\"v\"\n            style={{\n              transform: `translate(${this.state.gX}px, ${this.state.gY}px)`,\n            }}\n            ref={this.view}\n          >\n            <div className=\"q --root\" ref={this.quadrant}>\n              {items.map((i, idx) => {\n                return (\n                  <div className={`i i--${i}`}>\n                    <div data-i={i} className=\"i-i\" />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </HoverGridStyle>\n\n        {/* <div className={`_dbg ${this.state.mouseX}`}>\n          mouseX: <strong>{this.state.mouseX} </strong>\n          <br />\n          mouseY: <strong>{this.state.mouseY} </strong>\n          <br />\n          winW: <strong>{this.state.winW} </strong>\n          <br />\n          winH: <strong>{this.state.winH} </strong>\n          <br />\n          posY: <strong>{this.state.posY}</strong>\n          <br />\n          posX: <strong>{this.state.posX}</strong>\n          <br />\n          cxRatio: <strong>{this.state.cxRatio}</strong>\n          <br />\n          cyRatio: <strong>{this.state.cyRatio}</strong>\n          <br />\n          gX: <strong>{this.state.gX}</strong>\n          <br />\n          gY: <strong>{this.state.gY}</strong>\n          <br />\n          quadW: <strong>{this.state.quadW}</strong>\n          <br />\n          quadH: <strong>{this.state.quadH}</strong>\n          <br />\n        </div> */}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}