{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/manzanita/Repositories/laxalt/web/components/CanvasCursor/CanvasCursor.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n// Core\nimport React, { createRef, PureComponent } from \"react\"; // Styles\n\nimport { CanvasCursorStyle, CanvasCursorClassName, CanvasCursorGlobalStyles } from \"./styles.scss\"; // Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Cursor\nexport class CanvasCursor extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"canvasRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseIsPressed: false,\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0\n      },\n      drawing: {\n        x: 0,\n        y: 0,\n        coordinates: []\n      },\n      helper: {\n        text: \"\",\n        lastOpacity: 0,\n        opacity: 0\n      },\n      vw: 0,\n      vh: 0\n    };\n    this.calculateSize = this.calculateSize.bind(this);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.startDrawing = this.startDrawing.bind(this);\n    this.drawLines = this.drawLines.bind(this);\n    this.stopDrawing = this.stopDrawing.bind(this);\n    this.storeLineCoordinates = this.storeLineCoordinates.bind(this);\n    this.clearCanvas = this.clearCanvas.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    // _____________________\n    // Setup our sizes\n    this.calculateSize();\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2\n      }\n    }); // _____________________\n    // Update initial coordinates\n\n    this.updateMouseCoords(); // _____________________\n    // Add event listeners\n\n    window.addEventListener(\"mousemove\", e => {\n      this.storeLineCoordinates(e);\n      this.setState({\n        mouseX: e.clientX,\n        mouseY: e.clientY\n      });\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n    window.addEventListener(\"mousedown\", this.startDrawing);\n    window.addEventListener(\"mouseup\", this.stopDrawing);\n    window.addEventListener(\"keydown\", this.clearCanvas);\n  } // ______________________________\n  // Calculate Sizes\n\n\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight\n    });\n\n    if (this.canvasRef.current) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  } // ______________________________\n  // Canvas Reference\n\n\n  // ______________________________\n  // Update Mouse Coordinates\n  updateMouseCoords() {\n    requestAnimationFrame(this.renderCanvas);\n  } // ______________________________\n  // Render to canvas\n\n\n  renderCanvas() {\n    if (this.canvasRef.current) {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n      this.setState({\n        mouseCursor: {\n          radius: 10,\n          lastX: this.lerp(this.state.mouseCursor.lastX, this.state.mouseX, 0.25),\n          lastY: this.lerp(this.state.mouseCursor.lastY, this.state.mouseY, 0.25)\n        }\n      });\n      ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n      ctx.beginPath();\n      ctx.arc(this.state.mouseCursor.lastX, this.state.mouseCursor.lastY, this.state.mouseCursor.radius, 0, Math.PI * 2, false);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill();\n      ctx.closePath(); // _____________________________\n      // Cursor Helpers\n\n      let ifNotOverNavigation = this.state.mouseY > 100 && this.state.mouseY < window.innerHeight - 100;\n\n      if (this.state.drawing.coordinates.length > 5 && this.state.drawing.coordinates.length < 25 && ifNotOverNavigation) {\n        this.setState({\n          helper: {\n            text: \"Press 'C' to clear drawing\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n            opacity: 1\n          }\n        });\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n      } else if (window.scrollY < 100 && ifNotOverNavigation) {\n        this.setState({\n          helper: {\n            text: \"Scroll down\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n            opacity: 1\n          }\n        });\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n      } else {\n        if (window.scrollY < 300 && ifNotOverNavigation) {\n          this.setState({\n            helper: {\n              text: \"Click and drag to draw anywhere\",\n              lastOpacity: this.lerp(this.state.helper.lastOpacity, this.state.helper.opacity, 0.15),\n              opacity: 1\n            }\n          });\n          ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n          ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n          ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n        } else {\n          this.setState({\n            helper: {\n              text: this.state.helper.text,\n              lastOpacity: this.lerp(this.state.helper.lastOpacity, this.state.helper.opacity, 0.15),\n              opacity: 0\n            }\n          });\n          ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n          ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n          ctx.fillText(this.state.helper.text, this.state.mouseCursor.lastX + 15, this.state.mouseCursor.lastY + -15);\n        }\n      } // ____________________________\n      // Check for drawing\n\n\n      this.drawLines(); // ____________________________\n      // Recursively animate\n\n      requestAnimationFrame(this.renderCanvas);\n    }\n  } // ______________________________\n  // LERP Helper Function\n\n\n  lerp(a, b, n) {\n    return (1 - n) * a + n * b;\n  } // ____________________________\n  // Drawing Functions\n\n\n  startDrawing(e) {\n    this.setState({\n      mouseIsPressed: true\n    }); // console.log(\"START DRAWING\", this.state.mouseIsPressed);\n  }\n\n  storeLineCoordinates(e) {\n    if (this.state.mouseIsPressed) {\n      let updatedCoordinates = this.state.drawing.coordinates;\n      let newCoordinates = {\n        // startX: this.state.mouseCursor.lastX,\n        // startY: this.state.mouseCursor.lastY,\n        startX: this.state.mouseX,\n        startY: this.state.mouseY,\n        endX: e.clientX,\n        endY: e.clientY\n      };\n      updatedCoordinates.push(newCoordinates);\n      this.setState({\n        drawing: _objectSpread(_objectSpread({}, this.state.drawing), {}, {\n          coordinates: updatedCoordinates\n        })\n      });\n    }\n  }\n\n  drawLines() {\n    let ctx = this.canvasRef.current.getContext(\"2d\");\n    this.state.drawing.coordinates.map(coord => {\n      ctx.beginPath(); // begin\n\n      ctx.lineWidth = 2;\n      ctx.lineCap = \"round\";\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.moveTo(coord.startX, coord.startY); // from\n\n      ctx.lineTo(coord.endX, coord.endY); // to\n\n      ctx.stroke(); // draw it!\n      // console.log(\"LINE DRAWN\", coord);\n    });\n  }\n\n  stopDrawing() {\n    this.setState({\n      mouseIsPressed: false\n    }); // console.log(\"STOP DRAWING\", this.state.mouseIsPressed);\n  }\n\n  clearCanvas(e) {\n    console.log(e);\n\n    if (e.key === \"c\" || e.key === \"C\") {\n      let previousDrawingState = this.state.drawing;\n      this.setState({\n        drawing: _objectSpread(_objectSpread({}, previousDrawingState), {}, {\n          coordinates: []\n        })\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CanvasCursorGlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CanvasCursorStyle, {\n        ref: this.canvasRef,\n        className: `${CanvasCursorClassName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/manzanita/Repositories/laxalt/web/components/CanvasCursor/CanvasCursor.tsx"],"names":["React","createRef","PureComponent","CanvasCursorStyle","CanvasCursorClassName","CanvasCursorGlobalStyles","CanvasCursor","constructor","props","state","mouseX","mouseY","mouseIsPressed","mouseCursor","radius","lastX","lastY","drawing","x","y","coordinates","helper","text","lastOpacity","opacity","vw","vh","calculateSize","bind","renderCanvas","startDrawing","drawLines","stopDrawing","storeLineCoordinates","clearCanvas","componentDidMount","init","setState","window","innerWidth","innerHeight","updateMouseCoords","addEventListener","e","clientX","clientY","canvasRef","current","width","height","requestAnimationFrame","ctx","getContext","lerp","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath","ifNotOverNavigation","length","font","fillText","scrollY","a","b","n","updatedCoordinates","newCoordinates","startX","startY","endX","endY","push","map","coord","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke","console","log","key","previousDrawingState","render"],"mappings":"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","sourcesContent":["/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n\n// Core\nimport React, { createRef, PureComponent } from \"react\";\n\n// Styles\nimport {\n  CanvasCursorStyle,\n  CanvasCursorClassName,\n  CanvasCursorGlobalStyles,\n} from \"./styles.scss\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport type LXLT_CanvasCursor = {};\n\nexport type LXLT_CanvasDrawing_Coords = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n};\n\nexport type LXLT_CanvasCursor_State = {\n  mouseX: number;\n  mouseY: number;\n  mouseIsPressed: boolean;\n\n  mouseCursor: {\n    radius: number;\n    lastX: number;\n    lastY: number;\n  };\n\n  helper: {\n    text: string;\n    lastOpacity: number;\n    opacity: number;\n  };\n\n  drawing: {\n    x: number;\n    y: number;\n\n    coordinates: LXLT_CanvasDrawing_Coords[];\n  };\n\n  vw: number;\n  vh: number;\n};\n\n// Cursor\nexport class CanvasCursor extends PureComponent<\n  LXLT_CanvasCursor,\n  LXLT_CanvasCursor_State\n> {\n\n  constructor(props: LXLT_CanvasCursor) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseIsPressed: false,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0,\n      },\n\n      drawing: {\n        x: 0,\n        y: 0,\n\n        coordinates: [],\n      },\n\n      helper: {\n        text: \"\",\n        lastOpacity: 0,\n        opacity: 0,\n      },\n\n      vw: 0,\n      vh: 0,\n    };\n\n    this.calculateSize = this.calculateSize.bind(this);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.startDrawing = this.startDrawing.bind(this);\n    this.drawLines = this.drawLines.bind(this);\n    this.stopDrawing = this.stopDrawing.bind(this);\n    this.storeLineCoordinates = this.storeLineCoordinates.bind(this);\n    this.clearCanvas = this.clearCanvas.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    // _____________________\n    // Setup our sizes\n    this.calculateSize();\n\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2,\n      },\n    });\n\n    // _____________________\n    // Update initial coordinates\n    this.updateMouseCoords();\n\n    // _____________________\n    // Add event listeners\n    window.addEventListener(\"mousemove\", (e) => {\n      this.storeLineCoordinates(e);\n\n      this.setState({\n        mouseX: e.clientX,\n        mouseY: e.clientY,\n      });\n    });\n    window.addEventListener(\"resize\", this.calculateSize, false);\n    window.addEventListener(\"mousedown\", this.startDrawing);\n    window.addEventListener(\"mouseup\", this.stopDrawing);\n    window.addEventListener(\"keydown\", this.clearCanvas);\n  }\n\n  // ______________________________\n  // Calculate Sizes\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight,\n    });\n\n    if (this.canvasRef.current) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  // ______________________________\n  // Canvas Reference\n  canvasRef: React.RefObject<HTMLCanvasElement> = createRef<HTMLCanvasElement>();\n\n  // ______________________________\n  // Update Mouse Coordinates\n  updateMouseCoords() {\n    requestAnimationFrame(this.renderCanvas);\n  }\n\n  // ______________________________\n  // Render to canvas\n  renderCanvas() {\n    if (this.canvasRef.current) {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n\n      this.setState({\n        mouseCursor: {\n          radius: 10,\n          lastX: this.lerp(\n            this.state.mouseCursor.lastX,\n            this.state.mouseX,\n            0.25\n          ),\n          lastY: this.lerp(\n            this.state.mouseCursor.lastY,\n            this.state.mouseY,\n            0.25\n          ),\n        },\n      });\n\n      ctx.clearRect(0, 0, this.state.vw, this.state.vh);\n      ctx.beginPath();\n      ctx.arc(\n        this.state.mouseCursor.lastX,\n        this.state.mouseCursor.lastY,\n        this.state.mouseCursor.radius,\n        0,\n        Math.PI * 2,\n        false\n      );\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill();\n      ctx.closePath();\n\n      // _____________________________\n      // Cursor Helpers\n      let ifNotOverNavigation =\n        this.state.mouseY > 100 && this.state.mouseY < window.innerHeight - 100;\n\n      if (this.state.drawing.coordinates.length > 5 && this.state.drawing.coordinates.length < 25 && ifNotOverNavigation) {\n        this.setState({\n          helper: {\n            text: \"Press 'C' to clear drawing\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n            opacity: 1,\n          },\n        });\n\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(\n          this.state.helper.text,\n          this.state.mouseCursor.lastX + 15,\n          this.state.mouseCursor.lastY + -15\n        );\n      } else if (window.scrollY < 100 && ifNotOverNavigation) {\n        this.setState({\n          helper: {\n            text: \"Scroll down\",\n            lastOpacity: this.lerp(this.state.helper.lastOpacity, 1, 0.15),\n            opacity: 1,\n          },\n        });\n\n        ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n        ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n        ctx.fillText(\n          this.state.helper.text,\n          this.state.mouseCursor.lastX + 15,\n          this.state.mouseCursor.lastY + -15\n        );\n      } else {\n        if (window.scrollY < 300 && ifNotOverNavigation) {\n          this.setState({\n            helper: {\n              text: \"Click and drag to draw anywhere\",\n              lastOpacity: this.lerp(\n                this.state.helper.lastOpacity,\n                this.state.helper.opacity,\n                0.15\n              ),\n              opacity: 1,\n            },\n          });\n\n          ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n          ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n          ctx.fillText(\n            this.state.helper.text,\n            this.state.mouseCursor.lastX + 15,\n            this.state.mouseCursor.lastY + -15\n          );\n        } else {\n          this.setState({\n            helper: {\n              text: this.state.helper.text,\n              lastOpacity: this.lerp(\n                this.state.helper.lastOpacity,\n                this.state.helper.opacity,\n                0.15\n              ),\n              opacity: 0,\n            },\n          });\n\n          ctx.font = \"18px Neue Haas Grotesk Text Pro\";\n          ctx.fillStyle = `rgba(255,255,255, ${this.state.helper.lastOpacity})`;\n          ctx.fillText(\n            this.state.helper.text,\n            this.state.mouseCursor.lastX + 15,\n            this.state.mouseCursor.lastY + -15\n          );\n        }\n      }\n\n      // ____________________________\n      // Check for drawing\n      this.drawLines();\n\n      // ____________________________\n      // Recursively animate\n\n      requestAnimationFrame(this.renderCanvas);\n    }\n  }\n\n  // ______________________________\n  // LERP Helper Function\n  lerp(a: number, b: number, n: number) {\n    return (1 - n) * a + n * b;\n  }\n\n  // ____________________________\n  // Drawing Functions\n  startDrawing(e: MouseEvent) {\n    this.setState({\n      mouseIsPressed: true,\n    });\n\n    // console.log(\"START DRAWING\", this.state.mouseIsPressed);\n  }\n\n  storeLineCoordinates(e: MouseEvent) {\n    if (this.state.mouseIsPressed) {\n      let updatedCoordinates = this.state.drawing.coordinates;\n      let newCoordinates: LXLT_CanvasDrawing_Coords = {\n        // startX: this.state.mouseCursor.lastX,\n        // startY: this.state.mouseCursor.lastY,\n        startX: this.state.mouseX,\n        startY: this.state.mouseY,\n        endX: e.clientX,\n        endY: e.clientY,\n      };\n\n      updatedCoordinates.push(newCoordinates);\n\n      this.setState({\n        drawing: {\n          ...this.state.drawing,\n          coordinates: updatedCoordinates,\n        },\n      });\n    }\n  }\n\n  drawLines() {\n    let ctx = this.canvasRef.current.getContext(\"2d\");\n\n    this.state.drawing.coordinates.map((coord: LXLT_CanvasDrawing_Coords) => {\n      ctx.beginPath(); // begin\n      ctx.lineWidth = 2;\n      ctx.lineCap = \"round\";\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.moveTo(coord.startX, coord.startY); // from\n      ctx.lineTo(coord.endX, coord.endY); // to\n      ctx.stroke(); // draw it!\n\n      // console.log(\"LINE DRAWN\", coord);\n    });\n  }\n\n  stopDrawing() {\n    this.setState({\n      mouseIsPressed: false,\n    });\n\n    // console.log(\"STOP DRAWING\", this.state.mouseIsPressed);\n  }\n\n  clearCanvas(e: KeyboardEvent) {\n    console.log(e);\n\n    if (e.key === \"c\" || e.key === \"C\") {\n      let previousDrawingState = this.state.drawing;\n\n      this.setState({\n        drawing: {\n          ...previousDrawingState,\n          coordinates: [],\n        },\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {/* <UniversallyHideCursor /> */}\n        <CanvasCursorGlobalStyles />\n        <CanvasCursorStyle\n          ref={this.canvasRef}\n          className={`${CanvasCursorClassName}`}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}