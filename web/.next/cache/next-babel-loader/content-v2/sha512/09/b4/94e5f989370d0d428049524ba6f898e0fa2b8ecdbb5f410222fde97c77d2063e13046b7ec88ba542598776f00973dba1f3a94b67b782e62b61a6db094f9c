{"ast":null,"code":"import _defineProperty from \"/Users/manzanita/Repositories/laxalt/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manzanita/Repositories/laxalt/web/pages/_app.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// /pages/_app_.js\nimport React, { useEffect } from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { ColorContext, ColorContext_Dark_Defaults, useColorContext } from \"../constants/styles/Color\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\nvar MyApp = function MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var colorTheme = useColorContext();\n\n  var _useColorContext = useColorContext(),\n      setTheme = _useColorContext.setTheme;\n\n  useEffect(function () {\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setTheme(ColorContext_Dark_Defaults);\n    }\n  }, []); // Render our App\n\n  return /*#__PURE__*/_jsxDEV(ColorContext.Provider, {\n    value: colorTheme,\n    children: /*#__PURE__*/_jsxDEV(Layout, _objectSpread(_objectSpread({}, pageProps), {}, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MyApp, \"bszRwMXECEFprmUDp4NExIteltk=\", false, function () {\n  return [useColorContext, useColorContext];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/manzanita/Repositories/laxalt/web/pages/_app.tsx"],"names":["React","useEffect","Layout","ColorContext","ColorContext_Dark_Defaults","useColorContext","MyApp","Component","pageProps","colorTheme","setTheme","window","matchMedia","matches"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,YAAT,EAAuBC,0BAAvB,EAAmDC,eAAnD,QAA0E,2BAA1E,C,CAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmD;AAAA;;AAAA,MAAhDC,SAAgD,QAAhDA,SAAgD;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAC/D,MAAMC,UAAU,GAAGJ,eAAe,EAAlC;;AAD+D,yBAE1CA,eAAe,EAF2B;AAAA,MAEvDK,QAFuD,oBAEvDA,QAFuD;;AAI/DT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAtD,EAA+D;AAC7DH,MAAAA,QAAQ,CAACN,0BAAD,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT,CAJ+D,CAU/D;;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEK,UAA9B;AAAA,2BACE,QAAC,MAAD,kCAAYD,SAAZ;AAAA,6BACE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAlBD;;GAAMF,K;UACeD,e,EACEA,e;;;KAFjBC,K;AAoBN,eAAeA,KAAf","sourcesContent":["// /pages/_app_.js\nimport React, { useEffect } from \"react\";\nimport { AppProps } from \"next/app\";\nimport { Layout } from \"../components/Layout\";\nimport { ColorContext, ColorContext_Dark_Defaults, useColorContext } from \"../constants/styles/Color\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LMNTS_CustomAppData = AppProps & {};\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\n\nconst MyApp = ({ Component, pageProps }: LMNTS_CustomAppData) => {\n  const colorTheme = useColorContext();\n  const { setTheme } = useColorContext();\n\n  useEffect(() => {\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setTheme(ColorContext_Dark_Defaults);\n    }\n  }, []);\n\n  // Render our App\n  return (\n    <ColorContext.Provider value={colorTheme}>\n      <Layout {...pageProps}>\n        <Component {...pageProps} />\n      </Layout>\n    </ColorContext.Provider>\n  );\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}