{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/manzanita/Repositories/laxalt/web/components/MellowFrameHeader/MellowFrameHeader.tsx\";\n// Core\nimport React, { Component } from \"react\"; // Types\n\n// Settings\nimport { Settings, SiteNavigation } from \"../../constants/site/Settings\"; // Components\n\nimport Link from \"next/link\";\nimport { ThemePicker } from \"../ThemePicker\";\nimport { InteractiveOverlayNavigation } from \"../InteractiveOverlayNavigation\"; // Styles\n\nimport { InteractiveFillBarsClassName, InteractiveFillBarsStyle, MellowFrameHeaderClassName, MellowFrameHeaderStyle, InteractiveLogotypeClassName, InteractiveLogotypeStyle } from \"./styles.scss\";\nimport { InteractiveOverlayNavigationClassName } from \"../InteractiveOverlayNavigation/styles.scss\";\nimport { Base } from \"../../constants/styles/Base\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// _________________________________________________________________________________________\n\n/**\n *\n * @name MellowFrameHeader\n *\n */\nexport class MellowFrameHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isInactive: true,\n      // true\n      isFillBarsExpanded: false,\n      isOverlayVisible: false,\n      // false\n      isScrolled: false,\n      isSidebarVisible: false,\n      isLogotypeExpanded: false,\n      // false\n      isTablet: false\n    };\n    this.listenToScroll = this.listenToScroll.bind(this);\n    this.toggleLogotype = this.toggleLogotype.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.toggleFillBars = this.toggleFillBars.bind(this);\n    this.toggleOverlayAndFillBarsExpansion = this.toggleOverlayAndFillBarsExpansion.bind(this);\n    this.toggleOverlayAndLogotypeExpansion = this.toggleOverlayAndLogotypeExpansion.bind(this);\n  }\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n\n\n  componentDidMount() {\n    if (\"undefined\") {\n      window.addEventListener(\"scroll\", this.listenToScroll);\n      console.log(\"this.props.router.pathname:\", this.props.router.pathname);\n      console.log(\"this.props.router.pathname.includes('/and/'):\", this.props.router.pathname.includes(\"/and/\")); // if (this.props.router.pathname.includes(\"/and/\")) {\n      //   this.setState({\n      //     isInactive: true,\n      //   });\n      // } else {\n      //   this.setState({\n      //     isInactive: false,\n      //   });\n      // }\n\n      this.setState({\n        isInactive: false,\n        isTablet: window.innerWidth > Base.Media.Width.Md ? false : true\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (\"undefined\") {\n      window.removeEventListener(\"scroll\", this.listenToScroll);\n    }\n  }\n\n  toggleLogotype() {\n    if (this.state.isLogotypeExpanded) {\n      this.setState({\n        isLogotypeExpanded: false\n      });\n    } else {\n      this.setState({\n        isLogotypeExpanded: true\n      });\n    }\n  }\n\n  toggleOverlay() {\n    if (this.state.isOverlayVisible) {\n      this.setState({\n        isOverlayVisible: false\n      });\n      return;\n    } else {\n      this.setState({\n        isOverlayVisible: true\n      });\n      return;\n    }\n  }\n\n  toggleFillBars() {\n    if (this.state.isFillBarsExpanded) {\n      this.setState({\n        isFillBarsExpanded: false\n      });\n      return;\n    } else {\n      this.setState({\n        isFillBarsExpanded: true\n      });\n      return;\n    }\n  }\n\n  toggleOverlayAndLogotypeExpansion() {\n    if (this.state.isFillBarsExpanded) {\n      this.toggleOverlay();\n      this.toggleFillBars();\n    } else {\n      this.toggleLogotype();\n      this.toggleOverlay();\n    }\n\n    return;\n  }\n\n  toggleOverlayAndFillBarsExpansion() {\n    this.toggleFillBars();\n    this.toggleOverlay();\n    return;\n  }\n\n  listenToScroll() {\n    if (\"undefined\" && document) {\n      const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n\n      if (scrollPosition > 10) {\n        this.setState({\n          isInactive: true,\n          isScrolled: true\n        });\n      } else {\n        this.setState({\n          isInactive: false,\n          isScrolled: false\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MellowFrameHeaderDisplay, {\n      router: this.props.router,\n      isTablet: this.state.isTablet,\n      isInactive: this.state.isInactive,\n      isScrolled: this.state.isScrolled,\n      isFillBarsExpanded: this.state.isFillBarsExpanded,\n      isOverlayVisible: this.state.isOverlayVisible,\n      isSidebarVisible: this.state.isSidebarVisible,\n      isLogotypeExpanded: this.state.isLogotypeExpanded,\n      toggleOverlayAndFillBarsExpansion: this.toggleOverlayAndFillBarsExpansion,\n      toggleOverlayAndLogotypeExpansion: this.toggleOverlayAndLogotypeExpansion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/**\n *\n * @name MellowFrameHeaderDisplay\n *\n */\n\nconst MellowFrameHeaderDisplay = ({\n  isInactive,\n  isFillBarsExpanded,\n  isLogotypeExpanded,\n  isOverlayVisible,\n  isScrolled,\n  isTablet,\n  toggleOverlayAndFillBarsExpansion,\n  toggleOverlayAndLogotypeExpansion,\n  router\n}) => {\n  // console.log(router);\n  let isDynamicallyInactive = router.pathname.includes(\"/and/\") ? true : isInactive;\n  let currentRouteClass = router.pathname == \"/\" ? \"route__home\" : \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MellowFrameHeaderStyle, {\n      className: `${MellowFrameHeaderClassName} ${MellowFrameHeaderClassName}--${isDynamicallyInactive || isOverlayVisible ? `inactive` : `active`} ${MellowFrameHeaderClassName}--${isFillBarsExpanded || isOverlayVisible ? `fill-bars-is-expanded` : `fill-bars-is-not-expanded`} ${MellowFrameHeaderClassName}--${isScrolled ? `is-scrolled` : `is-not-scrolled`} ${currentRouteClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${MellowFrameHeaderClassName}__inner`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${MellowFrameHeaderClassName}__frame`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${MellowFrameHeaderClassName}__frame__nav ${MellowFrameHeaderClassName}__frame__nav--top`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${MellowFrameHeaderClassName}__frame__nav__inner`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--left`,\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${MellowFrameHeaderClassName}__frame__nav__linklist`,\n                  children: SiteNavigation.OverlayNav.NavItems.map((item, idx) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item`,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: item.href,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__el`,\n                          children: item.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 310,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 29\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--right`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--brandmark`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `${MellowFrameHeaderClassName}__frame__nav__brandmark`,\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      href: \"/\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__el ${MellowFrameHeaderClassName}__frame__nav__brandmark__label`,\n                        children: \"Studio Laxalt\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--misc ${MellowFrameHeaderClassName}__frame__nav__misc-wrapper`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item ${MellowFrameHeaderClassName}__frame__nav__misc-wrapper__el`,\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      href: Settings.miscPage,\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__el`,\n                        children: \"Misc\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--mobile-label ${MellowFrameHeaderClassName}__frame__nav__mobile-label`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item ${MellowFrameHeaderClassName}__frame__nav__mobile-label__el`,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__el`,\n                      onClick: () => toggleOverlayAndLogotypeExpansion(),\n                      children: router.pathname === \"/\" ? \"MENU\" : router.pathname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${MellowFrameHeaderClassName}__frame__nav ${MellowFrameHeaderClassName}__frame__nav--bottom`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${MellowFrameHeaderClassName}__frame__nav__inner`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--time ${MellowFrameHeaderClassName}__frame__nav__col--left`,\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${MellowFrameHeaderClassName}__frame__nav__linklist`,\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item`,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__time`,\n                      children: \"NYC / 04:21:21\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item`,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__time`,\n                      children: \"S\\xE3o Paulo / 04:21:21\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item`,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__time`,\n                      children: \"San Francisco / 04:21:21\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--contact ${MellowFrameHeaderClassName}__frame__nav__col--right`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--theme-picker`,\n                  children: /*#__PURE__*/_jsxDEV(ThemePicker, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--contact-btn`,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: \"mailto: peter@laxa.lt\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: `${MellowFrameHeaderClassName}__frame__nav__linklist__item__el ${MellowFrameHeaderClassName}__frame__nav__linklist__item__el--contact-btn`,\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), isOverlayVisible ? /*#__PURE__*/_jsxDEV(InteractiveOverlayNavigation, {\n      addClass: `${InteractiveOverlayNavigationClassName}--${isOverlayVisible ? `is-visible` : `is-hidden`}`,\n      toggleOverlayAndLogotypeExpansion: toggleOverlayAndLogotypeExpansion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(InteractiveLogotypeStyle, {\n      className: `${InteractiveLogotypeClassName} ${InteractiveLogotypeClassName}--${isDynamicallyInactive ? `inactive` : `active`} ${InteractiveLogotypeClassName}--${isLogotypeExpanded ? `is-expanded` : `is-not-expanded`} ${InteractiveLogotypeClassName}--${isFillBarsExpanded ? `fill-bars-is-expanded` : `fill-bars-is-not-expanded`}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${InteractiveLogotypeClassName}__inner`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${InteractiveLogotypeClassName}__el`,\n          onClick: () => toggleOverlayAndLogotypeExpansion(),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: `${InteractiveLogotypeClassName}__el__circle`,\n            children: /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"50%\",\n              cy: \"50%\",\n              r: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${InteractiveLogotypeClassName}__el__icon`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${InteractiveLogotypeClassName}__el__icon__diagonal ${InteractiveLogotypeClassName}__el__icon__diagonal--down`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${InteractiveLogotypeClassName}__el__icon__diagonal ${InteractiveLogotypeClassName}__el__icon__diagonal--up`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InteractiveFillBarsStyle, {\n      className: `${InteractiveFillBarsClassName} ${InteractiveFillBarsClassName}--${isDynamicallyInactive ? `inactive` : `active`} ${InteractiveFillBarsClassName}--${isFillBarsExpanded ? `is-expanded` : `is-not-expanded`}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--top`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--right`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--bottom`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--left`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/manzanita/Repositories/laxalt/web/components/MellowFrameHeader/MellowFrameHeader.tsx"],"names":["React","Component","Settings","SiteNavigation","Link","ThemePicker","InteractiveOverlayNavigation","InteractiveFillBarsClassName","InteractiveFillBarsStyle","MellowFrameHeaderClassName","MellowFrameHeaderStyle","InteractiveLogotypeClassName","InteractiveLogotypeStyle","InteractiveOverlayNavigationClassName","Base","MellowFrameHeader","constructor","props","state","isInactive","isFillBarsExpanded","isOverlayVisible","isScrolled","isSidebarVisible","isLogotypeExpanded","isTablet","listenToScroll","bind","toggleLogotype","toggleOverlay","toggleFillBars","toggleOverlayAndFillBarsExpansion","toggleOverlayAndLogotypeExpansion","componentDidMount","window","addEventListener","console","log","router","pathname","includes","setState","innerWidth","Media","Width","Md","componentWillUnmount","removeEventListener","document","scrollPosition","body","scrollTop","documentElement","render","MellowFrameHeaderDisplay","isDynamicallyInactive","currentRouteClass","OverlayNav","NavItems","map","item","idx","href","label","miscPage"],"mappings":"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","sourcesContent":["// Core\nimport React, { Component } from \"react\";\n\n// Types\nimport { NextRouter } from \"next/router\";\n\n// Settings\nimport {\n  LXLT_LinkItemWithCaption,\n  Settings,\n  SiteNavigation,\n  __DEBUG__,\n} from \"../../constants/site/Settings\";\n\n// Components\nimport Link from \"next/link\";\nimport { ThemePicker } from \"../ThemePicker\";\nimport { InteractiveOverlayNavigation } from \"../InteractiveOverlayNavigation\";\n\n// Styles\nimport {\n  InteractiveFillBarsClassName,\n  InteractiveFillBarsStyle,\n  MellowFrameHeaderClassName,\n  MellowFrameHeaderStyle,\n  InteractiveLogotypeClassName,\n  InteractiveLogotypeStyle,\n} from \"./styles.scss\";\nimport { InteractiveOverlayNavigationClassName } from \"../InteractiveOverlayNavigation/styles.scss\";\nimport { Base } from \"../../constants/styles/Base\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_MellowFrameHeader_State = {\n  isInactive?: boolean;\n  isScrolled?: boolean;\n  isFillBarsExpanded?: boolean;\n  isOverlayVisible?: boolean;\n  isSidebarVisible?: boolean;\n  isLogotypeExpanded?: boolean;\n  isTablet: boolean;\n\n  router?: NextRouter;\n};\n\ntype LXLT_MellowFrameHeader = {\n  router?: NextRouter;\n};\n\ntype LXLT_MellowFrameHeaderDisplay = LXLT_MellowFrameHeader_State & {\n  toggleOverlayAndFillBarsExpansion?: () => void;\n  toggleOverlayAndLogotypeExpansion?: () => void;\n};\n\n// Begin Component\n// _________________________________________________________________________________________\n\n/**\n *\n * @name MellowFrameHeader\n *\n */\nexport class MellowFrameHeader extends Component<\n  LXLT_MellowFrameHeader,\n  LXLT_MellowFrameHeader_State\n> {\n  constructor(props: LXLT_MellowFrameHeader) {\n    super(props);\n\n    this.state = {\n      isInactive: true, // true\n      isFillBarsExpanded: false, \n      isOverlayVisible: false, // false\n      isScrolled: false,\n      isSidebarVisible: false,\n      isLogotypeExpanded: false, // false\n\n      isTablet: false,\n    };\n\n    this.listenToScroll = this.listenToScroll.bind(this);\n\n    this.toggleLogotype = this.toggleLogotype.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.toggleFillBars = this.toggleFillBars.bind(this);\n\n    this.toggleOverlayAndFillBarsExpansion = this.toggleOverlayAndFillBarsExpansion.bind(\n      this\n    );\n    this.toggleOverlayAndLogotypeExpansion = this.toggleOverlayAndLogotypeExpansion.bind(\n      this\n    );\n  }\n\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n  componentDidMount() {\n    if (typeof window) {\n      window.addEventListener(\"scroll\", this.listenToScroll);\n\n      console.log(\"this.props.router.pathname:\", this.props.router.pathname);\n      console.log(\n        \"this.props.router.pathname.includes('/and/'):\",\n        this.props.router.pathname.includes(\"/and/\")\n      );\n\n      // if (this.props.router.pathname.includes(\"/and/\")) {\n      //   this.setState({\n      //     isInactive: true,\n      //   });\n      // } else {\n      //   this.setState({\n      //     isInactive: false,\n      //   });\n      // }\n\n      this.setState({\n        isInactive: false,\n        isTablet: window.innerWidth > Base.Media.Width.Md ? false : true\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (typeof window) {\n      window.removeEventListener(\"scroll\", this.listenToScroll);\n    }\n  }\n\n  toggleLogotype() {\n    if (this.state.isLogotypeExpanded) {\n      this.setState({\n        isLogotypeExpanded: false,\n      });\n    } else {\n      this.setState({\n        isLogotypeExpanded: true,\n      });\n    }\n  }\n\n  toggleOverlay() {\n    if (this.state.isOverlayVisible) {\n      this.setState({\n        isOverlayVisible: false,\n      });\n\n      return;\n    } else {\n      this.setState({\n        isOverlayVisible: true,\n      });\n\n      return;\n    }\n  }\n\n  toggleFillBars() {\n    if (this.state.isFillBarsExpanded) {\n      this.setState({\n        isFillBarsExpanded: false,\n      });\n\n      return;\n    } else {\n      this.setState({\n        isFillBarsExpanded: true,\n      });\n\n      return;\n    }\n  }\n\n  toggleOverlayAndLogotypeExpansion() {\n    if (this.state.isFillBarsExpanded) {\n      this.toggleOverlay();\n      this.toggleFillBars();\n    } else {\n      this.toggleLogotype();\n      this.toggleOverlay();\n    }\n\n    return;\n  }\n\n  toggleOverlayAndFillBarsExpansion() {\n    this.toggleFillBars();\n    this.toggleOverlay();\n\n    return;\n  }\n\n  listenToScroll() {\n    if (typeof window && document) {\n      const scrollPosition =\n        document.body.scrollTop || document.documentElement.scrollTop;\n\n      if (scrollPosition > 10) {\n        this.setState({\n          isInactive: true,\n          isScrolled: true\n        });\n      } else {\n        this.setState({\n          isInactive: false,\n          isScrolled: false\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <MellowFrameHeaderDisplay\n        router={this.props.router}\n        isTablet={this.state.isTablet}\n        isInactive={this.state.isInactive}\n        isScrolled={this.state.isScrolled}\n        isFillBarsExpanded={this.state.isFillBarsExpanded}\n        isOverlayVisible={this.state.isOverlayVisible}\n        isSidebarVisible={this.state.isSidebarVisible}\n        isLogotypeExpanded={this.state.isLogotypeExpanded}\n        toggleOverlayAndFillBarsExpansion={\n          this.toggleOverlayAndFillBarsExpansion\n        }\n        toggleOverlayAndLogotypeExpansion={\n          this.toggleOverlayAndLogotypeExpansion\n        }\n      />\n    );\n  }\n}\n\n/**\n *\n * @name MellowFrameHeaderDisplay\n *\n */\nconst MellowFrameHeaderDisplay: React.FunctionComponent<LXLT_MellowFrameHeaderDisplay> = ({\n  isInactive,\n  isFillBarsExpanded,\n  isLogotypeExpanded,\n  isOverlayVisible,\n  isScrolled,\n  isTablet,\n\n  toggleOverlayAndFillBarsExpansion,\n  toggleOverlayAndLogotypeExpansion,\n\n  router,\n}) => {\n  // console.log(router);\n\n  let isDynamicallyInactive = router.pathname.includes(\"/and/\")\n    ? true\n    : isInactive;\n  let currentRouteClass = router.pathname == \"/\" ? \"route__home\" : \"\";\n\n  return (\n    <>\n      {/* ______________________________________________ */}\n      {/* Frame itself */}\n      <MellowFrameHeaderStyle\n        className={`${MellowFrameHeaderClassName} ${MellowFrameHeaderClassName}--${\n          isDynamicallyInactive || isOverlayVisible ? `inactive` : `active`\n        } ${MellowFrameHeaderClassName}--${\n          isFillBarsExpanded || isOverlayVisible\n            ? `fill-bars-is-expanded`\n            : `fill-bars-is-not-expanded`\n        } ${MellowFrameHeaderClassName}--${\n          isScrolled\n            ? `is-scrolled`\n            : `is-not-scrolled`\n        } ${currentRouteClass}`}\n      >\n        {/* ______________________________________________ */}\n        {/* Inner Grid */}\n        <div className={`${MellowFrameHeaderClassName}__inner`}>\n          {/* ______________________________________________ */}\n          {/* Frame */}\n          <div className={`${MellowFrameHeaderClassName}__frame`}>\n            {/* ____________________________________________________________________________________________ */}\n            {/* Top Nav*/}\n            <div\n              className={`${MellowFrameHeaderClassName}__frame__nav ${MellowFrameHeaderClassName}__frame__nav--top`}\n            >\n              <div\n                className={`${MellowFrameHeaderClassName}__frame__nav__inner`}\n              >\n                {/* ______________________________________________ */}\n                {/* Left Content */}\n                <div\n                  className={`${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--left`}\n                >\n                  <ul\n                    className={`${MellowFrameHeaderClassName}__frame__nav__linklist`}\n                  >\n                    {SiteNavigation.OverlayNav.NavItems.map(\n                      (item: LXLT_LinkItemWithCaption, idx: number) => {\n                        return (\n                          <li\n                            key={idx}\n                            className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item`}\n                          >\n                            <Link href={item.href}>\n                              <a\n                                className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__el`}\n                              >\n                                {item.label}\n                              </a>\n                            </Link>\n                          </li>\n                        );\n                      }\n                    )}\n                  </ul>\n                </div>\n\n                {/* ______________________________________________ */}\n                {/* Right Content */}\n                <div\n                  className={`${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--right`}\n                >\n                  {/* ______________________________________________ */}\n                  {/* Right Inner Column (Brandmark) */}\n                  <div\n                    className={`${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--brandmark`}\n                  >\n                    <div\n                      className={`${MellowFrameHeaderClassName}__frame__nav__brandmark`}\n                    >\n                      <Link href=\"/\">\n                        <a\n                          className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__el ${MellowFrameHeaderClassName}__frame__nav__brandmark__label`}\n                        >\n                          Studio Laxalt\n                        </a>\n                      </Link>\n                    </div>\n                  </div>\n\n                  {/* ______________________________________________ */}\n                  {/* Right Inner Column (Misc) */}\n                  <div\n                    className={`${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--misc ${MellowFrameHeaderClassName}__frame__nav__misc-wrapper`}\n                  >\n                    <div\n                      className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item ${MellowFrameHeaderClassName}__frame__nav__misc-wrapper__el`}\n                    >\n                      <Link href={Settings.miscPage}>\n                        <a\n                          className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__el`}\n                        >\n                          Misc\n                        </a>\n                      </Link>\n                    </div>\n                  </div>\n\n                  {/* ______________________________________________ */}\n                  {/* Right Inner Column (Mobile Nav) */}\n                  <div\n                    className={`${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--mobile-label ${MellowFrameHeaderClassName}__frame__nav__mobile-label`}\n                  >\n                    <div\n                      className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item ${MellowFrameHeaderClassName}__frame__nav__mobile-label__el`}\n                    >\n                      <span\n                        className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__el`}\n                        onClick={() => toggleOverlayAndLogotypeExpansion()}\n                      >\n                        {router.pathname === \"/\" ? \"MENU\" : router.pathname}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* ____________________________________________________________________________________________ */}\n            {/* Bottom Nav*/}\n            <div\n              className={`${MellowFrameHeaderClassName}__frame__nav ${MellowFrameHeaderClassName}__frame__nav--bottom`}\n            >\n              <div\n                className={`${MellowFrameHeaderClassName}__frame__nav__inner`}\n              >\n                {/* ______________________________________________ */}\n                {/* Left Content */}\n                <div\n                  className={`${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--time ${MellowFrameHeaderClassName}__frame__nav__col--left`}\n                >\n                  <ul\n                    className={`${MellowFrameHeaderClassName}__frame__nav__linklist`}\n                  >\n                    <li\n                      className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item`}\n                    >\n                      <span\n                        className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__time`}\n                      >\n                        NYC / 04:21:21\n                      </span>\n                    </li>\n\n                    <li\n                      className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item`}\n                    >\n                      <span\n                        className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__time`}\n                      >\n                        São Paulo / 04:21:21\n                      </span>\n                    </li>\n\n                    <li\n                      className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item`}\n                    >\n                      <span\n                        className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__time`}\n                      >\n                        San Francisco / 04:21:21\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n\n                {/* ______________________________________________ */}\n                {/* Right Content */}\n                <div\n                  className={`${MellowFrameHeaderClassName}__frame__nav__col ${MellowFrameHeaderClassName}__frame__nav__col--contact ${MellowFrameHeaderClassName}__frame__nav__col--right`}\n                >\n                  <div\n                    className={`${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--theme-picker`}\n                  >\n                    <ThemePicker />\n                  </div>\n\n                  <div\n                    className={`${MellowFrameHeaderClassName}__frame__nav__inner-col ${MellowFrameHeaderClassName}__frame__nav__inner-col--contact-btn`}\n                  >\n                    {/* <Link href={Settings.contactPage}> */}\n                    <Link href=\"mailto: peter@laxa.lt\">\n                      <a\n                        className={`${MellowFrameHeaderClassName}__frame__nav__linklist__item__el ${MellowFrameHeaderClassName}__frame__nav__linklist__item__el--contact-btn`}\n                      >\n                        Email\n                      </a>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </MellowFrameHeaderStyle>\n\n      {/* ______________________________________________ */}\n      {/* Overlay Content */}\n      {isOverlayVisible ? (\n        <InteractiveOverlayNavigation\n          addClass={`${InteractiveOverlayNavigationClassName}--${\n            isOverlayVisible ? `is-visible` : `is-hidden`\n          }`}\n          toggleOverlayAndLogotypeExpansion={toggleOverlayAndLogotypeExpansion}\n        />\n      ) : null}\n\n      {/* ______________________________________________ */}\n      {/* Logotype / Top */}\n      <InteractiveLogotypeStyle\n        className={`${InteractiveLogotypeClassName} ${InteractiveLogotypeClassName}--${\n          isDynamicallyInactive ? `inactive` : `active`\n        } ${InteractiveLogotypeClassName}--${\n          isLogotypeExpanded ? `is-expanded` : `is-not-expanded`\n        } ${InteractiveLogotypeClassName}--${\n          isFillBarsExpanded\n            ? `fill-bars-is-expanded`\n            : `fill-bars-is-not-expanded`\n        }`}\n      >\n        <span className={`${InteractiveLogotypeClassName}__inner`}>\n          <span\n            className={`${InteractiveLogotypeClassName}__el`}\n            onClick={() => toggleOverlayAndLogotypeExpansion()}\n          >\n            <svg className={`${InteractiveLogotypeClassName}__el__circle`}>\n              <circle cx=\"50%\" cy=\"50%\" r=\"50%\" />\n            </svg>\n            <span className={`${InteractiveLogotypeClassName}__el__icon`}>\n              <span\n                className={`${InteractiveLogotypeClassName}__el__icon__diagonal ${InteractiveLogotypeClassName}__el__icon__diagonal--down`}\n              />\n              <span\n                className={`${InteractiveLogotypeClassName}__el__icon__diagonal ${InteractiveLogotypeClassName}__el__icon__diagonal--up`}\n              />\n            </span>\n          </span>\n        </span>\n      </InteractiveLogotypeStyle>\n\n      {/* ______________________________________________ */}\n      {/* Overlay Fill Bars */}\n      <InteractiveFillBarsStyle\n        className={`${InteractiveFillBarsClassName} ${InteractiveFillBarsClassName}--${\n          isDynamicallyInactive ? `inactive` : `active`\n        } ${InteractiveFillBarsClassName}--${\n          isFillBarsExpanded ? `is-expanded` : `is-not-expanded`\n        }`}\n      >\n        {/* ______________________________________________ */}\n        {/* Background Fill Bars */}\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--top`}\n        />\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--right`}\n        />\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--bottom`}\n        />\n        <span\n          className={`${InteractiveFillBarsClassName}__fill-bar ${InteractiveFillBarsClassName}__fill-bar--left`}\n        />\n      </InteractiveFillBarsStyle>\n    </>\n  );\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}