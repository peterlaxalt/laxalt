{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manzanita/Repositories/laxalt/web/components/Sections/AccordionListingRow/AccordionListingRow.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// Core\nimport React, { useState } from \"react\";\n// Styles\nimport { AccordionListingRowClassName, AccordionListingRowStyle } from \"./styles.scss\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * @name AccordionListingRow\n * @author Peter Laxalt\n * @requires /studio/sections/AccordionListingRow\n *\n */\nexport var AccordionListingRow = function AccordionListingRow(_ref) {\n  _s();\n\n  var hasSidebar = _ref.hasSidebar,\n      labelLeft = _ref.labelLeft,\n      labelRight = _ref.labelRight,\n      alternativeStyle = _ref.alternativeStyle,\n      isInitiallyExpanded = _ref.isInitiallyExpanded,\n      children = _ref.children;\n\n  var _useState = useState(isInitiallyExpanded ? true : false),\n      isExpanded = _useState[0],\n      toggleRow = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(AccordionListingRowStyle, {\n    \"aria-expanded\": isExpanded,\n    className: \"\".concat(AccordionListingRowClassName, \" \").concat(AccordionListingRowClassName, \"--\").concat(isExpanded ? \"is-visible\" : \"is-not-visible\", \" \").concat(AccordionListingRowClassName, \"--\").concat(isInitiallyExpanded ? \"is-initially-expanded\" : \"is-not-initially-expanded\", \" \").concat(AccordionListingRowClassName, \"--\").concat(hasSidebar ? \"has-sidebar\" : \"sans-sidebar\", \" \").concat(AccordionListingRowClassName, \"--\").concat(alternativeStyle ? \"alt-layout\" : \"default-layout\"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(AccordionListingRowClassName, \"__inner\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(AccordionListingRowClassName, \"__title\"),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\".concat(AccordionListingRowClassName, \"__title__btn\"),\n          onClick: function onClick() {\n            return !isInitiallyExpanded ? toggleRow(isExpanded ? false : true) : null;\n          },\n          style: {\n            cursor: !isInitiallyExpanded ? \"pointer\" : \"default\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\".concat(AccordionListingRowClassName, \"__title__btn__label\"),\n            children: labelLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\".concat(AccordionListingRowClassName, \"__title__btn__label \").concat(AccordionListingRowClassName, \"__title__btn__label--indicator\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\".concat(AccordionListingRowClassName, \"__title__btn__label\"),\n            children: labelRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(AccordionListingRowClassName, \"__content\"),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(AccordionListingRowClassName, \"__content__wrapper\"),\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n}; // End Component\n// __________________________________________________________________________________________\n\n_s(AccordionListingRow, \"CpoDd7Zkvr2WJJxJGFkCIsvtxo0=\");\n\n_c = AccordionListingRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionListingRow\");","map":{"version":3,"sources":["/Users/manzanita/Repositories/laxalt/web/components/Sections/AccordionListingRow/AccordionListingRow.tsx"],"names":["React","useState","AccordionListingRowClassName","AccordionListingRowStyle","AccordionListingRow","hasSidebar","labelLeft","labelRight","alternativeStyle","isInitiallyExpanded","children","isExpanded","toggleRow","cursor"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAKA;AACA,SACEC,4BADF,EAEEC,wBAFF,QAGO,eAHP,C,CAKA;AACA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,mBAA+E,GAAG,SAAlFA,mBAAkF,OAOzF;AAAA;;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,kBAC4BT,QAAQ,CAACQ,mBAAmB,GAAG,IAAH,GAAU,KAA9B,CADpC;AAAA,MACGE,UADH;AAAA,MACeC,SADf;;AAGJ,sBACE,QAAC,wBAAD;AACE,qBAAeD,UADjB;AAEE,IAAA,SAAS,YAAKT,4BAAL,cAAqCA,4BAArC,eACPS,UAAU,GAAG,YAAH,GAAkB,gBADrB,cAELT,4BAFK,eAGPO,mBAAmB,GACf,uBADe,GAEf,2BALG,cAMLP,4BANK,eAOPG,UAAU,iCAPH,cAQLH,4BARK,eASPM,gBAAgB,kCATT,CAFX;AAAA,2BAcE;AAAK,MAAA,SAAS,YAAKN,4BAAL,YAAd;AAAA,8BAGE;AAAK,QAAA,SAAS,YAAKA,4BAAL,YAAd;AAAA,+BACE;AACE,UAAA,SAAS,YAAKA,4BAAL,iBADX;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,CAACO,mBAAD,GAAuBG,SAAS,CAACD,UAAU,GAAG,KAAH,GAAW,IAAtB,CAAhC,GAA8D,IAApE;AAAA,WAFX;AAGE,UAAA,KAAK,EAAE;AACLE,YAAAA,MAAM,EAAE,CAACJ,mBAAD,GAAuB,SAAvB,GAAmC;AADtC,WAHT;AAAA,kCASE;AACE,YAAA,SAAS,YAAKP,4BAAL,wBADX;AAAA,sBAGGI;AAHH;AAAA;AAAA;AAAA;AAAA,mBATF,eAiBE;AACE,YAAA,SAAS,YAAKJ,4BAAL,iCAAwDA,4BAAxD;AADX;AAAA;AAAA;AAAA;AAAA,mBAjBF,eAuBE;AACE,YAAA,SAAS,YAAKA,4BAAL,wBADX;AAAA,sBAGGK;AAHH;AAAA;AAAA;AAAA;AAAA,mBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAHF,eAqCE;AAAK,QAAA,SAAS,YAAKL,4BAAL,cAAd;AAAA,+BACE;AAAK,UAAA,SAAS,YAAKA,4BAAL,uBAAd;AAAA,oBACGQ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,WADF;AA4DD,CAtEM,C,CAwEP;AACA;;GAzEaN,mB;;KAAAA,mB","sourcesContent":["// Core\nimport React, { useState } from \"react\";\nimport LazyImage from \"../../../utils/lazyImage\";\nimport { DuotoneImage } from \"../../DuotoneImage\";\nimport { LXLT_SimpleContentNode } from \"../../SimpleContentTemplate\";\n\n// Styles\nimport {\n  AccordionListingRowClassName,\n  AccordionListingRowStyle,\n} from \"./styles.scss\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\nexport type LMNTS_Section_AccordionListingRow = LXLT_SimpleContentNode & {\n  hasSidebar?: boolean;\n  labelLeft: string;\n  labelRight: string;\n  alternativeStyle?: boolean;\n  isInitiallyExpanded?: boolean;\n  children: React.ReactNode;\n};\n\n/**\n *\n * @name AccordionListingRow\n * @author Peter Laxalt\n * @requires /studio/sections/AccordionListingRow\n *\n */\nexport const AccordionListingRow: React.FunctionComponent<LMNTS_Section_AccordionListingRow> = ({\n  hasSidebar,\n  labelLeft,\n  labelRight,\n  alternativeStyle,\n  isInitiallyExpanded,\n  children,\n}) => {\n  const [isExpanded, toggleRow] = useState(isInitiallyExpanded ? true : false);\n\n  return (\n    <AccordionListingRowStyle\n      aria-expanded={isExpanded}\n      className={`${AccordionListingRowClassName} ${AccordionListingRowClassName}--${\n        isExpanded ? \"is-visible\" : \"is-not-visible\"\n      } ${AccordionListingRowClassName}--${\n        isInitiallyExpanded\n          ? \"is-initially-expanded\"\n          : \"is-not-initially-expanded\"\n      } ${AccordionListingRowClassName}--${\n        hasSidebar ? `has-sidebar` : `sans-sidebar`\n      } ${AccordionListingRowClassName}--${\n        alternativeStyle ? `alt-layout` : `default-layout`\n      }`}\n    >\n      <div className={`${AccordionListingRowClassName}__inner`}>\n        {/* Title */}\n        {/* _________________________________________________ */}\n        <div className={`${AccordionListingRowClassName}__title`}>\n          <button\n            className={`${AccordionListingRowClassName}__title__btn`}\n            onClick={() => !isInitiallyExpanded ? toggleRow(isExpanded ? false : true) : null}\n            style={{\n              cursor: !isInitiallyExpanded ? \"pointer\" : \"default\"\n            }}\n          >\n            {/* Left */}\n            {/* _________________________________________________ */}\n            <span\n              className={`${AccordionListingRowClassName}__title__btn__label`}\n            >\n              {labelLeft}\n            </span>\n\n            {/* Middle */}\n            {/* _________________________________________________ */}\n            <span\n              className={`${AccordionListingRowClassName}__title__btn__label ${AccordionListingRowClassName}__title__btn__label--indicator`}\n            />\n\n            {/* Right */}\n            {/* _________________________________________________ */}\n            <span\n              className={`${AccordionListingRowClassName}__title__btn__label`}\n            >\n              {labelRight}\n            </span>\n          </button>\n        </div>\n\n        {/* Content */}\n        {/* _________________________________________________ */}\n        <div className={`${AccordionListingRowClassName}__content`}>\n          <div className={`${AccordionListingRowClassName}__content__wrapper`}>\n            {children}\n          </div>\n        </div>\n      </div>\n    </AccordionListingRowStyle>\n  );\n};\n\n// End Component\n// __________________________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}