{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Core\nimport React, { useEffect, useRef, useState } from \"react\"; // Types\n\nimport { SiteProjects } from \"../../../constants/site/Settings\"; // Vendor\n\nimport gsap from \"gsap\"; // Components\n\nimport { ProjectCard } from \"../../ProjectCard\"; // Styles\n\nimport { ProjectScrollBlurOverlayStyles, ProjectScrollSectionClassName, ProjectScrollSectionStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nlet lastTranslateX = 0;\nexport const ProjectScrollSection = /*#__PURE__*/React.memo(({\n  addClass = \"\"\n}) => {\n  const {\n    0: dynamicHeight,\n    1: setDynamicHeight\n  } = useState(null); // const [translateX, setTranslateX] = useState(0);\n  // const [windowSize, setWindowSize] = useState(0);\n\n  const {\n    0: isBreakPoint,\n    1: setBreakPoint\n  } = useState(false);\n  const {\n    0: isScrolled,\n    1: setScrolled\n  } = useState(false);\n  const containerRef = useRef();\n  const objectRef = useRef();\n  let currentTranslation = 0;\n  let boundingClientX = 0;\n\n  const calcDynamicHeight = objectWidth => {\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    return objectWidth - vw + vh;\n  };\n\n  const handleDynamicHeight = (ref, setDynamicHeight) => {\n    if (ref && ref.current) {\n      const objectWidth = ref.current.scrollWidth;\n      const dynamicHeight = calcDynamicHeight(objectWidth);\n      setDynamicHeight(dynamicHeight);\n    }\n  };\n\n  const applyScrollListener = ref => // setTranslateX: (translateX: number) => void\n  {\n    window.addEventListener(\"scroll\", () => {\n      const offsetTop = ref && ref.current ? -ref.current.offsetTop : 0; // setDharmaPaused(offsetTop < windowSize / -2);\n      // setTranslateX(offsetTop);\n\n      gsap.to(objectRef.current, {\n        x: offsetTop,\n        transition: 0.1,\n        // duration: 0.02,\n        ease: \"sine.out\"\n      });\n\n      if (offsetTop < window.innerWidth / -2) {\n        setBreakPoint(true);\n      } else {\n        setBreakPoint(false);\n      }\n\n      if (offsetTop < -100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n\n      window.dharmaPaused = offsetTop < window.innerWidth / -2;\n    });\n  };\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight); // setWindowSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef);\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ProjectScrollBlurOverlayStyles, {\n      isBreakpoint: isBreakPoint\n    }), /*#__PURE__*/_jsx(ProjectScrollSectionStyle, {\n      className: `${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${isScrolled ? `is-scrolled` : `is-not-scrolled`} ${ProjectScrollSectionClassName}--${isBreakPoint ? `is-at-breakpoint` : `is-not-at-breakpoint`} ${ProjectScrollSectionClassName}--${boundingClientX > lastTranslateX ? `is-at-end` : `is-not-at-end`} ${addClass && addClass}`,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: `${ProjectScrollSectionClassName}__outer`,\n        style: {\n          height: `${dynamicHeight}px`\n        },\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: `${ProjectScrollSectionClassName}__sticky-wrapper`,\n          ref: containerRef,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: `${ProjectScrollSectionClassName}__x-translate-wrapper` // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n            ,\n            ref: objectRef,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: `${ProjectScrollSectionClassName}__horizontal-wrapper`,\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: `${ProjectScrollSectionClassName}__content-wrapper`,\n                children: SiteProjects.map((item, idx) => {\n                  return /*#__PURE__*/_jsx(ProjectCard, {\n                    count: idx + 1,\n                    total: SiteProjects.length,\n                    item: item\n                  }, idx);\n                })\n              })\n            })\n          })\n        })\n      })\n    })]\n  });\n}); // End Component\n// ______________________________________________________________________________","map":null,"metadata":{},"sourceType":"module"}