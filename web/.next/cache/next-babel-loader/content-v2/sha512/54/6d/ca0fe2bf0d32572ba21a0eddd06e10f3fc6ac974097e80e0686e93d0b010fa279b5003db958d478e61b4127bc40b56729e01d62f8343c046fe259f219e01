{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectMetaSection/ProjectMetaSection.tsx\";\n// Core\nimport React from \"react\"; // Types\n\n// Constants\nimport { TableRowListingClassName } from \"../../../components/Sections/TableListings/styles.scss\"; // Components\n\nimport { AccordionListingRow } from \"../../../components/Sections/AccordionListingRow\";\nimport { TableColumnListing } from \"../../../components/Sections/TableListings\";\nimport { TableRowListing } from \"../../../components/Sections/TableListings/TableRowListings\"; // Begin Component\n// __________________________________________________________________________________________\n\nexport const ProjectMetaSectionClassName = \"project-meta-section\";\n/**\n *\n * @name ProjectMetaSection\n * @author Peter Laxalt\n *\n */\n\nconst ProjectMetaSection = ({\n  project\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${ProjectMetaSectionClassName}`,\n    children: [project.meta && project.meta.team && /*#__PURE__*/_jsxDEV(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: `Shoutouts`,\n      labelRight: `Credits`,\n      children: [project.meta && project.meta.team && project.meta.team.core && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--team-table`,\n        data: project.meta.team.core.map(person => {\n          let field = [];\n          field[0] = person.name;\n          field[1] = person.role;\n          field[2] = person.web;\n          field[3] = person.contact;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Team`,\n        tableHeaders: Object.keys(project.meta.team.core[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), project.meta && project.meta.team && project.meta.team.mentions && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--team-table`,\n        data: project.meta.team.mentions.map(person => {\n          let field = [];\n          field[0] = person.name;\n          field[1] = person.role;\n          field[2] = person.web;\n          field[3] = person.contact;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Shoutouts`,\n        tableHeaders: Object.keys(project.meta.team.core[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), project.meta && project.meta.tools && /*#__PURE__*/_jsxDEV(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: `Approach`,\n      labelRight: `Tools`,\n      children: [project.meta && project.meta.tools && project.meta.tools.software && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.software.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Software`,\n        tableHeaders: Object.keys(project.meta.tools.software[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), project.meta && project.meta.tools && project.meta.tools.gear && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.gear.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Gear`,\n        tableHeaders: Object.keys(project.meta.tools.gear[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), project.meta && project.meta.tools && project.meta.tools.frontend && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.frontend.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Frontend`,\n        tableHeaders: Object.keys(project.meta.tools.frontend[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), project.meta && project.meta.tools && project.meta.tools.backend && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.tools.backend.map(tool => {\n          let field = [];\n          field[0] = tool.name;\n          field[1] = tool.purpose;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Backend`,\n        tableHeaders: Object.keys(project.meta.tools.backend[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), project.meta && project.meta.awards && /*#__PURE__*/_jsxDEV(AccordionListingRow, {\n      hasSidebar: true,\n      alternativeStyle: true,\n      labelLeft: `Awards`,\n      labelRight: `Wins`,\n      children: [project.meta && project.meta.awards && project.meta.awards.items && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.awards.items.map(award => {\n          let field = [];\n          field[0] = award.name;\n          field[1] = award.provider;\n          field[2] = award.year;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Awards`,\n        tableHeaders: Object.keys(project.meta.awards.items[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), project.meta && project.meta.awards && project.meta.awards.mentions && /*#__PURE__*/_jsxDEV(TableRowListing, {\n        addClass: `${TableRowListingClassName}--tools-table`,\n        data: project.meta.awards.mentions.map(award => {\n          let field = [];\n          field[0] = award.name;\n          field[1] = award.publisher;\n          field[2] = award.year;\n          return {\n            fields: field\n          };\n        }),\n        tableName: `Mentions`,\n        tableHeaders: Object.keys(project.meta.awards.mentions[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this), project.meta && project.meta.awards && project.meta.awards.wins && /*#__PURE__*/_jsxDEV(TableColumnListing, {\n        addClass: `${TableRowListingClassName}--wins-table`,\n        data: project.meta.awards.wins.map(win => {\n          return {\n            label: win\n          };\n        }),\n        tableName: `Wins`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProjectMetaSection;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectMetaSection/ProjectMetaSection.tsx"],"names":["React","TableRowListingClassName","AccordionListingRow","TableColumnListing","TableRowListing","ProjectMetaSectionClassName","ProjectMetaSection","project","meta","team","core","map","person","field","name","role","web","contact","fields","Object","keys","mentions","tools","software","tool","purpose","gear","frontend","backend","awards","items","award","provider","year","publisher","wins","win","label"],"mappings":"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","sourcesContent":["// Core\nimport { NextPage } from \"next\";\nimport React from \"react\";\n\n// Types\nimport { LXLT_Project } from \"../../../constants/site/Settings\";\n\n// Constants\nimport { TableRowListingClassName } from \"../../../components/Sections/TableListings/styles.scss\";\n\n// Components\nimport { AccordionListingRow } from \"../../../components/Sections/AccordionListingRow\";\nimport { TableColumnListing } from \"../../../components/Sections/TableListings\";\nimport { TableRowListing } from \"../../../components/Sections/TableListings/TableRowListings\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LXLT_ProjectMetaSection = {\n  project: LXLT_Project;\n};\n\nexport const ProjectMetaSectionClassName = \"project-meta-section\";\n\n/**\n *\n * @name ProjectMetaSection\n * @author Peter Laxalt\n *\n */\nconst ProjectMetaSection: NextPage<LXLT_ProjectMetaSection> = ({ project }) => {\n  return (\n    <div className={`${ProjectMetaSectionClassName}`}>\n      {project.meta && project.meta.team && (\n        <AccordionListingRow\n          hasSidebar={true}\n          alternativeStyle={true}\n          labelLeft={`Shoutouts`}\n          labelRight={`Credits`}\n        >\n          {project.meta && project.meta.team && project.meta.team.core && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--team-table`}\n              data={project.meta.team.core.map((person) => {\n                let field: string[] = [];\n\n                field[0] = person.name;\n                field[1] = person.role;\n                field[2] = person.web;\n                field[3] = person.contact;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Team`}\n              tableHeaders={Object.keys(project.meta.team.core[0])}\n            />\n          )}\n\n          {project.meta && project.meta.team && project.meta.team.mentions && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--team-table`}\n              data={project.meta.team.mentions.map((person) => {\n                let field: string[] = [];\n\n                field[0] = person.name;\n                field[1] = person.role;\n                field[2] = person.web;\n                field[3] = person.contact;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Shoutouts`}\n              tableHeaders={Object.keys(project.meta.team.core[0])}\n            />\n          )}\n        </AccordionListingRow>\n      )}\n\n      {project.meta && project.meta.tools && (\n        <AccordionListingRow\n          hasSidebar={true}\n          alternativeStyle={true}\n          labelLeft={`Approach`}\n          labelRight={`Tools`}\n        >\n          {project.meta && project.meta.tools && project.meta.tools.software && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.software.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Software`}\n              tableHeaders={Object.keys(project.meta.tools.software[0])}\n            />\n          )}\n\n          {project.meta && project.meta.tools && project.meta.tools.gear && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.gear.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Gear`}\n              tableHeaders={Object.keys(project.meta.tools.gear[0])}\n            />\n          )}\n\n          {project.meta && project.meta.tools && project.meta.tools.frontend && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.frontend.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Frontend`}\n              tableHeaders={Object.keys(project.meta.tools.frontend[0])}\n            />\n          )}\n\n          {project.meta && project.meta.tools && project.meta.tools.backend && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.tools.backend.map((tool) => {\n                let field: string[] = [];\n\n                field[0] = tool.name;\n                field[1] = tool.purpose;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Backend`}\n              tableHeaders={Object.keys(project.meta.tools.backend[0])}\n            />\n          )}\n        </AccordionListingRow>\n      )}\n\n      {project.meta && project.meta.awards && (\n        <AccordionListingRow\n          hasSidebar={true}\n          alternativeStyle={true}\n          labelLeft={`Awards`}\n          labelRight={`Wins`}\n        >\n          {project.meta && project.meta.awards && project.meta.awards.items && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.awards.items.map((award) => {\n                let field: string[] = [];\n\n                field[0] = award.name;\n                field[1] = award.provider;\n                field[2] = award.year;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Awards`}\n              tableHeaders={Object.keys(project.meta.awards.items[0])}\n            />\n          )}\n\n          {project.meta && project.meta.awards && project.meta.awards.mentions && (\n            <TableRowListing\n              addClass={`${TableRowListingClassName}--tools-table`}\n              data={project.meta.awards.mentions.map((award) => {\n                let field: string[] = [];\n\n                field[0] = award.name;\n                field[1] = award.publisher;\n                field[2] = award.year;\n\n                return {\n                  fields: field,\n                };\n              })}\n              tableName={`Mentions`}\n              tableHeaders={Object.keys(project.meta.awards.mentions[0])}\n            />\n          )}\n\n          {project.meta && project.meta.awards && project.meta.awards.wins && (\n            <TableColumnListing\n              addClass={`${TableRowListingClassName}--wins-table`}\n              data={project.meta.awards.wins.map((win) => {\n                return {\n                  label: win,\n                };\n              })}\n              tableName={`Wins`}\n            />\n          )}\n        </AccordionListingRow>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectMetaSection;\n"]},"metadata":{},"sourceType":"module"}