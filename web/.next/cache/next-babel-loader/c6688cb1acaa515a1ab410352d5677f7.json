{"ast":null,"code":"var _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport Link from \"next/link\";\nimport React from \"react\";\n// Styles\nimport { LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nexport const LayeredSidebar = ({\n  addClass\n}) => {\n  let panes = [{\n    header: \"Design\",\n    items: [{\n      label: \"Strategy\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Branding\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Illustration\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Packaging\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Creative Direction\",\n      href: \"/\",\n      isMajor: false\n    }, {\n      label: \"Linework\",\n      href: \"/\",\n      isMajor: false\n    }, {\n      label: \"Hospitality\",\n      href: \"/\",\n      isMajor: false\n    }]\n  }, {\n    // header: \"Pane 02\",\n    items: [{\n      label: \"Item\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: false\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: false\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: false\n    }]\n  }, {\n    // header: \"Pane 02\",\n    items: [{\n      label: \"Item\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: true\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: false\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: false\n    }, {\n      label: \"Item\",\n      href: \"/\",\n      isMajor: false\n    }]\n  }];\n\n  if (panes) {\n    return __jsx(LayeredSidebarStyle, {\n      className: `${LayeredSidebarClassName} ${addClass && addClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: `${LayeredSidebarClassName}__inner`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, panes.map((pane, idx) => {\n      let paneItemsMajor = pane.items ? pane.items.filter(item => item.isMajor) : [];\n      let paneItemsMinor = pane.items ? pane.items.filter(item => !item.isMajor) : [];\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: `${LayeredSidebarClassName}__pane`,\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, pane.header && __jsx(\"div\", {\n        className: `${LayeredSidebarClassName}__pane__header`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, pane.header), pane.items && __jsx(React.Fragment, null, paneItemsMajor.length > 0 && __jsx(\"ul\", {\n        className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, paneItemsMajor.map((paneItem, idxx) => {\n        return __jsx(\"li\", {\n          className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n          key: idxx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }\n        }, __jsx(Link, {\n          href: paneItem.href,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 35\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 37\n          }\n        }, paneItem.label)));\n      })), paneItemsMinor.length > 0 && __jsx(\"ul\", {\n        className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, paneItemsMinor.map((paneItem, idxx) => {\n        return __jsx(\"li\", {\n          className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n          key: idxx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }\n        }, __jsx(Link, {\n          href: paneItem.href,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 35\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 37\n          }\n        }, paneItem.label)));\n      })))));\n    })));\n  } else {\n    return null;\n  }\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx"],"names":["Link","React","LayeredSidebarClassName","LayeredSidebarStyle","LayeredSidebar","addClass","panes","header","items","label","href","isMajor","map","pane","idx","paneItemsMajor","filter","item","paneItemsMinor","length","paneItem","idxx"],"mappings":"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","sourcesContent":["// Core\nimport Link from \"next/link\";\nimport { NextRouter } from \"next/router\";\nimport React, { Component } from \"react\";\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\nimport { ThemePicker } from \"../ThemePicker\";\n\n// Styles\nimport { LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_SidebarPaneItem = {\n  label: string;\n  href: string;\n  isMajor: boolean;\n};\n\ntype LXLT_SidebarPane = {\n  header?: string;\n  items?: LXLT_SidebarPaneItem[];\n};\n\ntype LXLT_LayeredSidebar = {\n  addClass?: string;\n};\n\n// Begin Data\n// __________________________________________________________________________________________\n\nexport const LayeredSidebar: React.FunctionComponent<LXLT_LayeredSidebar> = ({\n  addClass,\n}) => {\n  let panes: LXLT_SidebarPane[] = [\n    {\n      header: \"Design\",\n      items: [\n        {\n          label: \"Strategy\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Branding\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Illustration\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Packaging\",\n          href: \"/\",\n          isMajor: true,\n        },\n\n        {\n          label: \"Creative Direction\",\n          href: \"/\",\n          isMajor: false,\n        },\n        {\n          label: \"Linework\",\n          href: \"/\",\n          isMajor: false,\n        },\n        {\n          label: \"Hospitality\",\n          href: \"/\",\n          isMajor: false,\n        },\n      ],\n    },\n\n    {\n      // header: \"Pane 02\",\n      items: [\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: false,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: false,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: false,\n        },\n      ],\n    },\n\n    {\n      // header: \"Pane 02\",\n      items: [\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: true,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: false,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: false,\n        },\n        {\n          label: \"Item\",\n          href: \"/\",\n          isMajor: false,\n        },\n      ],\n    },\n  ];\n\n  if (panes) {\n    return (\n      <LayeredSidebarStyle\n        className={`${LayeredSidebarClassName} ${addClass && addClass}`}\n      >\n        <div className={`${LayeredSidebarClassName}__inner`}>\n          {panes.map((pane: LXLT_SidebarPane, idx: number) => {\n            let paneItemsMajor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => item.isMajor)\n              : [];\n\n            let paneItemsMinor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => !item.isMajor)\n              : [];\n\n            return (\n              <>\n                {/* ____________________________________________________________ */}\n                {/* Navigaton Pane */}\n                <div className={`${LayeredSidebarClassName}__pane`} key={idx}>\n                  {/* ____________________________________________________________ */}\n                  {/* List header */}\n                  {pane.header && (\n                    <div className={`${LayeredSidebarClassName}__pane__header`}>\n                      {pane.header}\n                    </div>\n                  )}\n\n                  {/* ____________________________________________________________ */}\n                  {/* List items */}\n                  {pane.items && (\n                    <>\n                      {/* ____________________________________________________________ */}\n                      {/* Major list items */}\n                      {paneItemsMajor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`}\n                        >\n                          {paneItemsMajor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n\n                      {/* ____________________________________________________________ */}\n                      {/* Minor list items */}\n                      {paneItemsMinor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`}\n                        >\n                          {paneItemsMinor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n                    </>\n                  )}\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </LayeredSidebarStyle>\n    );\n  } else {\n    return null;\n  }\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}