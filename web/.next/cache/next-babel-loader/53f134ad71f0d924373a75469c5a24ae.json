{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n// Core\nimport React, { createRef, PureComponent } from \"react\";\n// Styles\nimport { CanvasCursorStyle, CanvasCursorClassName } from \"./styles.scss\"; // Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Cursor\nexport class CanvasCursor extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"canvasRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(this, \"ctx\", this.canvasRef.current.getContext('2d'));\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0\n      },\n      vw: 0,\n      vh: 0\n    }; // this.setCursorPosition = this.setCursorPosition.bind(this);\n\n    this.calculateSize = this.calculateSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.calculateSize();\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2\n      }\n    });\n    window.addEventListener(\"mousemove\", this.updateMouseCoords);\n    window.addEventListener(\"resize\", this.calculateSize, false);\n  }\n\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight\n    });\n\n    if (this.canvasRef) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  updateMouseCoords() {}\n  /**\n   *\n   * @name Set Cursor Position\n   * @param e : Event from \"mousemove\" event listener.\n   * @description This positions the Cursor throughout the page.\n   *\n   */\n  // setCursorPosition = (e: any) => {\n  //   let xPos = this.state.mouseX - this.state.mouseSize / 2;\n  //   let yPos = this.state.mouseY - this.state.mouseSize / 2;\n  //   let dX = this.state.mouseX - this.state.xPos;\n  //   let dY = this.state.mouseY - this.state.yPos;\n  //   this.setState({\n  //     xPos: xPos + dX / 10,\n  //     yPos: yPos + dY / 10,\n  //     mouseX: e.clientX,\n  //     mouseY: e.clientY,\n  //     opacity: 1,\n  //   });\n  // };\n\n\n  render() {\n    // const UniversallyHideCursor = createGlobalStyle`\n    //   body, html {\n    //     cursor: none !important;\n    //     a {\n    //       cursor: none !important;\n    //     }\n    //     * {\n    //       cursor: none !important;\n    //     }\n    //   }\n    // `;\n    console.log(this.ctx);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CanvasCursorStyle, {\n        ref: this.canvasRef,\n        className: `${CanvasCursorClassName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/CanvasCursor/CanvasCursor.tsx"],"names":["React","createRef","PureComponent","CanvasCursorStyle","CanvasCursorClassName","CanvasCursor","constructor","props","canvasRef","current","getContext","state","mouseX","mouseY","mouseCursor","radius","lastX","lastY","vw","vh","calculateSize","bind","componentDidMount","setState","window","innerWidth","innerHeight","addEventListener","updateMouseCoords","width","height","render","console","log","ctx"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAA2BC,SAA3B,EAAsCC,aAAtC,QAA2D,OAA3D;AAGA;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,eAAzD,C,CAEA;AACA;;AAiBA;AACA,OAAO,MAAMC,YAAN,SAA2BH,aAA3B,CAGL;AACAI,EAAAA,WAAW,CAACC,KAAD,EAA2B;AACpC,UAAMA,KAAN;;AADoC,oDA4EUN,SAAS,EA5EnB;;AAAA,iCA6EN,KAAKO,SAAL,CAAeC,OAAf,CAAuBC,UAAvB,CAAkC,IAAlC,CA7EM;;AAGpC,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CADG;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAIXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE,EADG;AAEXC,QAAAA,KAAK,EAAE,CAFI;AAGXC,QAAAA,KAAK,EAAE;AAHI,OAJF;AAUXC,MAAAA,EAAE,EAAE,CAVO;AAWXC,MAAAA,EAAE,EAAE;AAXO,KAAb,CAHoC,CAiBpC;;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,aAAL;AAEA,SAAKG,QAAL,CAAc;AACZX,MAAAA,MAAM,EAAEY,MAAM,CAACC,UAAP,GAAoB,CADhB;AAEZZ,MAAAA,MAAM,EAAEW,MAAM,CAACE,WAAP,GAAqB,CAFjB;AAIZZ,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE,EADG;AAEXC,QAAAA,KAAK,EAAEQ,MAAM,CAACC,UAAP,GAAoB,CAFhB;AAGXR,QAAAA,KAAK,EAAEO,MAAM,CAACE,WAAP,GAAqB;AAHjB;AAJD,KAAd;AAWAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,WAAxB,EAAqC,KAAKC,iBAA1C;AACAJ,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,aAAvC,EAAsD,KAAtD;AACD;;AAEDA,EAAAA,aAAa,GAAG;AACd,SAAKG,QAAL,CAAc;AACZL,MAAAA,EAAE,EAAEM,MAAM,CAACC,UADC;AAEZN,MAAAA,EAAE,EAAEK,MAAM,CAACE;AAFC,KAAd;;AAKA,QAAI,KAAKlB,SAAT,EAAoB;AAClB,WAAKA,SAAL,CAAeC,OAAf,CAAuBoB,KAAvB,GAA+BL,MAAM,CAACC,UAAtC;AACA,WAAKjB,SAAL,CAAeC,OAAf,CAAuBqB,MAAvB,GAAgCN,MAAM,CAACE,WAAvC;AACD;AACF;;AAEDE,EAAAA,iBAAiB,GAAG,CAAE;AAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKAG,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,GAAjB;AAEA,wBACE;AAAA,6BAEE,QAAC,iBAAD;AACE,QAAA,GAAG,EAAE,KAAK1B,SADZ;AAEE,QAAA,SAAS,EAAG,GAAEJ,qBAAsB;AAFtC;AAAA;AAAA;AAAA;AAAA;AAFF,qBADF;AASD;;AA1GD","sourcesContent":["/**\n *\n * Cursor.js\n * @author Peter Laxalt\n * @description The website Cursor.\n *\n */\n\n// Core\nimport React, { Component, createRef, PureComponent } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// Styles\nimport { CanvasCursorStyle, CanvasCursorClassName } from \"./styles.scss\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport type LXLT_CanvasCursor = {};\n\nexport type LXLT_CanvasCursor_State = {\n  mouseX: number;\n  mouseY: number;\n  mouseCursor: {\n    radius: number;\n    lastX: number;\n    lastY: number;\n  };\n\n  vw: number;\n  vh: number;\n};\n\n// Cursor\nexport class CanvasCursor extends PureComponent<\n  LXLT_CanvasCursor,\n  LXLT_CanvasCursor_State\n> {\n  constructor(props: LXLT_CanvasCursor) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: 0,\n        lastY: 0,\n      },\n\n      vw: 0,\n      vh: 0,\n    };\n\n    // this.setCursorPosition = this.setCursorPosition.bind(this);\n    this.calculateSize = this.calculateSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.calculateSize();\n\n    this.setState({\n      mouseX: window.innerWidth / 2,\n      mouseY: window.innerHeight / 2,\n\n      mouseCursor: {\n        radius: 10,\n        lastX: window.innerWidth / 2,\n        lastY: window.innerHeight / 2,\n      },\n    });\n\n    window.addEventListener(\"mousemove\", this.updateMouseCoords);\n    window.addEventListener(\"resize\", this.calculateSize, false);\n  }\n\n  calculateSize() {\n    this.setState({\n      vw: window.innerWidth,\n      vh: window.innerHeight,\n    });\n\n    if (this.canvasRef) {\n      this.canvasRef.current.width = window.innerWidth;\n      this.canvasRef.current.height = window.innerHeight;\n    }\n  }\n\n  updateMouseCoords() {}\n\n  /**\n   *\n   * @name Set Cursor Position\n   * @param e : Event from \"mousemove\" event listener.\n   * @description This positions the Cursor throughout the page.\n   *\n   */\n  // setCursorPosition = (e: any) => {\n  //   let xPos = this.state.mouseX - this.state.mouseSize / 2;\n  //   let yPos = this.state.mouseY - this.state.mouseSize / 2;\n\n  //   let dX = this.state.mouseX - this.state.xPos;\n  //   let dY = this.state.mouseY - this.state.yPos;\n\n  //   this.setState({\n  //     xPos: xPos + dX / 10,\n  //     yPos: yPos + dY / 10,\n  //     mouseX: e.clientX,\n  //     mouseY: e.clientY,\n  //     opacity: 1,\n  //   });\n  // };\n\n  canvasRef: React.RefObject<HTMLCanvasElement> = createRef<HTMLCanvasElement>();\n  ctx: CanvasRenderingContext2D = this.canvasRef.current.getContext('2d');\n\n  render() {\n    // const UniversallyHideCursor = createGlobalStyle`\n    //   body, html {\n    //     cursor: none !important;\n\n    //     a {\n    //       cursor: none !important;\n    //     }\n\n    //     * {\n    //       cursor: none !important;\n    //     }\n    //   }\n    // `;\n\n    console.log(this.ctx);\n\n    return (\n      <>\n        {/* <UniversallyHideCursor /> */}\n        <CanvasCursorStyle\n          ref={this.canvasRef}\n          className={`${CanvasCursorClassName}`}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}