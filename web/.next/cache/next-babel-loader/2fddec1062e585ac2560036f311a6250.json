{"ast":null,"code":"var _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/_interactive/DharmaCounter/DharmaCounter.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from \"react\";\nimport { DharmaTypeClassName, DharmaTypeStyle } from \"../../_svg/DharmaType/styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaCounter\n * @author Peter Laxalt\n *\n */\nexport class DharmaCounter extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      characters: [],\n      viewBoxHeight: 0,\n      viewBoxWidth: 0,\n      characterWidth: 0,\n      isInitialized: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.text) {\n      let {\n        text\n      } = this.props;\n      let viewBoxHeight = 173.21;\n      let viewBoxWidth = 215.21;\n      let splitCharacterArray = text.split(\"\");\n      let characterArray = splitCharacterArray.map((character, idx) => {\n        return {\n          letter: character,\n          count: 1,\n          idx: idx\n        };\n      });\n      let characterCount = splitCharacterArray.length;\n      let characterWidth = viewBoxWidth / characterCount;\n      this.setState({\n        text: text,\n        characters: characterArray,\n        viewBoxHeight: viewBoxHeight,\n        viewBoxWidth: viewBoxWidth,\n        characterWidth: characterWidth,\n        isInitialized: true\n      });\n    }\n  }\n\n  render() {\n    let {\n      viewBoxHeight,\n      viewBoxWidth,\n      characters,\n      characterWidth\n    } = this.state;\n    console.log(\"DharmaCounter state:\", this.state);\n    return __jsx(DharmaTypeStyle, {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: `0 0 ${viewBoxWidth} ${viewBoxHeight}`,\n      preserveAspectRatio: \"none\",\n      className: `${DharmaTypeClassName} ${DharmaTypeClassName}--couter`,\n      style: {\n        [`--${DharmaTypeClassName}-font-size`]: `${viewBoxHeight}px`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, characters.map((char, idx) => {\n      return __jsx(\"g\", {\n        className: `${DharmaTypeClassName}__character-wrapper`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"text\", {\n        className: `${DharmaTypeClassName}__character`,\n        transform: `translate(${characterWidth * idx} 170.53) scale(1.13, 1.38)`,\n        style: {\n          [`--${DharmaTypeClassName}-key`]: idx\n        },\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(\"tspan\", {\n        className: `${DharmaTypeClassName}__letter`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, char.letter)));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/_interactive/DharmaCounter/DharmaCounter.tsx"],"names":["React","DharmaTypeClassName","DharmaTypeStyle","DharmaCounter","PureComponent","constructor","props","state","text","characters","viewBoxHeight","viewBoxWidth","characterWidth","isInitialized","componentDidMount","splitCharacterArray","split","characterArray","map","character","idx","letter","count","characterCount","length","setState","render","console","log","char"],"mappings":"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","sourcesContent":["// Core\nimport React from \"react\";\nimport {\n  DharmaTypeClassName,\n  DharmaTypeStyle,\n} from \"../../_svg/DharmaType/styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_DharmaCounter = {\n  text: string;\n};\n\ntype LXLT_DharmaCounterState = {\n  text: string;\n  characters: LXLT_DharmaChar[];\n\n  viewBoxHeight: number;\n  viewBoxWidth: number;\n\n  characterWidth: number;\n\n  isInitialized: boolean;\n};\n\ntype LXLT_DharmaChar = {\n  letter: string;\n  count: number;\n  idx: number;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaCounter\n * @author Peter Laxalt\n *\n */\nexport class DharmaCounter extends React.PureComponent<\n  LXLT_DharmaCounter,\n  LXLT_DharmaCounterState\n> {\n  constructor(props: LXLT_DharmaCounter) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      characters: [],\n\n      viewBoxHeight: 0,\n      viewBoxWidth: 0,\n      characterWidth: 0,\n\n      isInitialized: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.text) {\n      let { text } = this.props;\n\n      let viewBoxHeight = 173.21;\n      let viewBoxWidth = 215.21;\n\n      let splitCharacterArray = text.split(\"\");\n      let characterArray: LXLT_DharmaChar[] = splitCharacterArray.map(\n        (character: string, idx: number) => {\n          return {\n            letter: character,\n            count: 1,\n            idx: idx,\n          };\n        }\n      );\n\n      let characterCount = splitCharacterArray.length;\n      let characterWidth = viewBoxWidth / characterCount;\n\n      this.setState({\n        text: text,\n        characters: characterArray,\n\n        viewBoxHeight: viewBoxHeight,\n        viewBoxWidth: viewBoxWidth,\n        characterWidth: characterWidth,\n\n        isInitialized: true,\n      });\n    }\n  }\n\n  render() {\n    let {\n      viewBoxHeight,\n      viewBoxWidth,\n      characters,\n      characterWidth,\n    } = this.state;\n\n    console.log(\"DharmaCounter state:\", this.state);\n\n    return (\n      <DharmaTypeStyle\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n        preserveAspectRatio=\"none\"\n        className={`${DharmaTypeClassName} ${DharmaTypeClassName}--couter`}\n        style={{\n          [`--${DharmaTypeClassName}-font-size` as any]: `${viewBoxHeight}px`,\n        }}\n      >\n        <g>\n          {characters.map((char: LXLT_DharmaChar, idx: number) => {\n            return (\n              <g className={`${DharmaTypeClassName}__character-wrapper`}>\n                <text\n                  className={`${DharmaTypeClassName}__character`}\n                  transform={`translate(${\n                    characterWidth * idx\n                  } 170.53) scale(1.13, 1.38)`}\n                  style={{\n                    [`--${DharmaTypeClassName}-key` as any]: idx,\n                  }}\n                  key={idx}\n                >\n                  <tspan className={`${DharmaTypeClassName}__letter`}>\n                    {char.letter}\n                  </tspan>\n                </text>\n              </g>\n            );\n          })}\n        </g>\n      </DharmaTypeStyle>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}