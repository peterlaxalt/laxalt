{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    body,\\n    html {\\n      overflow: hidden !important;\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// Core\nimport React, { Component } from \"react\"; // Types\n\n// Components\nimport Link from \"next/link\";\nimport { LayeredSidebar } from \"../LayeredSidebar\";\nimport { ThemePicker } from \"../ThemePicker\"; // Styles\n\nimport { InteractiveEyeballClassName, InteractiveEyeballStyle, InteractiveFillBarsClassName, InteractiveFillBarsStyle, InteractiveFrameHeaderClassName, InteractiveFrameHeaderStyle, InteractiveLogotypeClassName, InteractiveLogotypeStyle, InteractiveOverlayNavigationClassName, InteractiveOverlayNavigationStyle } from \"./styles.scss\";\nimport { LayeredSidebarClassName } from \"../LayeredSidebar/styles.scss\";\nimport { createGlobalStyle } from \"styled-components\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nvar FrameItems = function FrameItems() {\n  var items = [{\n    label: \"Studio\",\n    href: \"/sample\"\n  }, {\n    label: \"Art\",\n    href: \"/sample\"\n  }, {\n    label: \"Design\",\n    href: \"/sample\"\n  }, {\n    label: \"Strategy\",\n    href: \"/sample\"\n  }, {\n    label: \"Interactive\",\n    href: \"/sample\"\n  }, {\n    label: \"Murals\",\n    href: \"/sample\"\n  }, {\n    label: \"Code\",\n    href: \"/sample\"\n  }, {\n    label: \"Lab\",\n    href: \"/sample\"\n  }, {\n    label: \"Products\",\n    href: \"/sample\"\n  }, {\n    label: \"Music\",\n    href: \"/sample\"\n  }, {\n    label: \"Tattoo\",\n    href: \"/sample\"\n  }, {\n    label: \"Shop\",\n    href: \"/sample\"\n  }, {\n    label: \"Resources\",\n    href: \"/sample\"\n  }, {\n    label: \"Advice\",\n    href: \"/sample\"\n  }, {\n    label: \"Fonts\",\n    href: \"/sample\"\n  }, {\n    label: \"Contact\",\n    href: \"/sample\"\n  }];\n  return __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__marquee-container\")\n  }, __jsx(\"ul\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame-items\")\n  }, items.map(function (item, idx) {\n    return __jsx(\"li\", {\n      key: idx\n    }, __jsx(Link, {\n      href: item.href\n    }, __jsx(\"a\", null, item.label)));\n  })), __jsx(\"ul\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame-items\")\n  }, items.map(function (item, idx) {\n    return __jsx(\"li\", {\n      key: idx\n    }, __jsx(Link, {\n      href: item.href\n    }, __jsx(\"a\", null, item.label)));\n  })));\n}; // Begin Component\n// _________________________________________________________________________________________\n\n/**\n *\n * @name InteractiveFrameHeader\n *\n */\n\n\nexport var InteractiveFrameHeader = /*#__PURE__*/function (_Component) {\n  _inherits(InteractiveFrameHeader, _Component);\n\n  var _super = _createSuper(InteractiveFrameHeader);\n\n  function InteractiveFrameHeader(props) {\n    var _this;\n\n    _classCallCheck(this, InteractiveFrameHeader);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isInactive: false,\n      isFillBarsExpanded: false,\n      isOverlayVisible: false,\n      isSidebarVisible: false,\n      isLogotypeExpanded: false\n    };\n    _this.listenToScroll = _this.listenToScroll.bind(_assertThisInitialized(_this));\n    _this.toggleLogotype = _this.toggleLogotype.bind(_assertThisInitialized(_this));\n    _this.toggleOverlay = _this.toggleOverlay.bind(_assertThisInitialized(_this));\n    _this.toggleFillBars = _this.toggleFillBars.bind(_assertThisInitialized(_this));\n    _this.toggleOverlayAndFillBarsExpansion = _this.toggleOverlayAndFillBarsExpansion.bind(_assertThisInitialized(_this));\n    _this.toggleOverlayAndLogotypeExpansion = _this.toggleOverlayAndLogotypeExpansion.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n\n\n  _createClass(InteractiveFrameHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"object\") {\n        window.addEventListener(\"scroll\", this.listenToScroll);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (\"object\") {\n        window.removeEventListener(\"scroll\", this.listenToScroll);\n      }\n    }\n  }, {\n    key: \"toggleLogotype\",\n    value: function toggleLogotype() {\n      if (this.state.isLogotypeExpanded) {\n        this.setState({\n          isLogotypeExpanded: false\n        });\n      } else {\n        this.setState({\n          isLogotypeExpanded: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleOverlay\",\n    value: function toggleOverlay() {\n      if (this.state.isOverlayVisible) {\n        this.setState({\n          isOverlayVisible: false\n        });\n        return;\n      } else {\n        this.setState({\n          isOverlayVisible: true\n        });\n        return;\n      }\n    }\n  }, {\n    key: \"toggleFillBars\",\n    value: function toggleFillBars() {\n      if (this.state.isFillBarsExpanded) {\n        this.setState({\n          isFillBarsExpanded: false\n        });\n        return;\n      } else {\n        this.setState({\n          isFillBarsExpanded: true\n        });\n        return;\n      }\n    }\n  }, {\n    key: \"toggleOverlayAndLogotypeExpansion\",\n    value: function toggleOverlayAndLogotypeExpansion() {\n      if (this.state.isFillBarsExpanded) {\n        this.toggleOverlay();\n        this.toggleFillBars();\n      } else {\n        this.toggleLogotype();\n        this.toggleOverlay();\n      }\n\n      return;\n    }\n  }, {\n    key: \"toggleOverlayAndFillBarsExpansion\",\n    value: function toggleOverlayAndFillBarsExpansion() {\n      this.toggleFillBars();\n      this.toggleOverlay();\n      return;\n    }\n  }, {\n    key: \"listenToScroll\",\n    value: function listenToScroll() {\n      if (\"object\" && document) {\n        var scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n\n        if (scrollPosition > 10) {\n          this.setState({\n            isInactive: true\n          });\n        } else {\n          this.setState({\n            isInactive: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(InteractiveFrameHeaderDisplay, {\n        router: this.props.router,\n        isInactive: this.state.isInactive,\n        isFillBarsExpanded: this.state.isFillBarsExpanded,\n        isOverlayVisible: this.state.isOverlayVisible,\n        isSidebarVisible: this.state.isSidebarVisible,\n        isLogotypeExpanded: this.state.isLogotypeExpanded,\n        toggleOverlayAndFillBarsExpansion: this.toggleOverlayAndFillBarsExpansion,\n        toggleOverlayAndLogotypeExpansion: this.toggleOverlayAndLogotypeExpansion\n      });\n    }\n  }]);\n\n  return InteractiveFrameHeader;\n}(Component);\n/**\n *\n * @name InteractiveEyeball\n * @author Peter Laxalt\n *\n */\n\nexport var InteractiveEyeball = /*#__PURE__*/function (_Component2) {\n  _inherits(InteractiveEyeball, _Component2);\n\n  var _super2 = _createSuper(InteractiveEyeball);\n\n  function InteractiveEyeball(props) {\n    var _this2;\n\n    _classCallCheck(this, InteractiveEyeball);\n\n    _this2 = _super2.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this2), \"pupilRef\", /*#__PURE__*/React.createRef());\n\n    _this2.state = {\n      mouseX: 0,\n      mouseY: 0,\n      scrollX: 0,\n      scrollY: 0,\n      pupilWidth: 0,\n      pupilHeight: 0,\n      pupilOffsetX: 0,\n      pupilOffsetY: 0,\n      rotation: 0\n    };\n    _this2.handleMouseMovement = _this2.handleMouseMovement.bind(_assertThisInitialized(_this2));\n    _this2.calculatePupilBoundaries = _this2.calculatePupilBoundaries.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n\n\n  _createClass(InteractiveEyeball, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"object\" && this.pupilRef) {\n        this.calculatePupilBoundaries();\n        window.addEventListener(\"mousemove\", this.handleMouseMovement);\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (\"object\") {\n        window.removeEventListener(\"mousemove\", this.handleMouseMovement);\n      }\n    }\n  }, {\n    key: \"calculatePupilBoundaries\",\n    value: function calculatePupilBoundaries() {\n      if (this.pupilRef.current) {\n        var pupilClientRect = this.pupilRef.current.getBoundingClientRect();\n        this.setState({\n          pupilWidth: pupilClientRect.width,\n          pupilHeight: pupilClientRect.height,\n          pupilOffsetX: pupilClientRect.left,\n          pupilOffsetY: pupilClientRect.top\n        });\n      }\n    }\n  }, {\n    key: \"handleMouseMovement\",\n    value: function handleMouseMovement(e) {\n      if (e) {\n        // let radians = Math.atan2(\n        //   e.screenY - (this.state.pupilOffsetY - this.state.pupilHeight / 2),\n        //   e.screenX - (this.state.pupilOffsetX - this.state.pupilWidth / 2)\n        // );\n        var scrollContainer = document.querySelector(\".\".concat(InteractiveOverlayNavigationClassName));\n        var radians = Math.atan2(e.clientY + scrollContainer.scrollTop - (this.state.pupilOffsetY - this.state.pupilHeight / 2), e.clientX - (this.state.pupilOffsetX - this.state.pupilWidth / 2));\n        var angle = radians * (180 / Math.PI) - 15;\n        this.setState({\n          rotation: angle\n        });\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state);\n      return __jsx(InteractiveEyeballStyle, {\n        className: \"\".concat(InteractiveEyeballClassName, \" \").concat(this.props.addClass)\n      }, __jsx(\"span\", {\n        className: \"\".concat(InteractiveEyeballClassName, \"__outline\")\n      }), __jsx(\"span\", {\n        className: \"\".concat(InteractiveEyeballClassName, \"__pupil-wrapper\")\n      }, __jsx(\"span\", {\n        ref: this.pupilRef,\n        className: \"\".concat(InteractiveEyeballClassName, \"__pupil\"),\n        style: {\n          transform: \"rotate(\".concat(this.state.rotation, \"deg)\")\n        }\n      }, __jsx(\"span\", {\n        className: \"\".concat(InteractiveEyeballClassName, \"__pupil__el\")\n      }))));\n    }\n  }]);\n\n  return InteractiveEyeball;\n}(Component);\n/**\n *\n * @name InteractiveOverlayNavigation\n * @author Peter Laxalt\n *\n */\n\nvar InteractiveOverlayNavigation = function InteractiveOverlayNavigation(_ref) {\n  var addClass = _ref.addClass,\n      toggleOverlayAndLogotypeExpansion = _ref.toggleOverlayAndLogotypeExpansion;\n  var navItems = [{\n    label: \"Art\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }, {\n    label: \"Design\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }, {\n    label: \"Code\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }, {\n    label: \"Culture\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }, {\n    label: \"Learn\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }, {\n    label: \"Shop\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }, {\n    label: \"Studio\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }, {\n    label: \"Contact\",\n    href: \"/sample\",\n    caption: \"Lorem ipsum\"\n  }];\n  var socialItems = [{\n    label: \"Dribbble\",\n    href: \"/\"\n  }, {\n    label: \"Github\",\n    href: \"/\"\n  }, {\n    label: \"Instagram\",\n    href: \"/\"\n  }, {\n    label: \"LinkedIn\",\n    href: \"/\"\n  }];\n  var GlobalScrollLock = createGlobalStyle(_templateObject());\n  return __jsx(React.Fragment, null, __jsx(GlobalScrollLock, null), __jsx(InteractiveOverlayNavigationStyle, {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \" \").concat(addClass)\n  }, __jsx(\"div\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__inner\")\n  }, __jsx(\"div\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__oval-btn \").concat(InteractiveOverlayNavigationClassName, \"__oval-btn--home\")\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__oval-btn__el\"),\n    onClick: function onClick() {\n      return toggleOverlayAndLogotypeExpansion();\n    }\n  }, \"Home\"))), __jsx(\"div\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__oval-btn \").concat(InteractiveOverlayNavigationClassName, \"__oval-btn--close\"),\n    onClick: function onClick() {\n      return toggleOverlayAndLogotypeExpansion();\n    }\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__oval-btn__el\")\n  }, \"Close\")), __jsx(\"div\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social\")\n  }, __jsx(\"ul\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__list\")\n  }, __jsx(\"li\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__list__item\")\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__list__item__label \").concat(InteractiveOverlayNavigationClassName, \"__social__list__item__label--anchor\")\n  }, \"Subscribe\")), socialItems.map(function (item, idx) {\n    return __jsx(\"li\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__list__item\")\n    }, __jsx(Link, {\n      href: item.href\n    }, __jsx(\"a\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__list__item__label \").concat(InteractiveOverlayNavigationClassName, \"__social__list__item__label--anchor\")\n    }, item.label)));\n  })), __jsx(\"ul\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__minor-list\")\n  }, __jsx(\"li\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__minor-list__item\")\n  }, \"Currently / Brooklyn, NYC\"), __jsx(\"li\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__social__minor-list__item\")\n  }, \"Originally / Reno, Nevada\"))), __jsx(\"ul\", {\n    className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list\")\n  }, navItems.map(function (item, idx) {\n    return __jsx(\"li\", {\n      key: idx,\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list__item\")\n    }, __jsx(\"span\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list__item__eyeball\")\n    }, __jsx(InteractiveEyeball, null)), __jsx(\"span\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list__item__overflow-wrapper\")\n    }, __jsx(\"span\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list__item__inner\")\n    }, __jsx(Link, {\n      href: item.href\n    }, __jsx(\"a\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list__item__anchor\"),\n      onClick: function onClick() {\n        return toggleOverlayAndLogotypeExpansion();\n      }\n    }, __jsx(\"span\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list__item__anchor__indicator\")\n    }), __jsx(\"span\", {\n      className: \"\".concat(InteractiveOverlayNavigationClassName, \"__nav-list__item__anchor__label\")\n    }, item.label))))));\n  })))));\n};\n/**\n *\n * @name InteractiveFrameHeaderDisplay\n * @author Peter Laxalt\n *\n */\n\n\nvar InteractiveFrameHeaderDisplay = function InteractiveFrameHeaderDisplay(_ref2) {\n  var isInactive = _ref2.isInactive,\n      isFillBarsExpanded = _ref2.isFillBarsExpanded,\n      isLogotypeExpanded = _ref2.isLogotypeExpanded,\n      isOverlayVisible = _ref2.isOverlayVisible,\n      toggleOverlayAndFillBarsExpansion = _ref2.toggleOverlayAndFillBarsExpansion,\n      toggleOverlayAndLogotypeExpansion = _ref2.toggleOverlayAndLogotypeExpansion,\n      router = _ref2.router;\n  // console.log(router);\n  var hasSidebar = router && router.pathname ? router.pathname.includes(\"sample\") ? true : false : false;\n  return __jsx(React.Fragment, null, __jsx(InteractiveFrameHeaderStyle, {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \" \").concat(InteractiveFrameHeaderClassName, \"--\").concat(isInactive || isOverlayVisible ? \"inactive\" : \"active\", \" \").concat(InteractiveFrameHeaderClassName, \"--\").concat(isFillBarsExpanded || isOverlayVisible ? \"fill-bars-is-expanded\" : \"fill-bars-is-not-expanded\")\n  }, __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__inner\")\n  }, __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame\")\n  }, __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action \").concat(InteractiveFrameHeaderClassName, \"__frame__corner-action--top-left\")\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action__wrapper\")\n  }, __jsx(\"span\", {\n    className: \"icon icon--brandmark\"\n  }, __jsx(\"span\", {\n    className: \"icon--brandmark__el icon__el\"\n  }))))), __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action \").concat(InteractiveFrameHeaderClassName, \"__frame__corner-action--top-right\"),\n    onClick: function onClick() {\n      return toggleOverlayAndFillBarsExpansion();\n    }\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action__wrapper\")\n  }, __jsx(\"span\", {\n    className: \"icon icon--menu\"\n  }, __jsx(\"span\", {\n    className: \"icon--menu__el icon__el\"\n  })))), __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action \").concat(InteractiveFrameHeaderClassName, \"__frame__corner-action--bottom-left\")\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action__wrapper\")\n  }, __jsx(\"span\", {\n    className: \"icon icon--eye\"\n  }, __jsx(\"span\", {\n    className: \"icon--eye__el icon__el\"\n  })))), __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action \").concat(InteractiveFrameHeaderClassName, \"__frame__corner-action--bottom-right\")\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__corner-action__wrapper\")\n  }, __jsx(\"span\", {\n    className: \"icon icon--star\"\n  }, __jsx(\"span\", {\n    className: \"icon--star__el icon__el\"\n  })))), __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__y-axis\")\n  }, __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__edge \").concat(InteractiveFrameHeaderClassName, \"__frame__edge--top\")\n  }, __jsx(FrameItems, null), __jsx(ThemePicker, null)), __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__edge \").concat(InteractiveFrameHeaderClassName, \"__frame__edge--bottom\")\n  }, __jsx(FrameItems, null))), __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__x-axis\")\n  }, __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__edge \").concat(InteractiveFrameHeaderClassName, \"__frame__edge--left\")\n  }, __jsx(FrameItems, null)), __jsx(\"div\", {\n    className: \"\".concat(InteractiveFrameHeaderClassName, \"__frame__edge \").concat(InteractiveFrameHeaderClassName, \"__frame__edge--right\")\n  }, __jsx(FrameItems, null)))))), isOverlayVisible ? __jsx(InteractiveOverlayNavigation, {\n    addClass: \"\".concat(InteractiveOverlayNavigationClassName, \"--\").concat(isOverlayVisible ? \"is-visible\" : \"is-hidden\"),\n    toggleOverlayAndLogotypeExpansion: toggleOverlayAndLogotypeExpansion\n  }) : null, __jsx(InteractiveLogotypeStyle, {\n    className: \"\".concat(InteractiveLogotypeClassName, \" \").concat(InteractiveLogotypeClassName, \"--\").concat(isInactive ? \"inactive\" : \"active\", \" \").concat(InteractiveLogotypeClassName, \"--\").concat(isLogotypeExpanded ? \"is-expanded\" : \"is-not-expanded\", \" \").concat(InteractiveLogotypeClassName, \"--\").concat(isFillBarsExpanded ? \"fill-bars-is-expanded\" : \"fill-bars-is-not-expanded\")\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveLogotypeClassName, \"__inner\")\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveLogotypeClassName, \"__el\"),\n    onClick: function onClick() {\n      return toggleOverlayAndLogotypeExpansion();\n    }\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveLogotypeClassName, \"__el__label\")\n  }, \"LAXALT\")))), __jsx(InteractiveFillBarsStyle, {\n    className: \"\".concat(InteractiveFillBarsClassName, \" \").concat(InteractiveFillBarsClassName, \"--\").concat(isInactive ? \"inactive\" : \"active\", \" \").concat(InteractiveFillBarsClassName, \"--\").concat(isFillBarsExpanded ? \"is-expanded\" : \"is-not-expanded\")\n  }, __jsx(\"span\", {\n    className: \"\".concat(InteractiveFillBarsClassName, \"__fill-bar \").concat(InteractiveFillBarsClassName, \"__fill-bar--top\")\n  }), __jsx(\"span\", {\n    className: \"\".concat(InteractiveFillBarsClassName, \"__fill-bar \").concat(InteractiveFillBarsClassName, \"__fill-bar--right\")\n  }), __jsx(\"span\", {\n    className: \"\".concat(InteractiveFillBarsClassName, \"__fill-bar \").concat(InteractiveFillBarsClassName, \"__fill-bar--bottom\")\n  }), __jsx(\"span\", {\n    className: \"\".concat(InteractiveFillBarsClassName, \"__fill-bar \").concat(InteractiveFillBarsClassName, \"__fill-bar--left\")\n  })), hasSidebar ? __jsx(LayeredSidebar, {\n    addClass: \"\".concat(LayeredSidebarClassName, \"--\").concat(isInactive ? \"frame-inactive\" : \"frame-active\")\n  }) : null);\n}; // End Component\n// ______________________________________________________________________________","map":null,"metadata":{},"sourceType":"module"}