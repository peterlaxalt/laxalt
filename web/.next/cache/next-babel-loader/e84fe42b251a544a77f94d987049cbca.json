{"ast":null,"code":"var _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/_svg/DharmaType/DharmaType.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from \"react\";\nimport { DharmaTypeClassName, DharmaTypeStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaType\n * @author Peter Laxalt\n *\n */\nexport const DharmaType = ({\n  text\n}) => {\n  let characterArray = text.split(\"\");\n  console.log(characterArray);\n  return __jsx(DharmaTypeStyle, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 215.21 173.21\",\n    preserveAspectRatio: \"none\",\n    className: `${DharmaTypeClassName}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n          .${DharmaTypeClassName}__text {\n            font-size: 173.56px;\n            font-family: DharmaGothicC-ExBold, Dharma Gothic C;\n            font-weight: 700;\n            letter-spacing: 0em;\n          }`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), __jsx(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"text\", {\n    className: `${DharmaTypeClassName}__text`,\n    transform: \"translate(0 170.53) scale(1.15, 1.39)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, characterArray.map((char, idx) => {\n    return __jsx(\"tspan\", {\n      key: idx,\n      className: `${DharmaTypeClassName}__text__char`,\n      style: {\n        [`--${DharmaTypeClassName}-key`]: idx\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, char);\n  })))));\n};\n{\n  /* <text\n  className={`${DharmaTypeClassName}__text`}\n  transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n  >\n  {characterArray.map((char: string, idx: number) => {\n    return (\n      <span\n        key={idx}\n        className={`${DharmaTypeClassName}__text__char`}\n        style={{\n          [`--${DharmaTypeClassName}-key` as any]: idx,\n        }}\n      >\n        {char}\n      </span>\n    );\n  })}\n  </text> */\n}\n{\n  /* <g>\n          <text\n            className={`${DharmaTypeClassName}__text`}\n            transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n          >\n            {text}\n          </text>\n        </g> */\n}","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/_svg/DharmaType/DharmaType.tsx"],"names":["React","DharmaTypeClassName","DharmaTypeStyle","DharmaType","text","characterArray","split","console","log","__html","map","char","idx"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,eAArD,C,CAEA;AACA;;AAMA;AACA;;AAEA;;;;;AAKA,OAAO,MAAMC,UAAoD,GAAG,CAAC;AACnEC,EAAAA;AADmE,CAAD,KAE9D;AACJ,MAAIC,cAAc,GAAGD,IAAI,CAACE,KAAL,CAAW,EAAX,CAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEA,SACE,MAAC,eAAD;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,EAAC,mBAFV;AAGE,IAAA,mBAAmB,EAAC,MAHtB;AAIE,IAAA,SAAS,EAAG,GAAEJ,mBAAoB,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,uBAAuB,EAAE;AACvBQ,MAAAA,MAAM,EAAG;aACRR,mBAAoB;;;;;;AAFE,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,GAAEA,mBAAoB,QADpC;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGI,cAAc,CAACK,GAAf,CAAmB,CAACC,IAAD,EAAeC,GAAf,KAA+B;AACjD,WACE;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,SAAS,EAAG,GAAEX,mBAAoB,cAFpC;AAGE,MAAA,KAAK,EAAE;AACL,SAAE,KAAIA,mBAAoB,MAA1B,GAAyCW;AADpC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGD,IAPH,CADF;AAWD,GAZA,CAJH,CADF,CADF,CAnBF,CADF;AA4CD,CAnDM;AAqDP;AACE;;;;;;;;;;;;;;;;;;AAkBD;AAED;AACE;;;;;;;;AAQD","sourcesContent":["// Core\nimport React from \"react\";\nimport { DharmaTypeClassName, DharmaTypeStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_DharmaType = {\n  text: string;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaType\n * @author Peter Laxalt\n *\n */\nexport const DharmaType: React.FunctionComponent<LXLT_DharmaType> = ({\n  text,\n}) => {\n  let characterArray = text.split(\"\");\n\n  console.log(characterArray);\n\n  return (\n    <DharmaTypeStyle\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 215.21 173.21\"\n      preserveAspectRatio=\"none\"\n      className={`${DharmaTypeClassName}`}\n    >\n      <defs>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n          .${DharmaTypeClassName}__text {\n            font-size: 173.56px;\n            font-family: DharmaGothicC-ExBold, Dharma Gothic C;\n            font-weight: 700;\n            letter-spacing: 0em;\n          }`,\n          }}\n        />\n      </defs>\n      <g>\n        <g>\n          <text\n            className={`${DharmaTypeClassName}__text`}\n            transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n          >\n            {characterArray.map((char: string, idx: number) => {\n              return (\n                <tspan\n                  key={idx}\n                  className={`${DharmaTypeClassName}__text__char`}\n                  style={{\n                    [`--${DharmaTypeClassName}-key` as any]: idx,\n                  }}\n                >\n                  {char}\n                </tspan>\n              );\n            })}\n          </text>\n        </g>\n      </g>\n    </DharmaTypeStyle>\n  );\n};\n\n{\n  /* <text\n  className={`${DharmaTypeClassName}__text`}\n  transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n>\n  {characterArray.map((char: string, idx: number) => {\n    return (\n      <span\n        key={idx}\n        className={`${DharmaTypeClassName}__text__char`}\n        style={{\n          [`--${DharmaTypeClassName}-key` as any]: idx,\n        }}\n      >\n        {char}\n      </span>\n    );\n  })}\n</text> */\n}\n\n{\n  /* <g>\n          <text\n            className={`${DharmaTypeClassName}__text`}\n            transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n          >\n            {text}\n          </text>\n        </g> */\n}\n"]},"metadata":{},"sourceType":"module"}