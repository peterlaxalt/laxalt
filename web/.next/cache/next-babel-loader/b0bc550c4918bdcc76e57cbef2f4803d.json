{"ast":null,"code":"/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nexport default (function (W, H, BG) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    var theShader; // _________________________________________________\n    // Preload\n\n    p.preload = function () {\n      theShader = p.loadShader(\"/shaders/shader.vert\", \"/shaders/shader.frag\");\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H, p.WEBGL);\n      p.noStroke();\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      // shader() sets the active shader with our shader\n      p.shader(theShader);\n      theShader.setUniform(\"u_resolution\", [W, H]);\n      theShader.setUniform(\"u_time\", p.millis() / 1000.0);\n      theShader.setUniform(\"u_mouse\", [p.mouseX, p.map(p.mouseY, 0, H, H, 0)]); // rect gives us some geometry on the screen\n\n      p.rect(0, 0, W, H);\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n});","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/glsl.tsx"],"names":["W","H","BG","p","theShader","preload","loadShader","setup","createCanvas","WEBGL","noStroke","draw","shader","setUniform","millis","mouseX","map","mouseY","rect","windowResized","resizeCanvas"],"mappings":"AAAA;;;;;;AASA;AACA;AAEA,gBAAe,UAACA,CAAD,EAAYC,CAAZ,EAAuBC,EAAvB;AAAA,SAAsC,UAACC,CAAD,EAAW;AAC9D;AACA;AACA,QAAIC,SAAJ,CAH8D,CAK9D;AACA;;AACAD,IAAAA,CAAC,CAACE,OAAF,GAAY,YAAM;AAChBD,MAAAA,SAAS,GAAGD,CAAC,CAACG,UAAF,CAAa,sBAAb,EAAqC,sBAArC,CAAZ;AACD,KAFD,CAP8D,CAW9D;AACA;;;AACAH,IAAAA,CAAC,CAACI,KAAF,GAAU,YAAM;AACd;AACAJ,MAAAA,CAAC,CAACK,YAAF,CAAeR,CAAf,EAAkBC,CAAlB,EAAqBE,CAAC,CAACM,KAAvB;AACAN,MAAAA,CAAC,CAACO,QAAF;AACD,KAJD,CAb8D,CAmB9D;AACA;;;AACAP,IAAAA,CAAC,CAACQ,IAAF,GAAS,YAAM;AACb;AACAR,MAAAA,CAAC,CAACS,MAAF,CAASR,SAAT;AAEAA,MAAAA,SAAS,CAACS,UAAV,CAAqB,cAArB,EAAqC,CAACb,CAAD,EAAIC,CAAJ,CAArC;AACAG,MAAAA,SAAS,CAACS,UAAV,CAAqB,QAArB,EAA+BV,CAAC,CAACW,MAAF,KAAa,MAA5C;AACAV,MAAAA,SAAS,CAACS,UAAV,CAAqB,SAArB,EAAgC,CAACV,CAAC,CAACY,MAAH,EAAWZ,CAAC,CAACa,GAAF,CAAMb,CAAC,CAACc,MAAR,EAAgB,CAAhB,EAAmBhB,CAAnB,EAAsBA,CAAtB,EAAyB,CAAzB,CAAX,CAAhC,EANa,CAQb;;AACAE,MAAAA,CAAC,CAACe,IAAF,CAAO,CAAP,EAAU,CAAV,EAAalB,CAAb,EAAgBC,CAAhB;AACD,KAVD;;AAYAE,IAAAA,CAAC,CAACgB,aAAF,GAAkB,YAAM;AACtBhB,MAAAA,CAAC,CAACiB,YAAF,CAAepB,CAAf,EAAkBC,CAAlB;AACD,KAFD;AAGD,GApCc;AAAA,CAAf","sourcesContent":["/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5, { Shader } from \"p5\";\n\n// Begin Component\n// __________________________________________________________________________\n\nexport default (W: number, H: number, BG: string) => (p: p5) => {\n  // _________________________________________________\n  // Config\n  let theShader: Shader;\n\n  // _________________________________________________\n  // Preload\n  p.preload = () => {\n    theShader = p.loadShader(\"/shaders/shader.vert\", \"/shaders/shader.frag\");\n  };\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.noStroke();\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    // shader() sets the active shader with our shader\n    p.shader(theShader);\n\n    theShader.setUniform(\"u_resolution\", [W, H]);\n    theShader.setUniform(\"u_time\", p.millis() / 1000.0);\n    theShader.setUniform(\"u_mouse\", [p.mouseX, p.map(p.mouseY, 0, H, H, 0)]);\n\n    // rect gives us some geometry on the screen\n    p.rect(0, 0, W, H);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}