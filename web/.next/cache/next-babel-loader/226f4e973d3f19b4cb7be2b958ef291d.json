{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// Core\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { SiteProjects } from \"../../../constants/site/Settings\";\nimport { isVisible } from \"../../../utils/isVisible\"; // Components\n// Styles\n\nimport { ProjectScrollSectionClassName, ProjectScrollSectionGlobalStyles, ProjectScrollSectionStyle, ScrollCardClassName, ScrollCardStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nvar lastTranslateX = 0;\nexport var ScrollCard = function ScrollCard(_ref) {\n  _s();\n\n  var item = _ref.item,\n      count = _ref.count,\n      total = _ref.total;\n  var cover = item.cover;\n  var ScrollCardRef = useRef();\n  var isCurrentlyVisible = isVisible(ScrollCardRef);\n  return /*#__PURE__*/_jsxDEV(ScrollCardStyle, {\n    ref: ScrollCardRef,\n    className: \"\".concat(ScrollCardClassName, \" \").concat(ScrollCardClassName, \"--\").concat(isCurrentlyVisible ? \"is-visible\" : \"is-not-visible\"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(ScrollCardClassName, \"__inner\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(ScrollCardClassName, \"__row \").concat(ScrollCardClassName, \"__row--top\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ScrollCardClassName, \"__col \").concat(ScrollCardClassName, \"__col--top-left\"),\n          children: [\"No \", count, \" / \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ScrollCardClassName, \"__col \").concat(ScrollCardClassName, \"__col--top-right\"),\n          children: item.duration && item.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(ScrollCardClassName, \"__row \").concat(ScrollCardClassName, \"__row--center\"),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ScrollCardClassName, \"__image-wrapper\"),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"\".concat(ScrollCardClassName, \"__image \").concat(ScrollCardClassName, \"__image--filtered\"),\n            src: cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"\".concat(ScrollCardClassName, \"__image \").concat(ScrollCardClassName, \"__image--normal\"),\n            src: cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(ScrollCardClassName, \"__row \").concat(ScrollCardClassName, \"__row--bottom\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ScrollCardClassName, \"__col \").concat(ScrollCardClassName, \"__col--bottom-left\"),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"\".concat(ScrollCardClassName, \"__col__content-row \").concat(ScrollCardClassName, \"__col__content-row--content-major\"),\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\".concat(ScrollCardClassName, \"__col__content-row \").concat(ScrollCardClassName, \"__col__content-row--content-minor \").concat(ScrollCardClassName, \"__col__content-row--tag-list\"),\n            children: item.categories.map(function (category, idx) {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [category.name, \" \", idx + 1 !== item.categories.length ? \"/\" + \" \" : \"\"]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ScrollCardClassName, \"__col \").concat(ScrollCardClassName, \"__col--bottom-right\"),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\".concat(ScrollCardClassName, \"__col__content-row \").concat(ScrollCardClassName, \"__col__content-row--content-major\"),\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\".concat(ScrollCardClassName, \"__col__content-row \").concat(ScrollCardClassName, \"__col__content-row--content-minor\"),\n            children: item.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ScrollCard, \"MO9uDbVyIgkmEA6g/Ei3Xk5Ux5I=\");\n\n_c = ScrollCard;\nexport var ProjectScrollSection = function ProjectScrollSection(_ref2) {\n  _s2();\n\n  var _ref2$addClass = _ref2.addClass,\n      addClass = _ref2$addClass === void 0 ? \"\" : _ref2$addClass;\n\n  var _useState = useState(null),\n      dynamicHeight = _useState[0],\n      setDynamicHeight = _useState[1];\n\n  var _useState2 = useState(0),\n      translateX = _useState2[0],\n      setTranslateX = _useState2[1];\n\n  var _useState3 = useState(false),\n      dharmaPaused = _useState3[0],\n      setDharmaPaused = _useState3[1];\n\n  var containerRef = React.useRef();\n  var objectRef = React.useRef();\n  var windowSize = 0;\n\n  var calcDynamicHeight = function calcDynamicHeight(objectWidth) {\n    var vw = window.innerWidth;\n    var vh = window.innerHeight;\n    return objectWidth - vw + vh + 300;\n  };\n\n  var handleDynamicHeight = function handleDynamicHeight(ref, setDynamicHeight) {\n    var objectWidth = ref.current.scrollWidth;\n    var dynamicHeight = calcDynamicHeight(objectWidth);\n    setDynamicHeight(dynamicHeight);\n  };\n\n  var applyScrollListener = function applyScrollListener(ref, setTranslateX) {\n    window.addEventListener(\"scroll\", function () {\n      var offsetTop = ref && ref.current ? -ref.current.offsetTop : 0;\n      setTranslateX(offsetTop);\n      console.log(windowSize);\n    });\n  };\n\n  var resizeHandler = function resizeHandler() {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n  };\n\n  useEffect(function () {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX);\n    windowSize = window.innerWidth;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectScrollSectionGlobalStyles, {\n      isScrolled: translateX < windowSize / -2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ProjectScrollSectionStyle, {\n      className: \"\".concat(ProjectScrollSectionClassName, \" \").concat(ProjectScrollSectionClassName, \"--\").concat(translateX < -10 ? \"is-scrolled\" : \"is-not-scrolled\", \" \").concat(ProjectScrollSectionClassName, \"--\").concat(translateX > lastTranslateX ? \"is-at-end\" : \"is-not-at-end\", \" \").concat(addClass && addClass),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(ProjectScrollSectionClassName, \"__outer\"),\n        style: {\n          height: \"\".concat(dynamicHeight, \"px\")\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\".concat(ProjectScrollSectionClassName, \"__sticky-wrapper\"),\n          ref: containerRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\".concat(ProjectScrollSectionClassName, \"__x-translate-wrapper\"),\n            style: {\n              transform: \"translate3d(\".concat(translateX, \"px, 0px, 0px)\")\n            },\n            ref: objectRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\".concat(ProjectScrollSectionClassName, \"__horizontal-wrapper\"),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\".concat(ProjectScrollSectionClassName, \"__content-wrapper\"),\n                children: SiteProjects.map(function (item, idx) {\n                  return /*#__PURE__*/_jsxDEV(ScrollCard, {\n                    count: idx + 1,\n                    total: SiteProjects.length,\n                    item: item\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}; // End Component\n// ______________________________________________________________________________\n\n_s2(ProjectScrollSection, \"K6t2vU2uDo07rZr84gfuNzaFbTI=\");\n\n_c2 = ProjectScrollSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ScrollCard\");\n$RefreshReg$(_c2, \"ProjectScrollSection\");","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx"],"names":["React","useEffect","useRef","useState","SiteProjects","isVisible","ProjectScrollSectionClassName","ProjectScrollSectionGlobalStyles","ProjectScrollSectionStyle","ScrollCardClassName","ScrollCardStyle","lastTranslateX","ScrollCard","item","count","total","cover","ScrollCardRef","isCurrentlyVisible","duration","name","categories","map","category","idx","length","type","location","ProjectScrollSection","addClass","dynamicHeight","setDynamicHeight","translateX","setTranslateX","dharmaPaused","setDharmaPaused","containerRef","objectRef","windowSize","calcDynamicHeight","objectWidth","vw","window","innerWidth","vh","innerHeight","handleDynamicHeight","ref","current","scrollWidth","applyScrollListener","addEventListener","offsetTop","console","log","resizeHandler","height","transform"],"mappings":"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","sourcesContent":["// Core\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  LXLT_Category,\n  LXLT_Project,\n  SiteProjects,\n} from \"../../../constants/site/Settings\";\nimport { Theme } from \"../../../constants/Theme\";\nimport { isVisible } from \"../../../utils/isVisible\";\n\n// Components\n\n// Styles\nimport {\n  ProjectScrollSectionClassName,\n  ProjectScrollSectionGlobalStyles,\n  ProjectScrollSectionStyle,\n  ScrollCardClassName,\n  ScrollCardStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_ProjectScrollSection = {\n  addClass?: string;\n};\n\nexport type LXLT_ScrollCard = {\n  item: LXLT_Project;\n  count?: number;\n  total?: number;\n};\n\ndeclare global {\n  interface Window {\n    dharmaPaused: boolean;\n  }\n}\n\n// Begin Component\n// __________________________________________________________________________________________\n\nlet lastTranslateX: number = 0;\n\nexport const ScrollCard: React.FunctionComponent<LXLT_ScrollCard> = ({\n  item,\n  count,\n  total,\n}) => {\n  let { cover } = item;\n  const ScrollCardRef = useRef<HTMLDivElement>();\n  const isCurrentlyVisible = isVisible(ScrollCardRef);\n\n  return (\n    <ScrollCardStyle\n      ref={ScrollCardRef}\n      className={`${ScrollCardClassName} ${ScrollCardClassName}--${\n        isCurrentlyVisible ? `is-visible` : `is-not-visible`\n      }`}\n    >\n      <div className={`${ScrollCardClassName}__inner`}>\n        {/* ____________________________________________________________________ */}\n        {/* Card top */}\n        <div\n          className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--top`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Card top left col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-left`}\n          >\n            No {count} / {total}\n          </div>\n\n          {/* ____________________________________________________________________ */}\n          {/* Card top right col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-right`}\n          >\n            {item.duration && item.duration}\n          </div>\n        </div>\n\n        {/* ____________________________________________________________________ */}\n        {/* Card center */}\n        <div\n          className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--center`}\n        >\n          <div className={`${ScrollCardClassName}__image-wrapper`}>\n            <img\n              className={`${ScrollCardClassName}__image ${ScrollCardClassName}__image--filtered`}\n              src={cover}\n            />\n            <img\n              className={`${ScrollCardClassName}__image ${ScrollCardClassName}__image--normal`}\n              src={cover}\n            />\n          </div>\n        </div>\n\n        {/* ____________________________________________________________________ */}\n        {/* Card bottom */}\n        <div\n          className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--bottom`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Card bottom left col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-left`}\n          >\n            <strong\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`}\n            >\n              {item.name}\n            </strong>\n            <span\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor ${ScrollCardClassName}__col__content-row--tag-list`}\n            >\n              {item.categories.map((category: LXLT_Category, idx: number) => {\n                return (\n                  <span key={idx}>\n                    {category.name}{\" \"}\n                    {idx + 1 !== item.categories.length ? \"/\" + \" \" : \"\"}\n                  </span>\n                );\n              })}\n            </span>\n          </div>\n\n          {/* ____________________________________________________________________ */}\n          {/* Card bottom right col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-right`}\n          >\n            <span\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`}\n            >\n              {item.type}\n            </span>\n            <span\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor`}\n            >\n              {item.location}\n            </span>\n          </div>\n        </div>\n      </div>\n    </ScrollCardStyle>\n  );\n};\n\nexport const ProjectScrollSection: React.FunctionComponent<LXLT_ProjectScrollSection> = ({\n  addClass = \"\",\n}) => {\n  const [dynamicHeight, setDynamicHeight] = useState(null);\n  const [translateX, setTranslateX] = useState(0);\n  const [dharmaPaused, setDharmaPaused] = useState(false);\n\n  const containerRef = React.useRef<HTMLDivElement>();\n  const objectRef = React.useRef<HTMLDivElement>();\n\n  let windowSize: number = 0;\n\n  const calcDynamicHeight = (objectWidth: number) => {\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    return objectWidth - vw + vh + 300;\n  };\n\n  const handleDynamicHeight = (\n    ref: React.RefObject<HTMLDivElement>,\n    setDynamicHeight: (dynamicHeight: number) => void\n  ) => {\n    const objectWidth: number = ref.current.scrollWidth;\n    const dynamicHeight: number = calcDynamicHeight(objectWidth);\n    setDynamicHeight(dynamicHeight);\n  };\n\n  const applyScrollListener = (\n    ref: React.RefObject<HTMLDivElement>,\n    setTranslateX: (translateX: number) => void\n  ) => {\n    window.addEventListener(\"scroll\", () => {\n      const offsetTop: number = ref && ref.current ? -ref.current.offsetTop : 0;\n\n      setTranslateX(offsetTop);\n\n      console.log(windowSize);\n    });\n  };\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX);\n\n    windowSize = window.innerWidth;\n  }, []);\n\n  return (\n    <>\n      <ProjectScrollSectionGlobalStyles\n        isScrolled={translateX < windowSize / -2}\n      />\n      <ProjectScrollSectionStyle\n        className={`${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${\n          translateX < -10 ? `is-scrolled` : `is-not-scrolled`\n        } ${ProjectScrollSectionClassName}--${\n          translateX > lastTranslateX ? `is-at-end` : `is-not-at-end`\n        } ${addClass && addClass}`}\n      >\n        {/* ____________________________________________________________________ */}\n        {/* Outer Container with Dynamic Height */}\n        <div\n          className={`${ProjectScrollSectionClassName}__outer`}\n          style={{ height: `${dynamicHeight}px` }}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Sticky Wrapper */}\n          <div\n            className={`${ProjectScrollSectionClassName}__sticky-wrapper`}\n            ref={containerRef}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Translation Wrapper */}\n            <div\n              className={`${ProjectScrollSectionClassName}__x-translate-wrapper`}\n              style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n              ref={objectRef}\n            >\n              {/* ____________________________________________________________________ */}\n              {/* Horizontal Wrapper */}\n              <div\n                className={`${ProjectScrollSectionClassName}__horizontal-wrapper`}\n              >\n                {/* ____________________________________________________________________ */}\n                {/* Content Wrapper */}\n                <div\n                  className={`${ProjectScrollSectionClassName}__content-wrapper`}\n                >\n                  {SiteProjects.map((item: LXLT_Project, idx: number) => {\n                    return (\n                      <ScrollCard\n                        key={idx}\n                        count={idx + 1}\n                        total={SiteProjects.length}\n                        item={item}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ProjectScrollSectionStyle>\n    </>\n  );\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}