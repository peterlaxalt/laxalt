{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/_svg/DharmaType/DharmaType.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from \"react\";\nimport { DharmaTypeClassName, DharmaTypeStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaType\n * @author Peter Laxalt\n *\n */\nexport var DharmaType = function DharmaType(_ref) {\n  var text = _ref.text;\n  var characterArray = text.split(\"\");\n  var characterCount = characterArray.length;\n  var viewBoxHeight = 173.21;\n  var viewBoxWidth = 215.21;\n  console.log(\"characterArray / \", characterArray);\n  console.log(\"characterCount / \", characterCount);\n  return __jsx(DharmaTypeStyle, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 \".concat(viewBoxWidth, \" \").concat(viewBoxHeight),\n    preserveAspectRatio: \"none\",\n    className: \"\".concat(DharmaTypeClassName),\n    style: _defineProperty({}, \"--\".concat(DharmaTypeClassName, \"-font-size\"), \"\".concat(viewBoxHeight, \"px\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, characterArray.map(function (_char, idx) {\n    return __jsx(\"text\", {\n      className: \"\".concat(DharmaTypeClassName, \"__text\"),\n      transform: \"translate(0 170.53) scale(1.13, 1.38)\",\n      style: _defineProperty({}, \"--\".concat(DharmaTypeClassName, \"-key\"), idx),\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"tspan\", {\n      className: \"\".concat(DharmaTypeClassName, \"__text__char\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, _char));\n  }))));\n};\n{\n  /* <text\n  className={`${DharmaTypeClassName}__text`}\n  transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n  >\n  {characterArray.map((char: string, idx: number) => {\n    return (\n      <span\n        key={idx}\n        className={`${DharmaTypeClassName}__text__char`}\n        style={{\n          [`--${DharmaTypeClassName}-key` as any]: idx,\n        }}\n      >\n        {char}\n      </span>\n    );\n  })}\n  </text> */\n}\n{\n  /* <g>\n          <text\n            className={`${DharmaTypeClassName}__text`}\n            transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n          >\n            {text}\n          </text>\n        </g> */\n}","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/_svg/DharmaType/DharmaType.tsx"],"names":["React","DharmaTypeClassName","DharmaTypeStyle","DharmaType","text","characterArray","split","characterCount","length","viewBoxHeight","viewBoxWidth","console","log","map","char","idx"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,eAArD,C,CAEA;AACA;;AAMA;AACA;;AAEA;;;;;AAKA,OAAO,IAAMC,UAAoD,GAAG,SAAvDA,UAAuD,OAE9D;AAAA,MADJC,IACI,QADJA,IACI;AACJ,MAAIC,cAAc,GAAGD,IAAI,CAACE,KAAL,CAAW,EAAX,CAArB;AACA,MAAIC,cAAc,GAAGF,cAAc,CAACG,MAApC;AAEA,MAAIC,aAAa,GAAG,MAApB;AACA,MAAIC,YAAY,GAAG,MAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCP,cAAjC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,cAAjC;AAEA,SACE,MAAC,eAAD;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,gBAASG,YAAT,cAAyBD,aAAzB,CAFT;AAGE,IAAA,mBAAmB,EAAC,MAHtB;AAIE,IAAA,SAAS,YAAKR,mBAAL,CAJX;AAKE,IAAA,KAAK,kCACGA,mBADH,2BAC+CQ,aAD/C,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,cAAc,CAACQ,GAAf,CAAmB,UAACC,KAAD,EAAeC,GAAf,EAA+B;AACjD,WACE;AACE,MAAA,SAAS,YAAKd,mBAAL,WADX;AAEE,MAAA,SAAS,EAAC,uCAFZ;AAGE,MAAA,KAAK,kCACGA,mBADH,WACsCc,GADtC,CAHP;AAME,MAAA,GAAG,EAAEA,GANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAO,MAAA,SAAS,YAAKd,mBAAL,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,KADH,CARF,CADF;AAcD,GAfA,CADH,CADF,CATF,CADF;AAgCD,CA5CM;AA8CP;AACE;;;;;;;;;;;;;;;;;;AAkBD;AAED;AACE;;;;;;;;AAQD","sourcesContent":["// Core\nimport React from \"react\";\nimport { DharmaTypeClassName, DharmaTypeStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_DharmaType = {\n  text: string;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaType\n * @author Peter Laxalt\n *\n */\nexport const DharmaType: React.FunctionComponent<LXLT_DharmaType> = ({\n  text,\n}) => {\n  let characterArray = text.split(\"\");\n  let characterCount = characterArray.length;\n\n  let viewBoxHeight = 173.21;\n  let viewBoxWidth = 215.21;\n\n  console.log(\"characterArray / \", characterArray);\n  console.log(\"characterCount / \", characterCount);\n\n  return (\n    <DharmaTypeStyle\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n      preserveAspectRatio=\"none\"\n      className={`${DharmaTypeClassName}`}\n      style={{\n        [`--${DharmaTypeClassName}-font-size` as any]: `${viewBoxHeight}px`,\n      }}\n    >\n      <g>\n        <g>\n          {characterArray.map((char: string, idx: number) => {\n            return (\n              <text\n                className={`${DharmaTypeClassName}__text`}\n                transform=\"translate(0 170.53) scale(1.13, 1.38)\"\n                style={{\n                  [`--${DharmaTypeClassName}-key` as any]: idx,\n                }}\n                key={idx}\n              >\n                <tspan className={`${DharmaTypeClassName}__text__char`}>\n                  {char}\n                </tspan>\n              </text>\n            );\n          })}\n        </g>\n      </g>\n    </DharmaTypeStyle>\n  );\n};\n\n{\n  /* <text\n  className={`${DharmaTypeClassName}__text`}\n  transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n>\n  {characterArray.map((char: string, idx: number) => {\n    return (\n      <span\n        key={idx}\n        className={`${DharmaTypeClassName}__text__char`}\n        style={{\n          [`--${DharmaTypeClassName}-key` as any]: idx,\n        }}\n      >\n        {char}\n      </span>\n    );\n  })}\n</text> */\n}\n\n{\n  /* <g>\n          <text\n            className={`${DharmaTypeClassName}__text`}\n            transform=\"translate(0 170.53) scale(1.15, 1.39)\"\n          >\n            {text}\n          </text>\n        </g> */\n}\n"]},"metadata":{},"sourceType":"module"}