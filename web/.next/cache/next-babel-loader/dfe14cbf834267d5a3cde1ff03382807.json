{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/_interactive/DharmaCounter/DharmaCounter.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from \"react\";\nimport { DharmaTypeClassName, DharmaTypeStyle } from \"../../_svg/DharmaType/styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaCounter\n * @author Peter Laxalt\n *\n */\nexport var DharmaCounter = function DharmaCounter(_ref) {\n  var text = _ref.text;\n  var viewBoxHeight = 173.21;\n  var viewBoxWidth = 215.21;\n  var characterArray = text.split(\"\");\n  var characterCount = characterArray.length;\n  var characterWidth = viewBoxWidth / characterCount;\n  console.log(\"characterArray / \", characterArray);\n  console.log(\"characterCount / \", characterCount);\n  return __jsx(DharmaTypeStyle, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 \".concat(viewBoxWidth, \" \").concat(viewBoxHeight),\n    preserveAspectRatio: \"none\",\n    className: \"\".concat(DharmaTypeClassName, \" \").concat(DharmaTypeClassName, \"--couter\"),\n    style: _defineProperty({}, \"--\".concat(DharmaTypeClassName, \"-font-size\"), \"\".concat(viewBoxHeight, \"px\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, characterArray.map(function (_char, idx) {\n    return __jsx(\"g\", {\n      className: \"\".concat(DharmaTypeClassName, \"__character-wrapper\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"text\", {\n      className: \"\".concat(DharmaTypeClassName, \"__character\"),\n      transform: \"translate(\".concat(characterWidth * idx, \" 170.53) scale(1.13, 1.38)\"),\n      style: _defineProperty({}, \"--\".concat(DharmaTypeClassName, \"-key\"), idx),\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"tspan\", {\n      className: \"\".concat(DharmaTypeClassName, \"__letter\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, _char)));\n  })));\n};","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/_interactive/DharmaCounter/DharmaCounter.tsx"],"names":["React","DharmaTypeClassName","DharmaTypeStyle","DharmaCounter","text","viewBoxHeight","viewBoxWidth","characterArray","split","characterCount","length","characterWidth","console","log","map","char","idx"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,eAFF,QAGO,mCAHP,C,CAKA;AACA;;AAMA;AACA;;AAEA;;;;;AAKA,OAAO,IAAMC,aAA0D,GAAG,SAA7DA,aAA6D,OAEpE;AAAA,MADJC,IACI,QADJA,IACI;AACJ,MAAIC,aAAa,GAAG,MAApB;AACA,MAAIC,YAAY,GAAG,MAAnB;AAEA,MAAIC,cAAc,GAAGH,IAAI,CAACI,KAAL,CAAW,EAAX,CAArB;AACA,MAAIC,cAAc,GAAGF,cAAc,CAACG,MAApC;AACA,MAAIC,cAAc,GAAGL,YAAY,GAAGG,cAApC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,cAAjC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,cAAjC;AAEA,SACE,MAAC,eAAD;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,gBAASH,YAAT,cAAyBD,aAAzB,CAFT;AAGE,IAAA,mBAAmB,EAAC,MAHtB;AAIE,IAAA,SAAS,YAAKJ,mBAAL,cAA4BA,mBAA5B,aAJX;AAKE,IAAA,KAAK,kCACGA,mBADH,2BAC+CI,aAD/C,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,CAACO,GAAf,CAAmB,UAACC,KAAD,EAAeC,GAAf,EAA+B;AACjD,WACE;AAAG,MAAA,SAAS,YAAKf,mBAAL,wBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,YAAKA,mBAAL,gBADX;AAEE,MAAA,SAAS,sBACPU,cAAc,GAAGK,GADV,+BAFX;AAKE,MAAA,KAAK,kCACGf,mBADH,WACsCe,GADtC,CALP;AAQE,MAAA,GAAG,EAAEA,GARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE;AAAO,MAAA,SAAS,YAAKf,mBAAL,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,KADH,CAVF,CADF,CADF;AAkBD,GAnBA,CADH,CATF,CADF;AAkCD,CA/CM","sourcesContent":["// Core\nimport React from \"react\";\nimport {\n  DharmaTypeClassName,\n  DharmaTypeStyle,\n} from \"../../_svg/DharmaType/styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_DharmaCounter = {\n  text: string;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaCounter\n * @author Peter Laxalt\n *\n */\nexport const DharmaCounter: React.FunctionComponent<LXLT_DharmaCounter> = ({\n  text,\n}) => {\n  let viewBoxHeight = 173.21;\n  let viewBoxWidth = 215.21;\n\n  let characterArray = text.split(\"\");\n  let characterCount = characterArray.length;\n  let characterWidth = viewBoxWidth / characterCount;\n\n  console.log(\"characterArray / \", characterArray);\n  console.log(\"characterCount / \", characterCount);\n\n  return (\n    <DharmaTypeStyle\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n      preserveAspectRatio=\"none\"\n      className={`${DharmaTypeClassName} ${DharmaTypeClassName}--couter`}\n      style={{\n        [`--${DharmaTypeClassName}-font-size` as any]: `${viewBoxHeight}px`,\n      }}\n    >\n      <g>\n        {characterArray.map((char: string, idx: number) => {\n          return (\n            <g className={`${DharmaTypeClassName}__character-wrapper`}>\n              <text\n                className={`${DharmaTypeClassName}__character`}\n                transform={`translate(${\n                  characterWidth * idx\n                } 170.53) scale(1.13, 1.38)`}\n                style={{\n                  [`--${DharmaTypeClassName}-key` as any]: idx,\n                }}\n                key={idx}\n              >\n                <tspan className={`${DharmaTypeClassName}__letter`}>\n                  {char}\n                </tspan>\n              </text>\n            </g>\n          );\n        })}\n      </g>\n    </DharmaTypeStyle>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}