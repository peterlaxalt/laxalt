{"ast":null,"code":"var _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// /pages/_app_.js\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { ColorContext, useColorContext } from \"../constants/styles/Color\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const colorTheme = useColorContext(); // Render our App\n\n  return __jsx(ColorContext.Provider, {\n    value: colorTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/pages/_app.tsx"],"names":["React","Layout","ColorContext","useColorContext","MyApp","Component","pageProps","colorTheme"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,2BAA9C,C,CAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAmD;AAC/D,QAAMC,UAAU,GAAGJ,eAAe,EAAlC,CAD+D,CAG/D;;AACA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEI,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,eAAYD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CAXD;;AAaA,eAAeF,KAAf","sourcesContent":["// /pages/_app_.js\nimport React from \"react\";\nimport { AppProps } from \"next/app\";\nimport { Layout } from \"../components/Layout\";\nimport { ColorContext, useColorContext } from \"../constants/styles/Color\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LMNTS_CustomAppData = AppProps & {};\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\n\nconst MyApp = ({ Component, pageProps }: LMNTS_CustomAppData) => {\n  const colorTheme = useColorContext();\n\n  // Render our App\n  return (\n    <ColorContext.Provider value={colorTheme}>\n      <Layout {...pageProps}>\n        <Component {...pageProps} />\n      </Layout>\n    </ColorContext.Provider>\n  );\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}