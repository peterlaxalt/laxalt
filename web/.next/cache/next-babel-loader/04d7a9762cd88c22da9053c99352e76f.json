{"ast":null,"code":"/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nconst Dharma_Canvas = (W, H, ID, BG) => p => {\n  // _________________________________________________\n  // Config\n  let color = {\n    primary: \"black\",\n    primaryAlpha: \"black\",\n    secondary: \"#000000\",\n    bg: \"cyan\",\n    white: \"#ffffff\"\n  }; // _________________________________________________\n  // Preload\n  // _________________________________________________\n  // Setup\n\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.noStroke();\n  }; // _________________________________________________\n  // Draw\n\n\n  p.draw = () => {\n    // rect gives us some geometry on the screen\n    p.background(BG);\n    p.fill(255, 255, 255);\n    p.text(\"Testing\", 0, 0);\n    p.fill(255, 255, 255);\n    p.rect(W / 2, H / 2, W, H);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default Dharma_Canvas;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/dharma.tsx"],"names":["Dharma_Canvas","W","H","ID","BG","p","color","primary","primaryAlpha","secondary","bg","white","setup","createCanvas","WEBGL","noStroke","draw","background","fill","text","rect","windowResized","resizeCanvas"],"mappings":"AAAA;;;;;;AASA;AACA;AASA,MAAMA,aAAiC,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,EAAP,EAAWC,EAAX,KAAmBC,CAAD,IAAW;AACrE;AACA;AACA,MAAIC,KAAK,GAAG;AACVC,IAAAA,OAAO,EAAE,OADC;AAEVC,IAAAA,YAAY,EAAE,OAFJ;AAGVC,IAAAA,SAAS,EAAE,SAHD;AAIVC,IAAAA,EAAE,EAAE,MAJM;AAKVC,IAAAA,KAAK,EAAE;AALG,GAAZ,CAHqE,CAWrE;AACA;AAEA;AACA;;AACAN,EAAAA,CAAC,CAACO,KAAF,GAAU,MAAM;AACd;AACAP,IAAAA,CAAC,CAACQ,YAAF,CAAeZ,CAAf,EAAkBC,CAAlB,EAAqBG,CAAC,CAACS,KAAvB;AACAT,IAAAA,CAAC,CAACU,QAAF;AACD,GAJD,CAhBqE,CAsBrE;AACA;;;AACAV,EAAAA,CAAC,CAACW,IAAF,GAAS,MAAM;AACb;AAEAX,IAAAA,CAAC,CAACY,UAAF,CAAab,EAAb;AACAC,IAAAA,CAAC,CAACa,IAAF,CAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB;AACAb,IAAAA,CAAC,CAACc,IAAF,CAAO,SAAP,EAAkB,CAAlB,EAAqB,CAArB;AAEAd,IAAAA,CAAC,CAACa,IAAF,CAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB;AACAb,IAAAA,CAAC,CAACe,IAAF,CAAOnB,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAG,CAAlB,EAAqBD,CAArB,EAAwBC,CAAxB;AACD,GATD;;AAWAG,EAAAA,CAAC,CAACgB,aAAF,GAAkB,MAAM;AACtBhB,IAAAA,CAAC,CAACiB,YAAF,CAAerB,CAAf,EAAkBC,CAAlB;AACD,GAFD;AAGD,CAtCD;;AAwCA,eAAeF,aAAf","sourcesContent":["/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5 from \"p5\";\n\n// Begin Component\n// __________________________________________________________________________\n\nexport type LXLT_Dharma_Canvas = (\n  W: number,\n  H: number,\n  ID: number,\n  BG: string\n) => (p: p5) => void;\n\nconst Dharma_Canvas: LXLT_Dharma_Canvas = (W, H, ID, BG) => (p: p5) => {\n  // _________________________________________________\n  // Config\n  let color = {\n    primary: \"black\",\n    primaryAlpha: \"black\",\n    secondary: \"#000000\",\n    bg: \"cyan\",\n    white: \"#ffffff\",\n  };\n\n  // _________________________________________________\n  // Preload\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.noStroke();\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    // rect gives us some geometry on the screen\n\n    p.background(BG);\n    p.fill(255, 255, 255);\n    p.text(\"Testing\", 0, 0);\n\n    p.fill(255, 255, 255);\n    p.rect(W / 2, H / 2, W, H);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default Dharma_Canvas;\n"]},"metadata":{},"sourceType":"module"}