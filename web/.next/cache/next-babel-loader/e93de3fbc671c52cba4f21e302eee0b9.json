{"ast":null,"code":"var _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/pages/projects/three-with-canvas-texture.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { FadeIn } from \"../../constants/styles/Animation\";\nimport { InteractiveFrameHeader } from \"../../components/_interactive/InteractiveFrameHeader\";\nimport { ColorContext } from \"../../constants/styles/Color\";\nimport dynamic from \"next/dynamic\"; // ______________________________________________________________\n\nconst P5Wrapper = dynamic(() => import(\"react-p5-wrapper\"), {\n  loading: () => __jsx(React.Fragment, null),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-p5-wrapper\")],\n    modules: [\"react-p5-wrapper\"]\n  }\n});\n\nclass ThreePageWithContext extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"threeRootElement\", void 0);\n\n    _defineProperty(this, \"renderP5\", filename => {\n      const sketch = require(`../../sketches/p5/${filename}`).default(this.state.windowWidth, this.state.windowHeight, 1, this.props.colorThemeContext);\n\n      return __jsx(P5Wrapper, {\n        sketch: sketch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 12\n        }\n      });\n    });\n\n    this.state = {\n      domLoaded: false,\n      windowWidth: 0,\n      windowHeight: 0,\n      canvasElement: undefined,\n      canvasTheme: undefined\n    };\n    this.checkForCanvas = this.checkForCanvas.bind(this);\n    this.initializeThree = this.initializeThree.bind(this);\n  }\n\n  componentDidMount() {\n    if (\"undefined\") {\n      this.setState({\n        windowWidth: window.innerWidth - 80,\n        windowHeight: window.innerHeight - 80,\n        domLoaded: true,\n        canvasElement: undefined,\n        canvasTheme: this.props.colorThemeContext\n      });\n      setTimeout(this.checkForCanvas, 100);\n    }\n  }\n\n  checkForCanvas() {\n    const canvas = document.getElementById(\"defaultCanvas0\");\n\n    if (canvas) {\n      console.log(\"canvas found:\", canvas);\n      this.setState({\n        canvasElement: undefined\n      });\n      this.initializeThree();\n    } else {\n      console.log(\"canvas not found, trying again in 100ms:\", canvas);\n      setTimeout(this.checkForCanvas, 100);\n    }\n  }\n\n  initializeThree() {\n    // ThreeCanvas(this.threeRootElement.el, this.props.colorThemeContext);\n    console.log(\"three initialization enqueued:\", this.state.canvasElement);\n    return;\n  }\n\n  render() {\n    const ThreePageGlobalStyles = createGlobalStyle`\n      body, html {\n        overflow: hidden;\n      }\n\n      .three-container {\n        width: 100vw;\n        height: 100vh;\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        #p5_loading {\n          display: none !important;\n        }\n      }\n\n      canvas {\n        animation: ${FadeIn} 1s ease 1;\n        animation-fill-mode: forwards;\n        animation-iteration-count: 1;\n      }\n    `;\n    return __jsx(React.Fragment, null, __jsx(ThreePageGlobalStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }), __jsx(InteractiveFrameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), this.state.domLoaded && this.state.windowHeight > 10 && this.state.windowWidth > 10 ? __jsx(\"div\", {\n      className: \"dharma-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, this.renderP5(\"dharma\")) : null, __jsx(\"div\", {\n      ref: element => this.threeRootElement = {\n        el: element,\n        theme: this.state.canvasTheme\n      },\n      className: \"three-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport const ThreeCanvasPage = () => {\n  const themeContext = React.useContext(ColorContext);\n  return __jsx(ThreePageWithContext, {\n    colorThemeContext: themeContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 10\n    }\n  });\n};\nexport default ThreeCanvasPage;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/pages/projects/three-with-canvas-texture.tsx"],"names":["React","Component","createGlobalStyle","FadeIn","InteractiveFrameHeader","ColorContext","dynamic","P5Wrapper","loading","ssr","ThreePageWithContext","constructor","props","filename","sketch","require","default","state","windowWidth","windowHeight","colorThemeContext","domLoaded","canvasElement","undefined","canvasTheme","checkForCanvas","bind","initializeThree","componentDidMount","setState","window","innerWidth","innerHeight","setTimeout","canvas","document","getElementById","console","log","render","ThreePageGlobalStyles","renderP5","element","threeRootElement","el","theme","ThreeCanvasPage","themeContext","useContext"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { createGlobalStyle } from \"styled-components\";\nimport { FadeIn } from \"../../constants/styles/Animation\";\n\nimport { InteractiveFrameHeader } from \"../../components/_interactive/InteractiveFrameHeader\";\n\nimport { ThreeCanvas } from \"../../sketches/three/with-canvas-as-texture\";\n\nimport { NextPage } from \"next\";\nimport { ColorContext, LXLT_ColorTheme } from \"../../constants/styles/Color\";\nimport { LXLT_GLSL_Canvas } from \"../../sketches/p5/glsl\";\nimport { LXLT_P5Wrapper } from \"./_scaffold-p5\";\nimport dynamic from \"next/dynamic\";\n\n// ______________________________________________________________\n\ntype LXLT_ThreePage = {\n  colorThemeContext: LXLT_ColorTheme;\n};\n\ntype LXLT_ThreeRootElement = {\n  el: HTMLDivElement;\n  theme: LXLT_ColorTheme;\n};\n\ntype LXLT_ThreePage_State = {\n  domLoaded: boolean;\n  windowWidth: number;\n  windowHeight: number;\n\n  canvasElement: HTMLCanvasElement;\n  canvasTheme: LXLT_ColorTheme;\n};\n\nconst P5Wrapper: LXLT_P5Wrapper = dynamic(import(\"react-p5-wrapper\"), {\n  loading: () => <></>,\n  ssr: false,\n});\n\nclass ThreePageWithContext extends Component<\n  LXLT_ThreePage,\n  LXLT_ThreePage_State\n> {\n  constructor(props: LXLT_ThreePage) {\n    super(props);\n\n    this.state = {\n      domLoaded: false,\n      windowWidth: 0,\n      windowHeight: 0,\n      canvasElement: undefined,\n      canvasTheme: undefined,\n    };\n\n    this.checkForCanvas = this.checkForCanvas.bind(this);\n    this.initializeThree = this.initializeThree.bind(this);\n  }\n\n  private threeRootElement: LXLT_ThreeRootElement;\n\n  componentDidMount() {\n    if (typeof window) {\n      this.setState({\n        windowWidth: window.innerWidth - 80,\n        windowHeight: window.innerHeight - 80,\n        domLoaded: true,\n        canvasElement: undefined,\n        canvasTheme: this.props.colorThemeContext,\n      });\n\n      setTimeout(this.checkForCanvas, 100);\n    }\n  }\n\n  checkForCanvas() {\n    const canvas: HTMLCanvasElement = document.getElementById(\n      \"defaultCanvas0\"\n    ) as HTMLCanvasElement;\n\n    if (canvas) {\n      console.log(\"canvas found:\", canvas);\n\n      this.setState({\n        canvasElement: undefined,\n      });\n\n      this.initializeThree();\n    } else {\n      console.log(\"canvas not found, trying again in 100ms:\", canvas);\n\n      setTimeout(this.checkForCanvas, 100);\n    }\n  }\n\n  initializeThree() {\n    // ThreeCanvas(this.threeRootElement.el, this.props.colorThemeContext);\n\n    console.log(\"three initialization enqueued:\", this.state.canvasElement);\n\n    return;\n  }\n\n  renderP5 = (filename: string) => {\n    const sketch: LXLT_GLSL_Canvas = require(`../../sketches/p5/${filename}`).default(\n      this.state.windowWidth,\n      this.state.windowHeight,\n      1,\n      this.props.colorThemeContext\n    );\n\n    return <P5Wrapper sketch={sketch} />;\n  };\n\n  render() {\n    const ThreePageGlobalStyles = createGlobalStyle`\n      body, html {\n        overflow: hidden;\n      }\n\n      .three-container {\n        width: 100vw;\n        height: 100vh;\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        #p5_loading {\n          display: none !important;\n        }\n      }\n\n      canvas {\n        animation: ${FadeIn} 1s ease 1;\n        animation-fill-mode: forwards;\n        animation-iteration-count: 1;\n      }\n    `;\n\n    return (\n      <>\n        <ThreePageGlobalStyles />\n        <InteractiveFrameHeader />\n\n        {/* ______________________________________________ */}\n        {/* P5 Canvas */}\n\n        {this.state.domLoaded &&\n        this.state.windowHeight > 10 &&\n        this.state.windowWidth > 10 ? (\n          <div className=\"dharma-container\">{this.renderP5(\"dharma\")}</div>\n        ) : null}\n\n        {/* ______________________________________________ */}\n        {/* Three Canvas */}\n        <div\n          ref={(element: HTMLDivElement) =>\n            (this.threeRootElement = {\n              el: element,\n              theme: this.state.canvasTheme,\n            })\n          }\n          className=\"three-container\"\n        />\n      </>\n    );\n  }\n}\n\nexport const ThreeCanvasPage: NextPage = () => {\n  const themeContext = React.useContext(ColorContext);\n\n  return <ThreePageWithContext colorThemeContext={themeContext} />;\n};\n\nexport default ThreeCanvasPage;\n"]},"metadata":{},"sourceType":"module"}