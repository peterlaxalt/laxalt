{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/InteractiveEyeball/InteractiveEyeball.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Core\nimport React, { Component } from \"react\"; // Constants\n\n// Styles\nimport { InteractiveEyeballClassName, InteractiveEyeballStyle // InteractiveOverlayNavigationClassName,\n} from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n/**\n *\n * @name InteractiveEyeball\n * @author Peter Laxalt\n *\n */\nexport class InteractiveEyeball extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"pupilRef\", /*#__PURE__*/React.createRef());\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      scrollX: 0,\n      scrollY: 0,\n      pupilWidth: 0,\n      pupilHeight: 0,\n      pupilOffsetX: 0,\n      pupilOffsetY: 0,\n      rotation: 0\n    };\n    this.handleMouseMovement = this.handleMouseMovement.bind(this);\n    this.calculatePupilBoundaries = this.calculatePupilBoundaries.bind(this);\n  }\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n\n\n  componentDidMount() {\n    if (\"undefined\" && this.pupilRef) {\n      this.calculatePupilBoundaries();\n      window.addEventListener(\"mousemove\", this.handleMouseMovement);\n    } else {\n      return;\n    }\n  }\n\n  componentWillUnmount() {\n    if (\"undefined\") {\n      window.removeEventListener(\"mousemove\", this.handleMouseMovement);\n    }\n  }\n\n  calculatePupilBoundaries() {\n    if (this.pupilRef.current) {\n      let pupilClientRect = this.pupilRef.current.getBoundingClientRect();\n      this.setState({\n        pupilWidth: pupilClientRect.width,\n        pupilHeight: pupilClientRect.height,\n        pupilOffsetX: pupilClientRect.left,\n        pupilOffsetY: pupilClientRect.top\n      });\n    }\n  }\n\n  handleMouseMovement(e) {\n    if (e) {\n      // let radians = Math.atan2(\n      //   e.screenY - (this.state.pupilOffsetY - this.state.pupilHeight / 2),\n      //   e.screenX - (this.state.pupilOffsetX - this.state.pupilWidth / 2)\n      // );\n      let scrollContainer = this.props.scrollContainer && this.props.scrollContainer.current ? this.props.scrollContainer.current : document.querySelector(\"html\");\n      let radians = Math.atan2(e.clientY + scrollContainer.scrollTop - (this.state.pupilOffsetY - this.state.pupilHeight / 2), e.clientX - (this.state.pupilOffsetX - this.state.pupilWidth / 2));\n      let angle = radians * (180 / Math.PI) - 15;\n      this.setState({\n        rotation: angle\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    // console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(InteractiveEyeballStyle, {\n      className: `${InteractiveEyeballClassName} ${this.props.addClass} ${InteractiveEyeballClassName}--is-${this.props.isInverted ? `inverted` : `not-inverted`}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${InteractiveEyeballClassName}__outline`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${InteractiveEyeballClassName}__pupil-wrapper`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: this.pupilRef,\n          className: `${InteractiveEyeballClassName}__pupil`,\n          style: {\n            transform: `rotate(${this.state.rotation}deg)`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${InteractiveEyeballClassName}__pupil__el`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n} // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/InteractiveEyeball/InteractiveEyeball.tsx"],"names":["React","Component","InteractiveEyeballClassName","InteractiveEyeballStyle","InteractiveEyeball","constructor","props","createRef","state","mouseX","mouseY","scrollX","scrollY","pupilWidth","pupilHeight","pupilOffsetX","pupilOffsetY","rotation","handleMouseMovement","bind","calculatePupilBoundaries","componentDidMount","pupilRef","window","addEventListener","componentWillUnmount","removeEventListener","current","pupilClientRect","getBoundingClientRect","setState","width","height","left","top","e","scrollContainer","document","querySelector","radians","Math","atan2","clientY","scrollTop","clientX","angle","PI","render","addClass","isInverted","transform"],"mappings":"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","sourcesContent":["// Core\nimport React, { Component } from \"react\";\n\n// Constants\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\n\n// Styles\nimport {\n  InteractiveEyeballClassName,\n  InteractiveEyeballStyle,\n  // InteractiveOverlayNavigationClassName,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_InteractiveEyeball_State = {\n  mouseX: number;\n  mouseY: number;\n\n  scrollX: number;\n  scrollY: number;\n\n  pupilWidth: number;\n  pupilHeight: number;\n\n  pupilOffsetX: number;\n  pupilOffsetY: number;\n\n  rotation: number;\n};\n\nexport type LXLT_InteractiveEyeball = {\n  addClass?: string;\n  scrollContainer?: React.RefObject<HTMLElement>;\n  isInverted?: boolean;\n};\n\n/**\n *\n * @name InteractiveEyeball\n * @author Peter Laxalt\n *\n */\nexport class InteractiveEyeball extends Component<\n  LXLT_InteractiveEyeball,\n  LXLT_InteractiveEyeball_State\n> {\n  constructor(props: LXLT_InteractiveEyeball) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n\n      scrollX: 0,\n      scrollY: 0,\n\n      pupilWidth: 0,\n      pupilHeight: 0,\n\n      pupilOffsetX: 0,\n      pupilOffsetY: 0,\n\n      rotation: 0,\n    };\n\n    this.handleMouseMovement = this.handleMouseMovement.bind(this);\n\n    this.calculatePupilBoundaries = this.calculatePupilBoundaries.bind(this);\n  }\n\n  /**\n   *\n   * @name componentDidMount()\n   *\n   */\n  componentDidMount() {\n    if (typeof window && this.pupilRef) {\n      this.calculatePupilBoundaries();\n\n      window.addEventListener(\"mousemove\", this.handleMouseMovement);\n    } else {\n      return;\n    }\n  }\n\n  componentWillUnmount() {\n    if (typeof window) {\n      window.removeEventListener(\"mousemove\", this.handleMouseMovement);\n    }\n  }\n\n  calculatePupilBoundaries() {\n    if (this.pupilRef.current) {\n      let pupilClientRect = this.pupilRef.current.getBoundingClientRect();\n\n      this.setState({\n        pupilWidth: pupilClientRect.width,\n        pupilHeight: pupilClientRect.height,\n\n        pupilOffsetX: pupilClientRect.left,\n        pupilOffsetY: pupilClientRect.top,\n      });\n    }\n  }\n\n  handleMouseMovement(e: MouseEvent) {\n    if (e) {\n      // let radians = Math.atan2(\n      //   e.screenY - (this.state.pupilOffsetY - this.state.pupilHeight / 2),\n      //   e.screenX - (this.state.pupilOffsetX - this.state.pupilWidth / 2)\n      // );\n\n      let scrollContainer =\n        this.props.scrollContainer && this.props.scrollContainer.current\n          ? this.props.scrollContainer.current\n          : document.querySelector(\"html\");\n\n      let radians = Math.atan2(\n        e.clientY +\n          scrollContainer.scrollTop -\n          (this.state.pupilOffsetY - this.state.pupilHeight / 2),\n        e.clientX - (this.state.pupilOffsetX - this.state.pupilWidth / 2)\n      );\n\n      let angle = radians * (180 / Math.PI) - 15;\n\n      this.setState({\n        rotation: angle,\n      });\n    } else {\n      return;\n    }\n  }\n\n  pupilRef = React.createRef<HTMLSpanElement>();\n\n  render() {\n    // console.log(this.state);\n\n    return (\n      <InteractiveEyeballStyle\n        className={`${InteractiveEyeballClassName} ${\n          this.props.addClass\n        } ${InteractiveEyeballClassName}--is-${\n          this.props.isInverted ? `inverted` : `not-inverted`\n        }`}\n      >\n        <span className={`${InteractiveEyeballClassName}__outline`} />\n        <span className={`${InteractiveEyeballClassName}__pupil-wrapper`}>\n          <span\n            ref={this.pupilRef}\n            className={`${InteractiveEyeballClassName}__pupil`}\n            style={{ transform: `rotate(${this.state.rotation}deg)` }}\n          >\n            <span className={`${InteractiveEyeballClassName}__pupil__el`} />\n          </span>\n        </span>\n      </InteractiveEyeballStyle>\n    );\n  }\n}\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}