{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/ThemePicker/ThemePicker.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from \"react\";\nimport { ThemePickerClassName, ThemePickerStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name ThemePicker\n * @author Peter Laxalt\n *\n */\nexport var ThemePicker =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ThemePicker, _React$PureComponent);\n\n  function ThemePicker(props) {\n    var _this;\n\n    _classCallCheck(this, ThemePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThemePicker).call(this, props));\n    _this.state = {}; // this.letterCountTimer = this.letterCountTimer.bind(this);\n\n    return _this;\n  }\n\n  _createClass(ThemePicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"incrementLetterCount\",\n    value: function incrementLetterCount(id) {// this.setState({\n      //   characters: this.state.characters.map(\n      //     (character: LXLT_DharmaChar, idx: number) => {\n      //       return {\n      //         letter: character.letter,\n      //         count: id == character.idx ? character.count + 1 : character.count,\n      //         idx: idx,\n      //       };\n      //     }\n      //   ),\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      _objectDestructuringEmpty(this.state);\n\n      return __jsx(ThemePickerStyle, {\n        className: \"\".concat(ThemePickerClassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"PICKER\");\n    }\n  }]);\n\n  return ThemePicker;\n}(React.PureComponent);","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/ThemePicker/ThemePicker.tsx"],"names":["React","ThemePickerClassName","ThemePickerStyle","ThemePicker","props","state","id","PureComponent"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,QAAuD,eAAvD,C,CAEA;AACA;;AAgBA;AACA;;AAEA;;;;;AAKA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAIE,uBAAYC,KAAZ,EAAqC;AAAA;;AAAA;;AACnC,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa,EAAb,CAHmC,CAKnC;;AALmC;AAMpC;;AAVH;AAAA;AAAA,wCAYsB,CAAE;AAZxB;AAAA;AAAA,yCAcuBC,EAdvB,EAcmC,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA1BH;AAAA;AAAA,6BA4BW;AAAA,gCACE,KAAKD,KADP;;AAGP,aACE,MAAC,gBAAD;AAAkB,QAAA,SAAS,YAAKJ,oBAAL,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;AApCH;;AAAA;AAAA,EAAiCD,KAAK,CAACO,aAAvC","sourcesContent":["// Core\nimport React from \"react\";\nimport { ThemePickerClassName, ThemePickerStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_ThemePicker = {};\n\ntype LXLT_Theme = {\n  name: string;\n  primary: string;\n  secondary: string;\n  background: string;\n  foreground: string;\n};\n\ntype LXLT_ThemePickerState = {\n  themes: LXLT_Theme[];\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name ThemePicker\n * @author Peter Laxalt\n *\n */\nexport class ThemePicker extends React.PureComponent<\n  LXLT_ThemePicker,\n  LXLT_ThemePickerState\n> {\n  constructor(props: LXLT_ThemePicker) {\n    super(props);\n\n    this.state = {};\n\n    // this.letterCountTimer = this.letterCountTimer.bind(this);\n  }\n\n  componentDidMount() {}\n\n  incrementLetterCount(id: number) {\n    // this.setState({\n    //   characters: this.state.characters.map(\n    //     (character: LXLT_DharmaChar, idx: number) => {\n    //       return {\n    //         letter: character.letter,\n    //         count: id == character.idx ? character.count + 1 : character.count,\n    //         idx: idx,\n    //       };\n    //     }\n    //   ),\n    // });\n  }\n\n  render() {\n    let {} = this.state;\n\n    return (\n      <ThemePickerStyle className={`${ThemePickerClassName}`}>\n        PICKER\n      </ThemePickerStyle>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}