{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  ::-moz-selection { background: \", \"; color: \", \" }\\n  ::selection { background: \", \"; color: \", \" }\\n\\n  :root {\\n    --clrPrimary: \", \";\\n    --clrSecondary: \", \";\\n    --clrBackground: \", \";\\n    --clrForeground: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Color.js:\n// This is the sitewide palette.\n// Imports\n// _______________________________________________________\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\"; // Begin Component\n// _______________________________________________________\n\nexport var Color = {\n  // Color Variables\n  varPrimary: \"var(--clrPrimary)\",\n  varSecondary: \"var(--clrSecondary)\",\n  varBackground: \"var(--clrBackground)\",\n  varForeground: \"var(--clrForeground)\",\n  // Core Colors\n  Primary: \"#FFF6EE\",\n  Secondary: \"#5D6376\",\n  Background: \"#FF8760\",\n  // Background: \"#ff988c\",\n  // Background: \"#ffe970\",\n  Text: \"#FFF6EE\",\n  // Grayscale Palette\n  Black: \"#000000\",\n  Nightsky: \"#151313\",\n  Warmsky: \"#34281D\",\n  Gravel: \"#4E4135\",\n  Slate: \"#928070\",\n  Tan: \"#C4AC97\",\n  Gray: \"#DAC9BA\",\n  Blush: \"#F6E7D9\",\n  Cream: \"#FFF6EE\",\n  White: \"#FFF6EE\",\n  // Warm Palette\n  Clay: \"#A33609\",\n  Nova: \"#E24809\",\n  Sunlight: \"#E9A200\",\n  Sunset: \"#ED9158\",\n  // Cool Palette\n  Galaxy: \"#111b24\",\n  Deepsea: \"#002F9E\",\n  Ocean: \"#269FE2\",\n  Sky: \"#7AC0E6\",\n  Dino: \"#23023B\",\n  Eggplant: \"#520589\",\n  Lilac: \"#874BB4\",\n  // Feedback Palette\n  Warning: \"#FF8760\",\n  Success: \"#40DA33\"\n};\n/**\n *\n * @name ColorContext_Defaults\n * @description Defaults for our theming context\n *\n */\n\nexport var ColorContext_Defaults = {\n  primary: Color.Primary,\n  secondary: Color.Secondary,\n  foreground: Color.Text,\n  background: Color.Background,\n  setTheme: function setTheme() {}\n};\n/**\n *\n * @name useColorContext\n * @description Our hook to update our color context\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\n\nexport var useColorContext = function useColorContext() {\n  _s();\n\n  var _React$useState = React.useState(ColorContext_Defaults),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      colorTheme = _React$useState2[0],\n      setColorTheme = _React$useState2[1];\n\n  var setTheme = React.useCallback(function (currentColorTheme) {\n    setColorTheme(currentColorTheme);\n  }, []);\n  return _objectSpread(_objectSpread({}, colorTheme), {}, {\n    setTheme: setTheme\n  });\n};\n/**\n *\n * @name ColorContext\n * @description Our context to provide color themes\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\n\n_s(useColorContext, \"uYkrI/Unkj9lwnWCIwD9GSto0f8=\");\n\nexport var ColorContext = /*#__PURE__*/React.createContext(ColorContext_Defaults);\n/**\n *\n * @name Palette\n * @description Global CSS Variables for palette\n *\n */\n\n_c = ColorContext;\nexport var Palette = createGlobalStyle(_templateObject(), Color.varForeground, Color.varBackground, Color.varForeground, Color.varBackground, Color.Primary, Color.Secondary, Color.Background, Color.Text); //////////////////////////////////////////////////////////////////////\n// End Component\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorContext\");","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/constants/styles/Color.tsx"],"names":["React","createGlobalStyle","Color","varPrimary","varSecondary","varBackground","varForeground","Primary","Secondary","Background","Text","Black","Nightsky","Warmsky","Gravel","Slate","Tan","Gray","Blush","Cream","White","Clay","Nova","Sunlight","Sunset","Galaxy","Deepsea","Ocean","Sky","Dino","Eggplant","Lilac","Warning","Success","ColorContext_Defaults","primary","secondary","foreground","background","setTheme","useColorContext","useState","colorTheme","setColorTheme","useCallback","currentColorTheme","ColorContext","createContext","Palette"],"mappings":"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","sourcesContent":["// Color.js:\n// This is the sitewide palette.\n\n// Imports\n// _______________________________________________________\n\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// Begin Component\n// _______________________________________________________\n\nexport type LXLT_ColorTheme = {\n  name?:\n    | \"default\"\n    | \"white\"\n    | \"goldenrod\"\n    | \"cadetblue\"\n    | \"orangered\"\n    | \"galaxy\";\n  primary: string;\n  secondary: string;\n  background: string;\n  foreground: string;\n  setTheme?: (theme: LXLT_ColorTheme) => void;\n};\n\nexport const Color = {\n  // Color Variables\n  varPrimary: \"var(--clrPrimary)\",\n  varSecondary: \"var(--clrSecondary)\",\n  varBackground: \"var(--clrBackground)\",\n  varForeground: \"var(--clrForeground)\",\n\n  // Core Colors\n  Primary: \"#FFF6EE\",\n  Secondary: \"#5D6376\",\n  Background: \"#FF8760\",\n  // Background: \"#ff988c\",\n  // Background: \"#ffe970\",\n  Text: \"#FFF6EE\",\n\n  // Grayscale Palette\n  Black: \"#000000\",\n  Nightsky: \"#151313\",\n  Warmsky: \"#34281D\",\n  Gravel: \"#4E4135\",\n  Slate: \"#928070\",\n  Tan: \"#C4AC97\",\n  Gray: \"#DAC9BA\",\n  Blush: \"#F6E7D9\",\n  Cream: \"#FFF6EE\",\n  White: \"#FFF6EE\",\n\n  // Warm Palette\n  Clay: \"#A33609\",\n  Nova: \"#E24809\",\n  Sunlight: \"#E9A200\",\n  Sunset: \"#ED9158\",\n\n  // Cool Palette\n  Galaxy: \"#111b24\",\n  Deepsea: \"#002F9E\",\n  Ocean: \"#269FE2\",\n  Sky: \"#7AC0E6\",\n  Dino: \"#23023B\",\n  Eggplant: \"#520589\",\n  Lilac: \"#874BB4\",\n\n  // Feedback Palette\n  Warning: \"#FF8760\",\n  Success: \"#40DA33\",\n};\n\n/**\n *\n * @name ColorContext_Defaults\n * @description Defaults for our theming context\n *\n */\nexport const ColorContext_Defaults: LXLT_ColorTheme = {\n  primary: Color.Primary,\n  secondary: Color.Secondary,\n  foreground: Color.Text,\n  background: Color.Background,\n  setTheme: () => {},\n};\n\n/**\n *\n * @name useColorContext\n * @description Our hook to update our color context\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\nexport const useColorContext = (): LXLT_ColorTheme => {\n  const [colorTheme, setColorTheme] = React.useState(ColorContext_Defaults);\n\n  const setTheme = React.useCallback(\n    (currentColorTheme: LXLT_ColorTheme): void => {\n      setColorTheme(currentColorTheme);\n    },\n    []\n  );\n\n  return {\n    ...colorTheme,\n    setTheme,\n  };\n};\n\n/**\n *\n * @name ColorContext\n * @description Our context to provide color themes\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\nexport const ColorContext = React.createContext<LXLT_ColorTheme>(\n  ColorContext_Defaults\n);\n\n/**\n *\n * @name Palette\n * @description Global CSS Variables for palette\n *\n */\nexport const Palette = createGlobalStyle`\n  ::-moz-selection { background: ${Color.varForeground}; color: ${Color.varBackground} }\n  ::selection { background: ${Color.varForeground}; color: ${Color.varBackground} }\n\n  :root {\n    --clrPrimary: ${Color.Primary};\n    --clrSecondary: ${Color.Secondary};\n    --clrBackground: ${Color.Background};\n    --clrForeground: ${Color.Text};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"]},"metadata":{},"sourceType":"module"}