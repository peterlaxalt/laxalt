{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx\";\n// Core\nimport React, { useEffect, useState } from \"react\";\nimport { SiteProjects } from \"../../../constants/site/Settings\";\n// Components\n// Styles\nimport { ProjectScrollSectionClassName, ProjectScrollSectionStyle, ScrollCardClassName, ScrollCardStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nexport const ScrollCard = ({\n  item,\n  count,\n  total\n}) => {\n  let {\n    cover\n  } = item;\n  return /*#__PURE__*/_jsxDEV(ScrollCardStyle, {\n    className: `${ScrollCardClassName}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${ScrollCardClassName}__inner`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ScrollCardClassName}__row ${ScrollCardClassName}__row--top`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-left`,\n          children: [\"No \", count, \" / \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-right`,\n          children: item.duration && item.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ScrollCardClassName}__row ${ScrollCardClassName}__row--center`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__image-wrapper`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: `${ScrollCardClassName}__image ${ScrollCardClassName}__image--filtered`,\n            src: cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `${ScrollCardClassName}__image ${ScrollCardClassName}__image--normal`,\n            src: cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ScrollCardClassName}__row ${ScrollCardClassName}__row--bottom`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-left`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor ${ScrollCardClassName}__col__content-row--tag-list`,\n            children: item.categories.map((category, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [category.name, \" \", idx + 1 !== item.categories.length ? \"/\" + \" \" : \"\"]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-right`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`,\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor`,\n            children: item.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\nexport const ProjectScrollSection = ({\n  addClass = \"\"\n}) => {\n  const {\n    0: dynamicHeight,\n    1: setDynamicHeight\n  } = useState(null);\n  const {\n    0: translateX,\n    1: setTranslateX\n  } = useState(0);\n  const containerRef = React.useRef();\n  const objectRef = React.useRef();\n\n  const calcDynamicHeight = objectWidth => {\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    return objectWidth - vw + vh + 150;\n  };\n\n  const handleDynamicHeight = (ref, setDynamicHeight) => {\n    const objectWidth = ref.current.scrollWidth;\n    const dynamicHeight = calcDynamicHeight(objectWidth);\n    setDynamicHeight(dynamicHeight);\n  };\n\n  const applyScrollListener = (ref, setTranslateX) => {\n    window.addEventListener(\"scroll\", () => {\n      const offsetTop = ref && ref.current ? -ref.current.offsetTop : 0;\n      setTranslateX(offsetTop);\n    });\n  };\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProjectScrollSectionStyle, {\n    className: `${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${translateX > 10 ? `is-scrolled` : `is-not-scrolled`} ${addClass && addClass}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${ProjectScrollSectionClassName}__outer`,\n      style: {\n        height: `${dynamicHeight}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ProjectScrollSectionClassName}__sticky-wrapper`,\n        ref: containerRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ProjectScrollSectionClassName}__x-translate-wrapper`,\n          style: {\n            transform: `translate3d(${translateX}px, 0px, 0px)`\n          },\n          ref: objectRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${ProjectScrollSectionClassName}__horizontal-wrapper`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${ProjectScrollSectionClassName}__content-wrapper`,\n              children: SiteProjects.map((item, idx) => {\n                return /*#__PURE__*/_jsxDEV(ScrollCard, {\n                  count: idx + 1,\n                  total: SiteProjects.length,\n                  item: item\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx"],"names":["React","useEffect","useState","SiteProjects","ProjectScrollSectionClassName","ProjectScrollSectionStyle","ScrollCardClassName","ScrollCardStyle","ScrollCard","item","count","total","cover","duration","name","categories","map","category","idx","length","type","location","ProjectScrollSection","addClass","dynamicHeight","setDynamicHeight","translateX","setTranslateX","containerRef","useRef","objectRef","calcDynamicHeight","objectWidth","vw","window","innerWidth","vh","innerHeight","handleDynamicHeight","ref","current","scrollWidth","applyScrollListener","addEventListener","offsetTop","resizeHandler","height","transform"],"mappings":"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","sourcesContent":["// Core\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  LXLT_Category,\n  LXLT_Project,\n  SiteProjects,\n} from \"../../../constants/site/Settings\";\nimport { Theme } from \"../../../constants/Theme\";\n\n// Components\n\n// Styles\nimport {\n  ProjectScrollSectionClassName,\n  ProjectScrollSectionStyle,\n  ScrollCardClassName,\n  ScrollCardStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_ProjectScrollSection = {\n  addClass?: string;\n};\n\nexport type LXLT_ScrollCard = {\n  item: LXLT_Project;\n  count?: number;\n  total?: number;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\nexport const ScrollCard: React.FunctionComponent<LXLT_ScrollCard> = ({\n  item,\n  count,\n  total,\n}) => {\n  let { cover } = item;\n\n  return (\n    <ScrollCardStyle className={`${ScrollCardClassName}`}>\n      <div className={`${ScrollCardClassName}__inner`}>\n        {/* ____________________________________________________________________ */}\n        {/* Card top */}\n        <div\n          className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--top`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Card top left col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-left`}\n          >\n            No {count} / {total}\n          </div>\n\n          {/* ____________________________________________________________________ */}\n          {/* Card top right col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-right`}\n          >\n            {item.duration && item.duration}\n          </div>\n        </div>\n\n        {/* ____________________________________________________________________ */}\n        {/* Card center */}\n        <div\n          className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--center`}\n        >\n          <div className={`${ScrollCardClassName}__image-wrapper`}>\n            <img\n              className={`${ScrollCardClassName}__image ${ScrollCardClassName}__image--filtered`}\n              src={cover}\n            />\n            <img\n              className={`${ScrollCardClassName}__image ${ScrollCardClassName}__image--normal`}\n              src={cover}\n            />\n          </div>\n        </div>\n\n        {/* ____________________________________________________________________ */}\n        {/* Card bottom */}\n        <div\n          className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--bottom`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Card bottom left col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-left`}\n          >\n            <strong\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`}\n            >\n              {item.name}\n            </strong>\n            <span\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor ${ScrollCardClassName}__col__content-row--tag-list`}\n            >\n              {item.categories.map((category: LXLT_Category, idx: number) => {\n                return (\n                  <span key={idx}>\n                    {category.name}{\" \"}\n                    {idx + 1 !== item.categories.length ? \"/\" + \" \" : \"\"}\n                  </span>\n                );\n              })}\n            </span>\n          </div>\n\n          {/* ____________________________________________________________________ */}\n          {/* Card bottom right col */}\n          <div\n            className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-right`}\n          >\n            <span\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`}\n            >\n              {item.type}\n            </span>\n            <span\n              className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor`}\n            >\n              {item.location}\n            </span>\n          </div>\n        </div>\n      </div>\n    </ScrollCardStyle>\n  );\n};\n\nexport const ProjectScrollSection: React.FunctionComponent<LXLT_ProjectScrollSection> = ({\n  addClass = \"\",\n}) => {\n  const [dynamicHeight, setDynamicHeight] = useState(null);\n  const [translateX, setTranslateX] = useState(0);\n\n  const containerRef = React.useRef<HTMLDivElement>();\n  const objectRef = React.useRef<HTMLDivElement>();\n\n  const calcDynamicHeight = (objectWidth: number) => {\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    return objectWidth - vw + vh + 150;\n  };\n\n  const handleDynamicHeight = (\n    ref: React.RefObject<HTMLDivElement>,\n    setDynamicHeight: (dynamicHeight: number) => void\n  ) => {\n    const objectWidth: number = ref.current.scrollWidth;\n    const dynamicHeight: number = calcDynamicHeight(objectWidth);\n    setDynamicHeight(dynamicHeight);\n  };\n\n  const applyScrollListener = (\n    ref: React.RefObject<HTMLDivElement>,\n    setTranslateX: (translateX: number) => void\n  ) => {\n    window.addEventListener(\"scroll\", () => {\n      const offsetTop: number = ref && ref.current ? -ref.current.offsetTop : 0;\n      setTranslateX(offsetTop);\n    });\n  };\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX);\n  }, []);\n\n  return (\n    <ProjectScrollSectionStyle\n      className={`${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${translateX > 10 ? `is-scrolled` : `is-not-scrolled`} ${addClass && addClass}`}\n    >\n      {/* ____________________________________________________________________ */}\n      {/* Outer Container with Dynamic Height */}\n      <div\n        className={`${ProjectScrollSectionClassName}__outer`}\n        style={{ height: `${dynamicHeight}px` }}\n      >\n        {/* ____________________________________________________________________ */}\n        {/* Sticky Wrapper */}\n        <div\n          className={`${ProjectScrollSectionClassName}__sticky-wrapper`}\n          ref={containerRef}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Translation Wrapper */}\n          <div\n            className={`${ProjectScrollSectionClassName}__x-translate-wrapper`}\n            style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n            ref={objectRef}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Horizontal Wrapper */}\n            <div\n              className={`${ProjectScrollSectionClassName}__horizontal-wrapper`}\n            >\n              {/* ____________________________________________________________________ */}\n              {/* Content Wrapper */}\n              <div\n                className={`${ProjectScrollSectionClassName}__content-wrapper`}\n              >\n                {SiteProjects.map((item: LXLT_Project, idx: number) => {\n                  return (\n                    <ScrollCard\n                      key={idx}\n                      count={idx + 1}\n                      total={SiteProjects.length}\n                      item={item}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ProjectScrollSectionStyle>\n  );\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}