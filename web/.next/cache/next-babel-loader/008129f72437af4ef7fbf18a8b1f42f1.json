{"ast":null,"code":"/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar Dharma_Canvas = function Dharma_Canvas(W, H, ID, BG) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    // _________________________________________________\n    // Preload\n    // _________________________________________________\n    // Setup\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H, p.WEBGL);\n      p.noStroke();\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      // rect gives us some geometry on the screen\n      p.background(BG);\n      p.fill(255, 255, 255);\n      p.text(\"Testing\", 0, 0);\n      p.rect(0, 0, W, H);\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\nexport default Dharma_Canvas;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/dharma.tsx"],"names":["Dharma_Canvas","W","H","ID","BG","p","setup","createCanvas","WEBGL","noStroke","draw","background","fill","text","rect","windowResized","resizeCanvas"],"mappings":"AAAA;;;;;;AASA;AACA;AASA,IAAMA,aAAiC,GAAG,SAApCA,aAAoC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,EAAP,EAAWC,EAAX;AAAA,SAAkB,UAACC,CAAD,EAAW;AACrE;AACA;AAEA;AACA;AAEA;AACA;AACAA,IAAAA,CAAC,CAACC,KAAF,GAAU,YAAM;AACd;AACAD,MAAAA,CAAC,CAACE,YAAF,CAAeN,CAAf,EAAkBC,CAAlB,EAAqBG,CAAC,CAACG,KAAvB;AACAH,MAAAA,CAAC,CAACI,QAAF;AACD,KAJD,CATqE,CAerE;AACA;;;AACAJ,IAAAA,CAAC,CAACK,IAAF,GAAS,YAAM;AACb;AAEAL,MAAAA,CAAC,CAACM,UAAF,CAAaP,EAAb;AACAC,MAAAA,CAAC,CAACO,IAAF,CAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB;AACAP,MAAAA,CAAC,CAACQ,IAAF,CAAO,SAAP,EAAkB,CAAlB,EAAqB,CAArB;AAEAR,MAAAA,CAAC,CAACS,IAAF,CAAO,CAAP,EAAU,CAAV,EAAab,CAAb,EAAgBC,CAAhB;AACD,KARD;;AAUAG,IAAAA,CAAC,CAACU,aAAF,GAAkB,YAAM;AACtBV,MAAAA,CAAC,CAACW,YAAF,CAAef,CAAf,EAAkBC,CAAlB;AACD,KAFD;AAGD,GA9ByC;AAAA,CAA1C;;AAgCA,eAAeF,aAAf","sourcesContent":["/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5 from \"p5\";\n\n// Begin Component\n// __________________________________________________________________________\n\nexport type LXLT_Dharma_Canvas = (\n  W: number,\n  H: number,\n  ID: number,\n  BG: string\n) => (p: p5) => void;\n\nconst Dharma_Canvas: LXLT_Dharma_Canvas = (W, H, ID, BG) => (p: p5) => {\n  // _________________________________________________\n  // Config\n\n  // _________________________________________________\n  // Preload\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.noStroke();\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    // rect gives us some geometry on the screen\n\n    p.background(BG);\n    p.fill(255, 255, 255);\n    p.text(\"Testing\", 0, 0);\n\n    p.rect(0, 0, W, H);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default Dharma_Canvas;\n"]},"metadata":{},"sourceType":"module"}