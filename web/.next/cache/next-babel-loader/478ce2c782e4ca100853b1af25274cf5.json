{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\n/**\n *\n * Sin Wave Cone\n * @author Peter Laxalt\n * @description Simple Sin Wave Cone in p5.js\n *\n */\n// Begin Component\n//////////////////////////////////////////////////////////////////////\nexport default ((W, H) => p => {\n  let x = 0; // @ts-ignore\n\n  let scale = 0;\n  let color = {\n    primary: \"black\",\n    primaryAlpha: \"black\",\n    secondary: \"#000000\",\n    bg: \"cyan\",\n    white: \"#ffffff\"\n  };\n\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H);\n    p.angleMode(p.RADIANS);\n  };\n\n  p.draw = () => {\n    scale += 1;\n    x = x * 1.1 + 2;\n    p.noFill();\n    p.stroke(color.primary);\n    p.background(color.bg);\n\n    for (let i = 0; i < 20; i++) {\n      p.cone(300, 400);\n      p.stroke(color.primaryAlpha);\n      p.strokeWeight(1);\n      p.translate( // @ts-ignore\n      _parseInt(Math.sin(p.mouseX * 0.001) * 50), // @ts-ignore\n      _parseInt(Math.sin(p.mouseY * 0.001) * 50), // @ts-ignore\n      _parseInt(Math.sin(p.mouseX * 0.001) * 50));\n      p.smooth();\n      p.rotateX(p.frameCount * 0.01);\n      p.rotateY(p.frameCount * 0.01);\n    }\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n    p.background(\"yellow\");\n  };\n});","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/d2.tsx"],"names":["W","H","p","x","scale","color","primary","primaryAlpha","secondary","bg","white","setup","createCanvas","angleMode","RADIANS","draw","noFill","stroke","background","i","cone","strokeWeight","translate","Math","sin","mouseX","mouseY","smooth","rotateX","frameCount","rotateY","windowResized","resizeCanvas"],"mappings":";;AAAA;;;;;;;AAQA;AACA;AAEA,gBAAe,CAACA,CAAD,EAASC,CAAT,KAAqBC,CAAD,IAAY;AAC7C,MAAIC,CAAC,GAAG,CAAR,CAD6C,CAE7C;;AACA,MAAIC,KAAK,GAAG,CAAZ;AAEA,MAAIC,KAAK,GAAG;AACVC,IAAAA,OAAO,EAAE,OADC;AAEVC,IAAAA,YAAY,EAAE,OAFJ;AAGVC,IAAAA,SAAS,EAAE,SAHD;AAIVC,IAAAA,EAAE,EAAE,MAJM;AAKVC,IAAAA,KAAK,EAAE;AALG,GAAZ;;AAQAR,EAAAA,CAAC,CAACS,KAAF,GAAU,MAAM;AACd;AACAT,IAAAA,CAAC,CAACU,YAAF,CAAeZ,CAAf,EAAkBC,CAAlB;AACAC,IAAAA,CAAC,CAACW,SAAF,CAAYX,CAAC,CAACY,OAAd;AACD,GAJD;;AAMAZ,EAAAA,CAAC,CAACa,IAAF,GAAS,MAAM;AACbX,IAAAA,KAAK,IAAI,CAAT;AACAD,IAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAU,CAAd;AAEAD,IAAAA,CAAC,CAACc,MAAF;AACAd,IAAAA,CAAC,CAACe,MAAF,CAASZ,KAAK,CAACC,OAAf;AACAJ,IAAAA,CAAC,CAACgB,UAAF,CAAab,KAAK,CAACI,EAAnB;;AAEA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BjB,MAAAA,CAAC,CAACkB,IAAF,CAAO,GAAP,EAAY,GAAZ;AACAlB,MAAAA,CAAC,CAACe,MAAF,CAASZ,KAAK,CAACE,YAAf;AACAL,MAAAA,CAAC,CAACmB,YAAF,CAAe,CAAf;AACAnB,MAAAA,CAAC,CAACoB,SAAF,EACE;AACA,gBAASC,IAAI,CAACC,GAAL,CAAStB,CAAC,CAACuB,MAAF,GAAW,KAApB,IAA6B,EAAtC,CAFF,EAGE;AACA,gBAASF,IAAI,CAACC,GAAL,CAAStB,CAAC,CAACwB,MAAF,GAAW,KAApB,IAA6B,EAAtC,CAJF,EAKE;AACA,gBAASH,IAAI,CAACC,GAAL,CAAStB,CAAC,CAACuB,MAAF,GAAW,KAApB,IAA6B,EAAtC,CANF;AAQAvB,MAAAA,CAAC,CAACyB,MAAF;AACAzB,MAAAA,CAAC,CAAC0B,OAAF,CAAU1B,CAAC,CAAC2B,UAAF,GAAe,IAAzB;AACA3B,MAAAA,CAAC,CAAC4B,OAAF,CAAU5B,CAAC,CAAC2B,UAAF,GAAe,IAAzB;AACD;AACF,GAxBD;;AA0BA3B,EAAAA,CAAC,CAAC6B,aAAF,GAAkB,MAAM;AACtB7B,IAAAA,CAAC,CAAC8B,YAAF,CAAehC,CAAf,EAAkBC,CAAlB;AACAC,IAAAA,CAAC,CAACgB,UAAF,CAAa,QAAb;AACD,GAHD;AAID,CAjDD","sourcesContent":["/**\n *\n * Sin Wave Cone\n * @author Peter Laxalt\n * @description Simple Sin Wave Cone in p5.js\n *\n */\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport default (W: any, H: any) => (p: any) => {\n  let x = 0;\n  // @ts-ignore\n  let scale = 0;\n\n  let color = {\n    primary: \"black\",\n    primaryAlpha: \"black\",\n    secondary: \"#000000\",\n    bg: \"cyan\",\n    white: \"#ffffff\"\n  };\n\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H);\n    p.angleMode(p.RADIANS);\n  };\n\n  p.draw = () => {\n    scale += 1;\n    x = x * 1.1 + 2;\n\n    p.noFill();\n    p.stroke(color.primary);\n    p.background(color.bg);\n\n    for (let i = 0; i < 20; i++) {\n      p.cone(300, 400);\n      p.stroke(color.primaryAlpha);\n      p.strokeWeight(1);\n      p.translate(\n        // @ts-ignore\n        parseInt(Math.sin(p.mouseX * 0.001) * 50),\n        // @ts-ignore\n        parseInt(Math.sin(p.mouseY * 0.001) * 50),\n        // @ts-ignore\n        parseInt(Math.sin(p.mouseX * 0.001) * 50)\n      );\n      p.smooth();\n      p.rotateX(p.frameCount * 0.01);\n      p.rotateY(p.frameCount * 0.01);\n    }\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n    p.background(\"yellow\");\n  };\n};\n"]},"metadata":{},"sourceType":"module"}