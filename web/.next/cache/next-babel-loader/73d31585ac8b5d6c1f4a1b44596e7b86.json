{"ast":null,"code":"/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar DharmaCanvasDisplay = function DharmaCanvasDisplay(W, H, ID, BG) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    var dharmaFont;\n    var text = \"LAXALT\"; // _________________________________________________\n    // Preload\n\n    p.preload = function () {\n      dharmaFont = p.loadFont(\"/fonts/dharma/dharma_regular.ttf\");\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H, p.WEBGL);\n      p.noStroke();\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      // rect gives us some geometry on the screen\n      p.background(BG);\n      p.textFont(dharmaFont);\n      p.textLeading(0);\n      p.textSize(H * 1.25);\n      p.text(text, 0, -40);\n      p.fill(\"black\");\n      p.textAlign(p.CENTER, p.CENTER);\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\nexport default DharmaCanvasDisplay;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/dharma.tsx"],"names":["DharmaCanvasDisplay","W","H","ID","BG","p","dharmaFont","text","preload","loadFont","setup","createCanvas","WEBGL","noStroke","draw","background","textFont","textLeading","textSize","fill","textAlign","CENTER","windowResized","resizeCanvas"],"mappings":"AAAA;;;;;;AASA;AACA;AAiBA,IAAMA,mBAA6C,GAAG,SAAhDA,mBAAgD,CAACC,CAAD,EAAIC,CAAJ,EAAOC,EAAP,EAAWC,EAAX;AAAA,SAAkB,UACtEC,CADsE,EAEnE;AACH;AACA;AACA,QAAIC,UAAJ;AACA,QAAIC,IAAI,GAAG,QAAX,CAJG,CAMH;AACA;;AACAF,IAAAA,CAAC,CAACG,OAAF,GAAY,YAAM;AAChBF,MAAAA,UAAU,GAAGD,CAAC,CAACI,QAAF,oCAAb;AACD,KAFD,CARG,CAYH;AACA;;;AACAJ,IAAAA,CAAC,CAACK,KAAF,GAAU,YAAM;AACd;AACAL,MAAAA,CAAC,CAACM,YAAF,CAAeV,CAAf,EAAkBC,CAAlB,EAAqBG,CAAC,CAACO,KAAvB;AACAP,MAAAA,CAAC,CAACQ,QAAF;AACD,KAJD,CAdG,CAoBH;AACA;;;AACAR,IAAAA,CAAC,CAACS,IAAF,GAAS,YAAM;AACb;AAEAT,MAAAA,CAAC,CAACU,UAAF,CAAaX,EAAb;AACAC,MAAAA,CAAC,CAACW,QAAF,CAAWV,UAAX;AACAD,MAAAA,CAAC,CAACY,WAAF,CAAc,CAAd;AACAZ,MAAAA,CAAC,CAACa,QAAF,CAAWhB,CAAC,GAAG,IAAf;AACAG,MAAAA,CAAC,CAACE,IAAF,CAAOA,IAAP,EAAa,CAAb,EAAgB,CAAC,EAAjB;AACAF,MAAAA,CAAC,CAACc,IAAF,CAAO,OAAP;AACAd,MAAAA,CAAC,CAACe,SAAF,CAAYf,CAAC,CAACgB,MAAd,EAAsBhB,CAAC,CAACgB,MAAxB;AACD,KAVD;;AAYAhB,IAAAA,CAAC,CAACiB,aAAF,GAAkB,YAAM;AACtBjB,MAAAA,CAAC,CAACkB,YAAF,CAAetB,CAAf,EAAkBC,CAAlB;AACD,KAFD;AAGD,GAvCqD;AAAA,CAAtD;;AAyCA,eAAeF,mBAAf","sourcesContent":["/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5, { Font } from \"p5\";\n\n// Begin Component\n// __________________________________________________________________________\n\nexport type LXLT_DharmaCanvas = {\n  W: number;\n  H: number;\n  ID: number;\n  BG: string;\n};\n\nexport type LXLT_DharmaCanvasDisplay = (\n  W: number,\n  H: number,\n  ID: number,\n  BG: string\n) => (p: p5) => void;\n\n\nconst DharmaCanvasDisplay: LXLT_DharmaCanvasDisplay = (W, H, ID, BG) => (\n  p: p5\n) => {\n  // _________________________________________________\n  // Config\n  let dharmaFont: Font;\n  let text = \"LAXALT\";\n\n  // _________________________________________________\n  // Preload\n  p.preload = () => {\n    dharmaFont = p.loadFont(`/fonts/dharma/dharma_regular.ttf`);\n  };\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.noStroke();\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    // rect gives us some geometry on the screen\n\n    p.background(BG);\n    p.textFont(dharmaFont);\n    p.textLeading(0);\n    p.textSize(H * 1.25);\n    p.text(text, 0, -40);\n    p.fill(\"black\");\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default DharmaCanvasDisplay;\n"]},"metadata":{},"sourceType":"module"}