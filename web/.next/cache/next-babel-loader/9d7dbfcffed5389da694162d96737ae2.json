{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx\";\n// Core\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\n// Styles\nimport { GlobalSidebarPaneOffsetVariables, LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nexport const LayeredSidebar = ({\n  addClass,\n  panes\n}) => {\n  if (panes) {\n    const {\n      0: isHovered,\n      1: setHover\n    } = useState(false);\n    return /*#__PURE__*/_jsxDEV(LayeredSidebarStyle, {\n      className: `${LayeredSidebarClassName} ${addClass && addClass}`,\n      children: [/*#__PURE__*/_jsxDEV(GlobalSidebarPaneOffsetVariables, {\n        panes: panes.length,\n        isHovered: isHovered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${LayeredSidebarClassName}__inner`,\n        children: panes.map((pane, idx) => {\n          let paneItemsMajor = pane.items ? pane.items.filter(item => item.isMajor) : [];\n          let paneItemsMinor = pane.items ? pane.items.filter(item => !item.isMajor) : [];\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${LayeredSidebarClassName}__pane`,\n              onMouseEnter: () => idx == panes.length - 1 ? null : setHover(true),\n              onMouseLeave: () => idx == panes.length - 1 ? null : setHover(false),\n              children: [pane.header && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${LayeredSidebarClassName}__pane__header`,\n                children: pane.header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), pane.items && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [paneItemsMajor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`,\n                  children: paneItemsMajor.map((paneItem, idxx) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          children: paneItem.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 99,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 35\n                      }, this)\n                    }, idxx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this), paneItemsMinor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`,\n                  children: paneItemsMinor.map((paneItem, idxx) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          children: paneItem.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 35\n                      }, this)\n                    }, idxx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx"],"names":["Link","React","useState","GlobalSidebarPaneOffsetVariables","LayeredSidebarClassName","LayeredSidebarStyle","LayeredSidebar","addClass","panes","isHovered","setHover","length","map","pane","idx","paneItemsMajor","items","filter","item","isMajor","paneItemsMinor","header","paneItem","idxx","href","label"],"mappings":"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","sourcesContent":["// Core\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\n\n// Styles\nimport {\n  GlobalSidebarPaneOffsetVariables,\n  LayeredSidebarClassName,\n  LayeredSidebarStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_SidebarPaneItem = {\n  label: string;\n  href: string;\n  isMajor: boolean;\n};\n\nexport type LXLT_SidebarPane = {\n  header?: string;\n  items?: LXLT_SidebarPaneItem[];\n};\n\nexport type LXLT_LayeredSidebar = {\n  addClass?: string;\n  panes?: LXLT_SidebarPane[];\n};\n\n// Begin Data\n// __________________________________________________________________________________________\n\nexport const LayeredSidebar: React.FunctionComponent<LXLT_LayeredSidebar> = ({\n  addClass,\n  panes,\n}) => {\n  if (panes) {\n    const [isHovered, setHover] = useState(false);\n\n    return (\n      <LayeredSidebarStyle\n        className={`${LayeredSidebarClassName} ${addClass && addClass}`}\n      >\n        <GlobalSidebarPaneOffsetVariables\n          panes={panes.length}\n          isHovered={isHovered}\n        />\n\n        <div className={`${LayeredSidebarClassName}__inner`}>\n          {panes.map((pane: LXLT_SidebarPane, idx: number) => {\n            let paneItemsMajor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => item.isMajor)\n              : [];\n\n            let paneItemsMinor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => !item.isMajor)\n              : [];\n\n            return (\n              <>\n                {/* ____________________________________________________________ */}\n                {/* Navigaton Pane */}\n                <div\n                  className={`${LayeredSidebarClassName}__pane`}\n                  onMouseEnter={() => idx == panes.length - 1 ? null : setHover(true)}\n                  onMouseLeave={() => idx == panes.length - 1 ? null : setHover(false)}\n                  key={idx}\n                >\n                  {/* ____________________________________________________________ */}\n                  {/* List header */}\n                  {pane.header && (\n                    <div className={`${LayeredSidebarClassName}__pane__header`}>\n                      {pane.header}\n                    </div>\n                  )}\n\n                  {/* ____________________________________________________________ */}\n                  {/* List items */}\n                  {pane.items && (\n                    <>\n                      {/* ____________________________________________________________ */}\n                      {/* Major list items */}\n                      {paneItemsMajor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`}\n                        >\n                          {paneItemsMajor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n\n                      {/* ____________________________________________________________ */}\n                      {/* Minor list items */}\n                      {paneItemsMinor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`}\n                        >\n                          {paneItemsMinor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n                    </>\n                  )}\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </LayeredSidebarStyle>\n    );\n  } else {\n    return null;\n  }\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}