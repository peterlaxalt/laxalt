{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/_interactive/DharmaCounter/DharmaCounter.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from \"react\";\nimport { DharmaTypeClassName, DharmaTypeStyle } from \"../../_svg/DharmaType/styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaCounter\n * @author Peter Laxalt\n *\n */\nexport var DharmaCounter =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(DharmaCounter, _React$PureComponent);\n\n  function DharmaCounter(props) {\n    var _this;\n\n    _classCallCheck(this, DharmaCounter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DharmaCounter).call(this, props));\n    _this.state = {\n      characters: [],\n      viewBoxHeight: 0,\n      viewBoxWidth: 0,\n      characterWidth: 0,\n      isInitialized: false\n    };\n    return _this;\n  }\n\n  _createClass(DharmaCounter, [{\n    key: \"render\",\n    value: function render() {\n      var text = this.props.text;\n      var viewBoxHeight = 173.21;\n      var viewBoxWidth = 215.21;\n      var characterArray = text.split(\"\");\n      var characterCount = characterArray.length;\n      var characterWidth = viewBoxWidth / characterCount;\n      console.log(\"characterArray / \", characterArray);\n      console.log(\"characterCount / \", characterCount);\n      return __jsx(DharmaTypeStyle, {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 \".concat(viewBoxWidth, \" \").concat(viewBoxHeight),\n        preserveAspectRatio: \"none\",\n        className: \"\".concat(DharmaTypeClassName, \" \").concat(DharmaTypeClassName, \"--couter\"),\n        style: _defineProperty({}, \"--\".concat(DharmaTypeClassName, \"-font-size\"), \"\".concat(viewBoxHeight, \"px\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, characterArray.map(function (_char, idx) {\n        return __jsx(\"g\", {\n          className: \"\".concat(DharmaTypeClassName, \"__character-wrapper\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, __jsx(\"text\", {\n          className: \"\".concat(DharmaTypeClassName, \"__character\"),\n          transform: \"translate(\".concat(characterWidth * idx, \" 170.53) scale(1.13, 1.38)\"),\n          style: _defineProperty({}, \"--\".concat(DharmaTypeClassName, \"-key\"), idx),\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, __jsx(\"tspan\", {\n          className: \"\".concat(DharmaTypeClassName, \"__letter\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, _char)));\n      })));\n    }\n  }]);\n\n  return DharmaCounter;\n}(React.PureComponent);","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/_interactive/DharmaCounter/DharmaCounter.tsx"],"names":["React","DharmaTypeClassName","DharmaTypeStyle","DharmaCounter","props","state","characters","viewBoxHeight","viewBoxWidth","characterWidth","isInitialized","text","characterArray","split","characterCount","length","console","log","map","char","idx","PureComponent"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,eAFF,QAGO,mCAHP,C,CAKA;AACA;;AAsBA;AACA;;AAEA;;;;;AAKA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAIE,yBAAYC,KAAZ,EAAuC;AAAA;;AAAA;;AACrC,uFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAGXC,MAAAA,aAAa,EAAE,CAHJ;AAIXC,MAAAA,YAAY,EAAE,CAJH;AAKXC,MAAAA,cAAc,EAAE,CALL;AAOXC,MAAAA,aAAa,EAAE;AAPJ,KAAb;AAHqC;AAYtC;;AAhBH;AAAA;AAAA,6BAkBW;AAAA,UACDC,IADC,GACQ,KAAKP,KADb,CACDO,IADC;AAGP,UAAIJ,aAAa,GAAG,MAApB;AACA,UAAIC,YAAY,GAAG,MAAnB;AAEA,UAAII,cAAc,GAAGD,IAAI,CAACE,KAAL,CAAW,EAAX,CAArB;AACA,UAAIC,cAAc,GAAGF,cAAc,CAACG,MAApC;AACA,UAAIN,cAAc,GAAGD,YAAY,GAAGM,cAApC;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,cAAjC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,cAAjC;AAEA,aACE,MAAC,eAAD;AACE,QAAA,KAAK,EAAC,4BADR;AAEE,QAAA,OAAO,gBAASN,YAAT,cAAyBD,aAAzB,CAFT;AAGE,QAAA,mBAAmB,EAAC,MAHtB;AAIE,QAAA,SAAS,YAAKN,mBAAL,cAA4BA,mBAA5B,aAJX;AAKE,QAAA,KAAK,kCACGA,mBADH,2BAC+CM,aAD/C,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGK,cAAc,CAACM,GAAf,CAAmB,UAACC,KAAD,EAAeC,GAAf,EAA+B;AACjD,eACE;AAAG,UAAA,SAAS,YAAKnB,mBAAL,wBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,YAAKA,mBAAL,gBADX;AAEE,UAAA,SAAS,sBACPQ,cAAc,GAAGW,GADV,+BAFX;AAKE,UAAA,KAAK,kCACGnB,mBADH,WACsCmB,GADtC,CALP;AAQE,UAAA,GAAG,EAAEA,GARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAUE;AAAO,UAAA,SAAS,YAAKnB,mBAAL,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGkB,KADH,CAVF,CADF,CADF;AAkBD,OAnBA,CADH,CATF,CADF;AAkCD;AAjEH;;AAAA;AAAA,EAAmCnB,KAAK,CAACqB,aAAzC","sourcesContent":["// Core\nimport React from \"react\";\nimport {\n  DharmaTypeClassName,\n  DharmaTypeStyle,\n} from \"../../_svg/DharmaType/styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_DharmaCounter = {\n  text: string;\n};\n\ntype LXLT_DharmaCounterState = {\n  characters: LXLT_DharmaChar[];\n\n  viewBoxHeight: number;\n  viewBoxWidth: number;\n\n  characterWidth: number;\n\n  isInitialized: boolean;\n};\n\ntype LXLT_DharmaChar = {\n  letter: string;\n  count: number;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaCounter\n * @author Peter Laxalt\n *\n */\nexport class DharmaCounter extends React.PureComponent<\n  LXLT_DharmaCounter,\n  LXLT_DharmaCounterState\n> {\n  constructor(props: LXLT_DharmaCounter) {\n    super(props);\n\n    this.state = {\n      characters: [],\n\n      viewBoxHeight: 0,\n      viewBoxWidth: 0,\n      characterWidth: 0,\n\n      isInitialized: false,\n    };\n  }\n\n  render() {\n    let { text } = this.props;\n\n    let viewBoxHeight = 173.21;\n    let viewBoxWidth = 215.21;\n\n    let characterArray = text.split(\"\");\n    let characterCount = characterArray.length;\n    let characterWidth = viewBoxWidth / characterCount;\n\n    console.log(\"characterArray / \", characterArray);\n    console.log(\"characterCount / \", characterCount);\n\n    return (\n      <DharmaTypeStyle\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n        preserveAspectRatio=\"none\"\n        className={`${DharmaTypeClassName} ${DharmaTypeClassName}--couter`}\n        style={{\n          [`--${DharmaTypeClassName}-font-size` as any]: `${viewBoxHeight}px`,\n        }}\n      >\n        <g>\n          {characterArray.map((char: string, idx: number) => {\n            return (\n              <g className={`${DharmaTypeClassName}__character-wrapper`}>\n                <text\n                  className={`${DharmaTypeClassName}__character`}\n                  transform={`translate(${\n                    characterWidth * idx\n                  } 170.53) scale(1.13, 1.38)`}\n                  style={{\n                    [`--${DharmaTypeClassName}-key` as any]: idx,\n                  }}\n                  key={idx}\n                >\n                  <tspan className={`${DharmaTypeClassName}__letter`}>\n                    {char}\n                  </tspan>\n                </text>\n              </g>\n            );\n          })}\n        </g>\n      </DharmaTypeStyle>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}