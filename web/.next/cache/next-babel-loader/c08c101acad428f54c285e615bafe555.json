{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx\";\n// Core\nimport gsap from \"gsap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { SiteProjects } from \"../../../constants/site/Settings\";\nimport { isVisible } from \"../../../utils/isVisible\"; // Components\n// Styles\n\nimport { ProjectScrollBlurOverlayStyles, ProjectScrollSectionClassName, ProjectScrollSectionStyle, ScrollCardClassName, ScrollCardStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Component\n// __________________________________________________________________________________________\nlet lastTranslateX = 0;\nexport const ScrollCard = /*#__PURE__*/React.memo(({\n  item,\n  count,\n  total\n}) => {\n  let {\n    cover\n  } = item;\n  const ScrollCardRef = useRef();\n  const isCurrentlyVisible = isVisible(ScrollCardRef);\n  return /*#__PURE__*/_jsxDEV(ScrollCardStyle, {\n    ref: ScrollCardRef,\n    className: `${ScrollCardClassName} ${ScrollCardClassName}--${isCurrentlyVisible ? `is-visible` : `is-not-visible`}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${ScrollCardClassName}__inner`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ScrollCardClassName}__row ${ScrollCardClassName}__row--top`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-left`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row`,\n            children: [\"No \", count, \" / \", total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-right`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row`,\n            children: item.duration && item.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ScrollCardClassName}__row ${ScrollCardClassName}__row--center`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__image-wrapper`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: `${ScrollCardClassName}__image ${ScrollCardClassName}__image--filtered`,\n            src: cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `${ScrollCardClassName}__image ${ScrollCardClassName}__image--normal`,\n            src: cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ScrollCardClassName}__row ${ScrollCardClassName}__row--bottom`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-left`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor ${ScrollCardClassName}__col__content-row--tag-list`,\n            children: item.categories.map((category, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [category.name, \" \", idx + 1 !== item.categories.length ? \"/\" + \" \" : \"\"]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-right`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`,\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor`,\n            children: item.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n});\nexport const ProjectScrollSection = /*#__PURE__*/React.memo(({\n  addClass = \"\"\n}) => {\n  const {\n    0: dynamicHeight,\n    1: setDynamicHeight\n  } = useState(null);\n  const {\n    0: translateX,\n    1: setTranslateX\n  } = useState(0);\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState(0);\n  const {\n    0: isBreakPoint,\n    1: setBreakPoint\n  } = useState(false);\n  const {\n    0: isScrolled,\n    1: setScrolled\n  } = useState(false);\n  const containerRef = useRef();\n  const objectRef = useRef();\n  let currentTranslation = 0;\n  let boundingClientX = 0;\n\n  const calcDynamicHeight = objectWidth => {\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    return objectWidth - vw + vh + 300;\n  };\n\n  const handleDynamicHeight = (ref, setDynamicHeight) => {\n    const objectWidth = ref.current.scrollWidth;\n    const dynamicHeight = calcDynamicHeight(objectWidth);\n    setDynamicHeight(dynamicHeight);\n  };\n\n  const applyScrollListener = (ref, setTranslateX) => {\n    window.addEventListener(\"scroll\", () => {\n      const offsetTop = ref && ref.current ? -ref.current.offsetTop : 0; // setDharmaPaused(offsetTop < windowSize / -2);\n      // setTranslateX(offsetTop);\n\n      gsap.to(objectRef.current, {\n        x: offsetTop,\n        transition: 0.1,\n        // duration: 0.02,\n        ease: \"sine.out\"\n      });\n\n      if (offsetTop < window.innerWidth / -2) {\n        setBreakPoint(true);\n      } else {\n        setBreakPoint(false);\n      }\n\n      if (offsetTop < -100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n\n      window.dharmaPaused = offsetTop < window.innerWidth / -2;\n    });\n  };\n\n  const resizeHandler = () => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    setWindowSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    handleDynamicHeight(objectRef, setDynamicHeight);\n    window.addEventListener(\"resize\", resizeHandler);\n    applyScrollListener(containerRef, setTranslateX);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectScrollBlurOverlayStyles, {\n      isBreakpoint: isBreakPoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProjectScrollSectionStyle, {\n      className: `${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${isScrolled ? `is-scrolled` : `is-not-scrolled`} ${ProjectScrollSectionClassName}--${isBreakPoint ? `is-at-breakpoint` : `is-not-at-breakpoint`} ${ProjectScrollSectionClassName}--${boundingClientX > lastTranslateX ? `is-at-end` : `is-not-at-end`} ${addClass && addClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${ProjectScrollSectionClassName}__outer`,\n        style: {\n          height: `${dynamicHeight}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ProjectScrollSectionClassName}__sticky-wrapper`,\n          ref: containerRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${ProjectScrollSectionClassName}__x-translate-wrapper` // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n            ,\n            ref: objectRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${ProjectScrollSectionClassName}__horizontal-wrapper`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${ProjectScrollSectionClassName}__content-wrapper`,\n                children: SiteProjects.map((item, idx) => {\n                  return /*#__PURE__*/_jsxDEV(ScrollCard, {\n                    count: idx + 1,\n                    total: SiteProjects.length,\n                    item: item\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}); // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/Sections/ProjectScrollSection/ProjectScrollSection.tsx"],"names":["gsap","React","useEffect","useRef","useState","SiteProjects","isVisible","ProjectScrollBlurOverlayStyles","ProjectScrollSectionClassName","ProjectScrollSectionStyle","ScrollCardClassName","ScrollCardStyle","lastTranslateX","ScrollCard","memo","item","count","total","cover","ScrollCardRef","isCurrentlyVisible","duration","name","categories","map","category","idx","length","type","location","ProjectScrollSection","addClass","dynamicHeight","setDynamicHeight","translateX","setTranslateX","windowSize","setWindowSize","isBreakPoint","setBreakPoint","isScrolled","setScrolled","containerRef","objectRef","currentTranslation","boundingClientX","calcDynamicHeight","objectWidth","vw","window","innerWidth","vh","innerHeight","handleDynamicHeight","ref","current","scrollWidth","applyScrollListener","addEventListener","offsetTop","to","x","transition","ease","dharmaPaused","resizeHandler","height"],"mappings":"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","sourcesContent":["// Core\nimport gsap from \"gsap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  LXLT_Category,\n  LXLT_Project,\n  SiteProjects,\n} from \"../../../constants/site/Settings\";\nimport { Theme } from \"../../../constants/Theme\";\nimport { isVisible, percentIsVisible } from \"../../../utils/isVisible\";\n\n// Components\n\n// Styles\nimport {\n  ProjectScrollBlurOverlayStyles,\n  ProjectScrollSectionClassName,\n  ProjectScrollSectionGlobalStyles,\n  ProjectScrollSectionStyle,\n  ScrollCardClassName,\n  ScrollCardStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_ProjectScrollSection = {\n  addClass?: string;\n};\n\nexport type LXLT_ScrollCard = {\n  item: LXLT_Project;\n  count?: number;\n  total?: number;\n};\n\ndeclare global {\n  interface Window {\n    dharmaPaused: boolean;\n  }\n}\n\n// Begin Component\n// __________________________________________________________________________________________\n\nlet lastTranslateX: number = 0;\n\nexport const ScrollCard: React.FunctionComponent<LXLT_ScrollCard> = React.memo(\n  ({ item, count, total }) => {\n    let { cover } = item;\n    const ScrollCardRef = useRef<HTMLDivElement>();\n    const isCurrentlyVisible = isVisible(ScrollCardRef);\n\n    return (\n      <ScrollCardStyle\n        ref={ScrollCardRef}\n        className={`${ScrollCardClassName} ${ScrollCardClassName}--${\n          isCurrentlyVisible ? `is-visible` : `is-not-visible`\n        }`}\n      >\n        <div className={`${ScrollCardClassName}__inner`}>\n          {/* ____________________________________________________________________ */}\n          {/* Card top */}\n          <div\n            className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--top`}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Card top left col */}\n            <div\n              className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-left`}\n            >\n              <span className={`${ScrollCardClassName}__col__content-row`}>\n                No {count} / {total}\n              </span>\n            </div>\n\n            {/* ____________________________________________________________________ */}\n            {/* Card top right col */}\n            <div\n              className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--top-right`}\n            >\n              <span className={`${ScrollCardClassName}__col__content-row`}>\n                {item.duration && item.duration}\n              </span>\n            </div>\n          </div>\n\n          {/* ____________________________________________________________________ */}\n          {/* Card center */}\n          <div\n            className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--center`}\n          >\n            <div className={`${ScrollCardClassName}__image-wrapper`}>\n              <img\n                className={`${ScrollCardClassName}__image ${ScrollCardClassName}__image--filtered`}\n                src={cover}\n              />\n              <img\n                className={`${ScrollCardClassName}__image ${ScrollCardClassName}__image--normal`}\n                src={cover}\n              />\n            </div>\n          </div>\n\n          {/* ____________________________________________________________________ */}\n          {/* Card bottom */}\n          <div\n            className={`${ScrollCardClassName}__row ${ScrollCardClassName}__row--bottom`}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Card bottom left col */}\n            <div\n              className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-left`}\n            >\n              <strong\n                className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`}\n              >\n                {item.name}\n              </strong>\n              <span\n                className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor ${ScrollCardClassName}__col__content-row--tag-list`}\n              >\n                {item.categories.map((category: LXLT_Category, idx: number) => {\n                  return (\n                    <span key={idx}>\n                      {category.name}{\" \"}\n                      {idx + 1 !== item.categories.length ? \"/\" + \" \" : \"\"}\n                    </span>\n                  );\n                })}\n              </span>\n            </div>\n\n            {/* ____________________________________________________________________ */}\n            {/* Card bottom right col */}\n            <div\n              className={`${ScrollCardClassName}__col ${ScrollCardClassName}__col--bottom-right`}\n            >\n              <span\n                className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-major`}\n              >\n                {item.type}\n              </span>\n              <span\n                className={`${ScrollCardClassName}__col__content-row ${ScrollCardClassName}__col__content-row--content-minor`}\n              >\n                {item.location}\n              </span>\n            </div>\n          </div>\n        </div>\n      </ScrollCardStyle>\n    );\n  }\n);\n\nexport const ProjectScrollSection: React.FunctionComponent<LXLT_ProjectScrollSection> = React.memo(\n  ({ addClass = \"\" }) => {\n    const [dynamicHeight, setDynamicHeight] = useState(null);\n    const [translateX, setTranslateX] = useState(0);\n    const [windowSize, setWindowSize] = useState(0);\n    const [isBreakPoint, setBreakPoint] = useState(false);\n    const [isScrolled, setScrolled] = useState(false);\n\n    const containerRef = useRef<HTMLDivElement>();\n    const objectRef = useRef<HTMLDivElement>();\n\n    let currentTranslation = 0;\n    let boundingClientX = 0;\n\n    const calcDynamicHeight = (objectWidth: number) => {\n      const vw = window.innerWidth;\n      const vh = window.innerHeight;\n      return objectWidth - vw + vh + 300;\n    };\n\n    const handleDynamicHeight = (\n      ref: React.RefObject<HTMLDivElement>,\n      setDynamicHeight: (dynamicHeight: number) => void\n    ) => {\n      const objectWidth: number = ref.current.scrollWidth;\n      const dynamicHeight: number = calcDynamicHeight(objectWidth);\n      setDynamicHeight(dynamicHeight);\n    };\n\n    const applyScrollListener = (\n      ref: React.RefObject<HTMLDivElement>,\n      setTranslateX: (translateX: number) => void\n    ) => {\n      window.addEventListener(\"scroll\", () => {\n        const offsetTop: number =\n          ref && ref.current ? -ref.current.offsetTop : 0;\n\n        // setDharmaPaused(offsetTop < windowSize / -2);\n        // setTranslateX(offsetTop);\n\n        gsap.to(objectRef.current, {\n          x: offsetTop,\n          transition: 0.1,\n          // duration: 0.02,\n          ease: \"sine.out\",\n        });\n\n        if (offsetTop < window.innerWidth / -2) {\n          setBreakPoint(true);\n        } else {\n          setBreakPoint(false);\n        }\n\n        if (offsetTop < -100) {\n          setScrolled(true);\n        } else {\n          setScrolled(false);\n        }\n\n        window.dharmaPaused = offsetTop < window.innerWidth / -2;\n      });\n    };\n\n    const resizeHandler = () => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      setWindowSize(window.innerWidth);\n    };\n\n    useEffect(() => {\n      handleDynamicHeight(objectRef, setDynamicHeight);\n      window.addEventListener(\"resize\", resizeHandler);\n      applyScrollListener(containerRef, setTranslateX);\n    }, []);\n\n    return (\n      <>\n        {/* <ProjectScrollSectionGlobalStyles isScrolled={isBreakPoint} /> */}\n        <ProjectScrollBlurOverlayStyles isBreakpoint={isBreakPoint} />\n        <ProjectScrollSectionStyle\n          className={`${ProjectScrollSectionClassName} ${ProjectScrollSectionClassName}--${\n            isScrolled ? `is-scrolled` : `is-not-scrolled`\n          } ${ProjectScrollSectionClassName}--${\n            isBreakPoint ? `is-at-breakpoint` : `is-not-at-breakpoint`\n          } ${ProjectScrollSectionClassName}--${\n            boundingClientX > lastTranslateX ? `is-at-end` : `is-not-at-end`\n          } ${addClass && addClass}`}\n        >\n          {/* ____________________________________________________________________ */}\n          {/* Outer Container with Dynamic Height */}\n          <div\n            className={`${ProjectScrollSectionClassName}__outer`}\n            style={{ height: `${dynamicHeight}px` }}\n          >\n            {/* ____________________________________________________________________ */}\n            {/* Sticky Wrapper */}\n            <div\n              className={`${ProjectScrollSectionClassName}__sticky-wrapper`}\n              ref={containerRef}\n            >\n              {/* ____________________________________________________________________ */}\n              {/* Translation Wrapper */}\n              <div\n                className={`${ProjectScrollSectionClassName}__x-translate-wrapper`}\n                // style={{ transform: `translate3d(${translateX}px, 0px, 0px)` }}\n                ref={objectRef}\n              >\n                {/* ____________________________________________________________________ */}\n                {/* Horizontal Wrapper */}\n                <div\n                  className={`${ProjectScrollSectionClassName}__horizontal-wrapper`}\n                >\n                  {/* ____________________________________________________________________ */}\n                  {/* Content Wrapper */}\n                  <div\n                    className={`${ProjectScrollSectionClassName}__content-wrapper`}\n                  >\n                    {SiteProjects.map((item: LXLT_Project, idx: number) => {\n                      return (\n                        <ScrollCard\n                          key={idx}\n                          count={idx + 1}\n                          total={SiteProjects.length}\n                          item={item}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ProjectScrollSectionStyle>\n      </>\n    );\n  }\n);\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}