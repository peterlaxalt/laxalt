{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx\";\n// Core\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\n// Styles\nimport { GlobalSidebarPaneOffsetVariables, LayeredSidebarClassName, LayeredSidebarStyle } from \"./styles.scss\"; // Begin Types\n// __________________________________________________________________________________________\n\n// Begin Data\n// __________________________________________________________________________________________\nexport const LayeredSidebar = ({\n  addClass,\n  panes\n}) => {\n  const {\n    0: panesCount,\n    1: setCount\n  } = useState(0);\n\n  if (panes) {\n    return /*#__PURE__*/_jsxDEV(LayeredSidebarStyle, {\n      className: `${LayeredSidebarClassName} ${addClass && addClass}`,\n      onMouseEnter: () => setCount(panesCount - 1),\n      children: [/*#__PURE__*/_jsxDEV(GlobalSidebarPaneOffsetVariables, {\n        panes: panes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${LayeredSidebarClassName}__inner`,\n        children: panes.map((pane, idx) => {\n          let paneItemsMajor = pane.items ? pane.items.filter(item => item.isMajor) : [];\n          let paneItemsMinor = pane.items ? pane.items.filter(item => !item.isMajor) : [];\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${LayeredSidebarClassName}__pane`,\n              children: [pane.header && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${LayeredSidebarClassName}__pane__header`,\n                children: pane.header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), pane.items && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [paneItemsMajor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`,\n                  children: paneItemsMajor.map((paneItem, idxx) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          children: paneItem.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 35\n                      }, this)\n                    }, idxx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), paneItemsMinor.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: `${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`,\n                  children: paneItemsMinor.map((paneItem, idxx) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${paneItem.isMajor ? \"major\" : \"minor\"}`,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: paneItem.href,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          children: paneItem.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 120,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 35\n                      }, this)\n                    }, idxx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}; // End Component\n// ______________________________________________________________________________","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/components/LayeredSidebar/LayeredSidebar.tsx"],"names":["Link","React","useState","GlobalSidebarPaneOffsetVariables","LayeredSidebarClassName","LayeredSidebarStyle","LayeredSidebar","addClass","panes","panesCount","setCount","length","map","pane","idx","paneItemsMajor","items","filter","item","isMajor","paneItemsMinor","header","paneItem","idxx","href","label"],"mappings":"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","sourcesContent":["// Core\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { __DEBUG__ } from \"../../constants/site/Settings\";\n\n// Styles\nimport {\n  GlobalSidebarPaneOffsetVariables,\n  LayeredPaneCollapsedPaneWidth,\n  LayeredSidebarClassName,\n  LayeredSidebarStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\nexport type LXLT_SidebarPaneItem = {\n  label: string;\n  href: string;\n  isMajor: boolean;\n};\n\nexport type LXLT_SidebarPane = {\n  header?: string;\n  items?: LXLT_SidebarPaneItem[];\n};\n\nexport type LXLT_LayeredSidebar = {\n  addClass?: string;\n  panes?: LXLT_SidebarPane[];\n};\n\n// Begin Data\n// __________________________________________________________________________________________\n\nexport const LayeredSidebar: React.FunctionComponent<LXLT_LayeredSidebar> = ({\n  addClass,\n  panes,\n}) => {\n  const [panesCount, setCount] = useState(0);\n\n  if (panes) {\n    return (\n      <LayeredSidebarStyle\n        className={`${LayeredSidebarClassName} ${addClass && addClass}`}\n        onMouseEnter={() => setCount(panesCount - 1)}\n      >\n\n        <GlobalSidebarPaneOffsetVariables panes={panes.length} />\n\n        <div className={`${LayeredSidebarClassName}__inner`}>\n          {panes.map((pane: LXLT_SidebarPane, idx: number) => {\n            let paneItemsMajor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => item.isMajor)\n              : [];\n\n            let paneItemsMinor: LXLT_SidebarPaneItem[] = pane.items\n              ? pane.items.filter((item: LXLT_SidebarPaneItem) => !item.isMajor)\n              : [];\n\n            return (\n              <>\n                {/* ____________________________________________________________ */}\n                {/* Navigaton Pane */}\n                <div className={`${LayeredSidebarClassName}__pane`} key={idx}>\n                  {/* ____________________________________________________________ */}\n                  {/* List header */}\n                  {pane.header && (\n                    <div className={`${LayeredSidebarClassName}__pane__header`}>\n                      {pane.header}\n                    </div>\n                  )}\n\n                  {/* ____________________________________________________________ */}\n                  {/* List items */}\n                  {pane.items && (\n                    <>\n                      {/* ____________________________________________________________ */}\n                      {/* Major list items */}\n                      {paneItemsMajor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--major`}\n                        >\n                          {paneItemsMajor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n\n                      {/* ____________________________________________________________ */}\n                      {/* Minor list items */}\n                      {paneItemsMinor.length > 0 && (\n                        <ul\n                          className={`${LayeredSidebarClassName}__pane__list ${LayeredSidebarClassName}__pane__list--minor`}\n                        >\n                          {paneItemsMinor.map(\n                            (paneItem: LXLT_SidebarPaneItem, idxx: number) => {\n                              return (\n                                <li\n                                  className={`${LayeredSidebarClassName}__pane__list__item ${LayeredSidebarClassName}__pane__list__item--${\n                                    paneItem.isMajor ? \"major\" : \"minor\"\n                                  }`}\n                                  key={idxx}\n                                >\n                                  <Link href={paneItem.href}>\n                                    <a>{paneItem.label}</a>\n                                  </Link>\n                                </li>\n                              );\n                            }\n                          )}\n                        </ul>\n                      )}\n                    </>\n                  )}\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </LayeredSidebarStyle>\n    );\n  } else {\n    return null;\n  }\n};\n\n// End Component\n// ______________________________________________________________________________\n"]},"metadata":{},"sourceType":"module"}