{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[10],{\"19DN\":function(e,n,t){\"use strict\";t.r(n);var r=t(\"rePB\");function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){Object(r.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}n.default=function(e,n,t,r){return function(t){var o,c=\"LAXALT\".split(\"\"),s=c.map((function(e,n){return{letter:e,count:1,idx:n,copies:5,copiesLastVisible:0,copiesAreVisible:!1,countIsIncrementing:!0,countIsDecrementing:!1,copiesAreIncrementing:!0,copiesAreDecrementing:!1}})),a=c.length,u=e/a,l=1.25*n;console.log(l,\"characterSize\");var m=0;t.preload=function(){o=t.loadFont(\"/fonts/dharma/dharma_regular.ttf\")},t.setup=function(){t.createCanvas(e,n),t.frameRate(10)};t.draw=function(){t.background(r.background),t.textFont(o),t.textSize(l),t.textAlign(t.CENTER,t.CENTER),t.fill(\"\".concat(r.foreground)),t.strokeWeight(4),t.stroke(r.background),n&&e&&s.map((function(e,r){t.scale(1,1);var o=Math.random()<=.5;o&&function(e,n){e.copies<12&&e.copiesAreIncrementing?(s[n]=i(i({},e),{},{copies:e.copies+1}),t.millis()):12===e.copies?(s[n]=i(i({},e),{},{copies:e.copies-1,copiesAreIncrementing:!1,copiesAreDecrementing:!0}),t.millis()):e.copies>1&&e.copiesAreDecrementing?(s[n]=i(i({},e),{},{copies:e.copies-1,copiesAreDecrementing:!0}),t.millis()):1===e.copies&&e.copiesAreDecrementing&&(s[n]=i(i({},e),{},{copies:e.copies+1,copiesAreIncrementing:!0,copiesAreDecrementing:!1}),t.millis())}(e,r),o&&t.millis()-m>3e3&&function(e,n){e.count<3&&e.countIsIncrementing?(s[n]=i(i({},e),{},{count:e.count+1}),m=t.millis()):3===e.count?(s[n]=i(i({},e),{},{count:e.count-1,countIsIncrementing:!1,countIsDecrementing:!0}),m=t.millis()):e.count>1&&e.countIsDecrementing?(s[n]=i(i({},e),{},{count:e.count-1,countIsDecrementing:!0}),m=t.millis()):1===e.count&&e.countIsDecrementing&&(s[n]=i(i({},e),{},{count:e.count+1,countIsIncrementing:!0,countIsDecrementing:!1}),m=t.millis())}(e,r);var c=Array.from(Array(e.count).keys());(c=c.map((function(e){return e+1}))).map((function(o,i){var c=1/(.95*e.count),s=1==e.count?n/2.25:l/2.75+l/1.36*i,a=Array.from(Array(e.copies).keys());(a=a.map((function(e){return e+1}))).map((function(n,o){var i=function(e){return u*e+u/1.5+6-60}(r)+6*n,a=s-6*n;t.push(),t.scale(1,c),t.text(e.letter,i,a),t.pop()}))}))}))},t.windowResized=function(){t.resizeCanvas(e,n)}}}},\"49Hi\":function(e,n,t){var r={\"./_scaffold-p5-canvas\":\"19DN\",\"./_scaffold-p5-canvas.tsx\":\"19DN\",\"./d1\":\"Uh2J\",\"./d1.tsx\":\"Uh2J\",\"./d2\":\"bUOA\",\"./d2.tsx\":\"bUOA\",\"./d8\":\"gOdJ\",\"./d8.js\":\"gOdJ\",\"./dharma\":\"QywH\",\"./dharma-as-canvas\":\"S+6N\",\"./dharma-as-canvas.tsx\":\"S+6N\",\"./dharma-water-distort.canvas\":\"1KAc\",\"./dharma-water-distort.canvas.tsx\":\"1KAc\",\"./dharma.tsx\":\"QywH\",\"./dharma_v0\":\"Hjf3\",\"./dharma_v0.tsx\":\"Hjf3\",\"./footer-canvas\":\"jOaG\",\"./footer-canvas.tsx\":\"jOaG\",\"./glsl\":\"iRSi\",\"./glsl.tsx\":\"iRSi\",\"./no-water-distort.canvas\":\"ChSm\",\"./no-water-distort.canvas.tsx\":\"ChSm\"};function o(e){var n=i(e);return t(n)}function i(e){if(!t.o(r,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=\"49Hi\"},ChSm:function(e,n,t){\"use strict\";t.r(n);var r=t(\"rePB\");function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){Object(r.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}n.default=function(e,n,t,r){return function(t){var r,o=\"LAXALT\".split(\"\"),c=o.map((function(e,n){return{letter:e,count:1,idx:n,copies:5,copiesLastVisible:0,copiesAreVisible:!1,countIsIncrementing:!0,countIsDecrementing:!1,copiesAreIncrementing:!0,copiesAreDecrementing:!1}})),s=o.length,a=e/s,u=1.15*n;console.log(u,\"characterSize\");var l=0;t.preload=function(){r=t.loadFont(\"/fonts/dharma/dharma_regular.ttf\")},t.setup=function(){t.createCanvas(e,n),t.frameRate(60),window.devicePixelRatio>1&&window.devicePixelRatio<3&&t.pixelDensity(1.25)};t.draw=function(){t.frameCount%10!==0||window.dharmaPaused||(t.background(window.laxaltUniversalTheme.background),t.textFont(r),t.textSize(u),t.textAlign(t.CENTER,t.CENTER),t.fill(\"\".concat(window.laxaltUniversalTheme.foreground)),t.strokeWeight(4),t.stroke(window.laxaltUniversalTheme.background),n&&e&&c.map((function(e,r){t.scale(1,1);var o=Math.random()<=.5;o&&function(e,n){e.copies<12&&e.copiesAreIncrementing?(c[n]=i(i({},e),{},{copies:e.copies+1}),t.millis()):12===e.copies?(c[n]=i(i({},e),{},{copies:e.copies-1,copiesAreIncrementing:!1,copiesAreDecrementing:!0}),t.millis()):e.copies>1&&e.copiesAreDecrementing?(c[n]=i(i({},e),{},{copies:e.copies-1,copiesAreDecrementing:!0}),t.millis()):1===e.copies&&e.copiesAreDecrementing&&(c[n]=i(i({},e),{},{copies:e.copies+1,copiesAreIncrementing:!0,copiesAreDecrementing:!1}),t.millis())}(e,r),o&&t.millis()-l>3e3&&function(e,n){e.count<3&&e.countIsIncrementing?(c[n]=i(i({},e),{},{count:e.count+1}),l=t.millis()):3===e.count?(c[n]=i(i({},e),{},{count:e.count-1,countIsIncrementing:!1,countIsDecrementing:!0}),l=t.millis()):e.count>1&&e.countIsDecrementing?(c[n]=i(i({},e),{},{count:e.count-1,countIsDecrementing:!0}),l=t.millis()):1===e.count&&e.countIsDecrementing&&(c[n]=i(i({},e),{},{count:e.count+1,countIsIncrementing:!0,countIsDecrementing:!1}),l=t.millis())}(e,r);var s=Array.from(Array(e.count).keys());(s=s.map((function(e){return e+1}))).map((function(o,i){var c=1/(.95*e.count),s=1==e.count?n/2.25:u/2.75+u/1.36*i,l=Array.from(Array(e.copies).keys());(l=l.map((function(e){return e+1}))).map((function(n,o){var i=function(e){return a*e+a/1.5+6-60}(r)+6*n,u=s-6*n;t.push(),t.scale(1,c),t.text(e.letter,i,u),t.pop()}))}))})))},t.windowResized=function(){t.resizeCanvas(e,n)}}}},iRSi:function(e,n,t){\"use strict\";t.r(n);n.default=function(e,n,t,r){return function(r){var o;r.preload=function(){o=r.loadShader(\"/shaders/ex_\".concat(t,\"/shader.vert\"),\"/shaders/ex_\".concat(t,\"/shader.frag\"))},r.setup=function(){r.createCanvas(e,n,r.WEBGL),r.noStroke()},r.draw=function(){r.shader(o),o.setUniform(\"u_resolution\",[e,n]),o.setUniform(\"u_time\",r.millis()/1e3),o.setUniform(\"u_mouse\",[r.mouseX,r.map(r.mouseY,0,n,n,0)]),r.rect(0,0,e,n)},r.windowResized=function(){r.resizeCanvas(e,n)}}}},jOaG:function(e,n,t){\"use strict\";t.r(n);n.default=function(e,n,t,r){return function(t){t.setup=function(){t.createCanvas(e,n)},t.draw=function(){t.mouseIsPressed?(t.fill(window.laxaltUniversalTheme.foreground),t.stroke(window.laxaltUniversalTheme.background),t.strokeWeight(1.5),t.ellipse(t.mouseX,t.mouseY,e/6,e/6)):0===t.mouseX&&0===t.mouseY||(t.fill(window.laxaltUniversalTheme.background),t.stroke(window.laxaltUniversalTheme.foreground),t.strokeWeight(1.5),t.ellipse(t.mouseX,t.mouseY,e/6,e/6))},t.windowResized=function(){t.resizeCanvas(e,n)}}}}}]);","map":{"version":3,"sources":["static/chunks/ae16a482170bdfaeec3a4d24b562c304fc598f1d.a919b88c8f19ca633370.js"],"names":["window","push","19DN","module","__webpack_exports__","__webpack_require__","r","_Users_pflaxalt_Repositories_pfl_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","W","H","ID","CanvasTheme","p","dharmaFont","splitCharacterArray","split","characters","map","character","idx","letter","count","copies","copiesLastVisible","copiesAreVisible","countIsIncrementing","countIsDecrementing","copiesAreIncrementing","copiesAreDecrementing","characterCount","characterWidth","characterSize","console","log","previousCountUpdateTime","preload","loadFont","setup","createCanvas","frameRate","draw","background","textFont","textSize","textAlign","CENTER","fill","concat","foreground","strokeWeight","stroke","_char3","scale","randomCharPick","Math","random","_char2","millis","updateCopies","_char","updateCharacter","countArray","Array","from","countNumber","idxx","verticalScale","duplicateVerticalPosition","copiesArray","copyNumber","idxxx","horizontalTranslate","strokeWidth","previousHorizontalTranslation","verticalTranslate","text","pop","windowResized","resizeCanvas","49Hi","exports","./_scaffold-p5-canvas","./_scaffold-p5-canvas.tsx","./d1","./d1.tsx","./d2","./d2.tsx","./d8","./d8.js","./dharma","./dharma-as-canvas","./dharma-as-canvas.tsx","./dharma-water-distort.canvas","./dharma-water-distort.canvas.tsx","./dharma.tsx","./dharma_v0","./dharma_v0.tsx","./footer-canvas","./footer-canvas.tsx","./glsl","./glsl.tsx","./no-water-distort.canvas","./no-water-distort.canvas.tsx","webpackContext","req","id","webpackContextResolve","o","e","Error","code","resolve","ChSm","parentEl","devicePixelRatio","pixelDensity","frameCount","dharmaPaused","laxaltUniversalTheme","iRSi","BG","theShader","loadShader","WEBGL","noStroke","shader","setUniform","mouseX","mouseY","rect","jOaG","mouseIsPressed","ellipse"],"mappings":"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"},"name":"static/chunks/ae16a482170bdfaeec3a4d24b562c304fc598f1d.a919b88c8f19ca633370.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[10],{\n\n/***/ \"19DN\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_pflaxalt_Repositories_pfl_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"rePB\");\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_Users_pflaxalt_Repositories_pfl_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar P5CanvasDisplay = function P5CanvasDisplay(W, H, ID, CanvasTheme) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    // ____________________________\n    // Fonts\n    var dharmaFont; // ____________________________\n    // Typography\n\n    var text = \"LAXALT\";\n    var splitCharacterArray = text.split(\"\");\n    var characters = splitCharacterArray.map(function (character, idx) {\n      return {\n        letter: character,\n        count: 1,\n        idx: idx,\n        copies: 5,\n        copiesLastVisible: 0,\n        copiesAreVisible: false,\n        countIsIncrementing: true,\n        countIsDecrementing: false,\n        copiesAreIncrementing: true,\n        copiesAreDecrementing: false\n      };\n    });\n    var characterCount = splitCharacterArray.length;\n    var characterWidth = W / characterCount;\n    var characterSize = H * 1.25;\n    console.log(characterSize, \"characterSize\"); // ____________________________\n    // Counts\n    // let renderCount: number = 0;\n\n    var previousCountUpdateTime = 0;\n    var previousCopyUpdateTime = 0; // ____________________________\n    // Strokes\n\n    var strokeWidth = 4;\n    var strokeOffset = strokeWidth * 1.5; // ____________________________\n    // Limits\n\n    var maxCount = 3;\n    var minCount = 1;\n    var maxCopies = 12;\n    var minCopies = 1;\n    var frameRate = 10; // ____________________________\n    // Translation\n    // let previousVerticalTranslation: number = H / 2.25;\n\n    var verticalTranslationWhitespaceCompensation = 2.25;\n\n    var previousHorizontalTranslation = function previousHorizontalTranslation(idx) {\n      return -60 + (characterWidth * idx + characterWidth / 1.5 + strokeOffset);\n    }; // _________________________________________________\n    // Preload\n\n\n    p.preload = function () {\n      dharmaFont = p.loadFont(\"/fonts/dharma/dharma_regular.ttf\");\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H);\n      p.frameRate(frameRate);\n    }; // _________________________________________________\n    // Update Character\n\n\n    var updateCharacter = function updateCharacter(_char, idx) {\n      if (_char.count < maxCount && _char.countIsIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === maxCount) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsIncrementing: false,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count > minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1,\n          countIsIncrementing: true,\n          countIsDecrementing: false\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Update Copies\n\n\n    var updateCopies = function updateCopies(_char2, idx) {\n      if (_char2.copies < maxCopies && _char2.copiesAreIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === maxCopies) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreIncrementing: false,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies > minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1,\n          copiesAreIncrementing: true,\n          copiesAreDecrementing: false\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      p.background(CanvasTheme.background);\n      p.textFont(dharmaFont);\n      p.textSize(characterSize);\n      p.textAlign(p.CENTER, p.CENTER);\n      p.fill(\"\".concat(CanvasTheme.foreground));\n      p.strokeWeight(strokeWidth);\n      p.stroke(CanvasTheme.background);\n\n      if (H && W) {\n        // _________________________________________\n        // Loop through our copies\n        characters.map(function (_char3, idx) {\n          p.scale(1, 1);\n          var randomCharPick = Math.random() <= 0.5;\n\n          if (randomCharPick) {\n            updateCopies(_char3, idx);\n          }\n\n          if (randomCharPick && p.millis() - previousCountUpdateTime > 3000) {\n            updateCharacter(_char3, idx);\n          }\n\n          var countArray = Array.from(Array(_char3.count).keys());\n          countArray = countArray.map(function (countNumber) {\n            return countNumber + 1;\n          }); // _________________________________________\n          // Duplicate positions\n\n          countArray.map(function (countNumber, idxx) {\n            var verticalScale = 1 / (_char3.count * 0.95);\n            var verticalSkewDivisible = 2.75;\n            var characterSkewDivisible = 1.36;\n            var duplicateVerticalPosition = _char3.count == 1 ? H / verticalTranslationWhitespaceCompensation : characterSize / verticalSkewDivisible + characterSize / characterSkewDivisible * idxx; // _________________________________________\n            // Make copies\n\n            var copiesArray = Array.from(Array(_char3.copies).keys()); // let randomCopyPick = Math.random() <= 0.5;\n\n            copiesArray = copiesArray.map(function (copyNumber) {\n              return copyNumber + 1;\n            }); // let randomCopyPick = Math.random() <= 0.5;\n            // let copyTimer = p.millis() - previousCopiesVisibleTime > 2000;\n\n            previousCopyUpdateTime; // let isFirstCount = true;\n\n            copiesArray.map(function (copyNumber, idxxx) {\n              // let centerCoordsX = W / 2;\n              // let centerCoordsY = H / 2;\n              // let horizontalTranslate =\n              //   copyNumber !== 1\n              //     ? (previousHorizontalTranslation(idx) +\n              //         (strokeOffset / (p.mouseX / 100)) * copyNumber)\n              //     : previousHorizontalTranslation(idx) +\n              //       strokeOffset * copyNumber;\n              // let verticalTranslate =\n              //   copyNumber !== 1\n              //     ? (duplicateVerticalPosition - (strokeOffset / (p.mouseX / 100)) * copyNumber)\n              //     : duplicateVerticalPosition - strokeOffset * copyNumber;\n              var horizontalTranslate = previousHorizontalTranslation(idx) + strokeOffset * copyNumber;\n              var verticalTranslate = duplicateVerticalPosition - strokeOffset * copyNumber;\n              p.push();\n              p.scale(1, verticalScale);\n              p.text(_char3.letter, horizontalTranslate, verticalTranslate);\n              p.pop();\n            });\n          });\n        });\n      }\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (P5CanvasDisplay);\n\n/***/ }),\n\n/***/ \"49Hi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./_scaffold-p5-canvas\": \"19DN\",\n\t\"./_scaffold-p5-canvas.tsx\": \"19DN\",\n\t\"./d1\": \"Uh2J\",\n\t\"./d1.tsx\": \"Uh2J\",\n\t\"./d2\": \"bUOA\",\n\t\"./d2.tsx\": \"bUOA\",\n\t\"./d8\": \"gOdJ\",\n\t\"./d8.js\": \"gOdJ\",\n\t\"./dharma\": \"QywH\",\n\t\"./dharma-as-canvas\": \"S+6N\",\n\t\"./dharma-as-canvas.tsx\": \"S+6N\",\n\t\"./dharma-water-distort.canvas\": \"1KAc\",\n\t\"./dharma-water-distort.canvas.tsx\": \"1KAc\",\n\t\"./dharma.tsx\": \"QywH\",\n\t\"./dharma_v0\": \"Hjf3\",\n\t\"./dharma_v0.tsx\": \"Hjf3\",\n\t\"./footer-canvas\": \"jOaG\",\n\t\"./footer-canvas.tsx\": \"jOaG\",\n\t\"./glsl\": \"iRSi\",\n\t\"./glsl.tsx\": \"iRSi\",\n\t\"./no-water-distort.canvas\": \"ChSm\",\n\t\"./no-water-distort.canvas.tsx\": \"ChSm\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"49Hi\";\n\n/***/ }),\n\n/***/ \"ChSm\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_pflaxalt_Repositories_pfl_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"rePB\");\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_Users_pflaxalt_Repositories_pfl_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar DharmaCanvasDisplay = function DharmaCanvasDisplay(W, H, ID, // DharmaTheme,\nparentEl) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    var canvas; // ____________________________\n    // Fonts\n\n    var dharmaFont; // ____________________________\n    // Typography\n\n    var text = \"LAXALT\";\n    var splitCharacterArray = text.split(\"\");\n    var characters = splitCharacterArray.map(function (character, idx) {\n      return {\n        letter: character,\n        count: 1,\n        idx: idx,\n        copies: 5,\n        copiesLastVisible: 0,\n        copiesAreVisible: false,\n        countIsIncrementing: true,\n        countIsDecrementing: false,\n        copiesAreIncrementing: true,\n        copiesAreDecrementing: false\n      };\n    });\n    var characterCount = splitCharacterArray.length;\n    var characterWidth = W / characterCount;\n    var characterSize = H * 1.15;\n    var verticalSkewDivisible = 2.75;\n    var characterSkewDivisible = 1.36;\n    console.log(characterSize, \"characterSize\"); // ____________________________\n    // Counts\n    // let renderCount: number = 0;\n\n    var previousCountUpdateTime = 0;\n    var previousCopyUpdateTime = 0; // ____________________________\n    // Strokes\n\n    var strokeWidth = 4;\n    var strokeOffset = strokeWidth * 1.5; // ____________________________\n    // Limits\n\n    var maxCount = 3;\n    var minCount = 1;\n    var maxCopies = 12;\n    var minCopies = 1;\n    var frameRate = 60; // ____________________________\n    // Translation\n    // let previousVerticalTranslation: number = H / 2.25;\n\n    var verticalTranslationWhitespaceCompensation = 2.25;\n\n    var previousHorizontalTranslation = function previousHorizontalTranslation(idx) {\n      return -60 + (characterWidth * idx + characterWidth / 1.5 + strokeOffset);\n    }; // _________________________________________________\n    // Preload\n\n\n    p.preload = function () {\n      dharmaFont = p.loadFont(\"/fonts/dharma/dharma_regular.ttf\");\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      canvas = p.createCanvas(W, H); // ThreeWaterCanvas(parentEl, canvas.elt);\n\n      p.frameRate(frameRate);\n\n      if (window.devicePixelRatio > 1 && window.devicePixelRatio < 3) {\n        p.pixelDensity(1.25);\n      }\n    }; // _________________________________________________\n    // Update Character\n\n\n    var updateCharacter = function updateCharacter(_char, idx) {\n      if (_char.count < maxCount && _char.countIsIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === maxCount) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsIncrementing: false,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count > minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1,\n          countIsIncrementing: true,\n          countIsDecrementing: false\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Update Copies\n\n\n    var updateCopies = function updateCopies(_char2, idx) {\n      if (_char2.copies < maxCopies && _char2.copiesAreIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === maxCopies) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreIncrementing: false,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies > minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1,\n          copiesAreIncrementing: true,\n          copiesAreDecrementing: false\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      if (p.frameCount % 10 === 0 && !window.dharmaPaused) {\n        p.background(window.laxaltUniversalTheme.background);\n        p.textFont(dharmaFont);\n        p.textSize(characterSize);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.fill(\"\".concat(window.laxaltUniversalTheme.foreground));\n        p.strokeWeight(strokeWidth);\n        p.stroke(window.laxaltUniversalTheme.background);\n\n        if (H && W) {\n          // _________________________________________\n          // Loop through our copies\n          characters.map(function (_char3, idx) {\n            p.scale(1, 1);\n            var randomCharPick = Math.random() <= 0.5;\n\n            if (randomCharPick) {\n              updateCopies(_char3, idx);\n            }\n\n            if (randomCharPick && p.millis() - previousCountUpdateTime > 3000) {\n              updateCharacter(_char3, idx);\n            }\n\n            var countArray = Array.from(Array(_char3.count).keys());\n            countArray = countArray.map(function (countNumber) {\n              return countNumber + 1;\n            }); // _________________________________________\n            // Duplicate positions\n\n            countArray.map(function (countNumber, idxx) {\n              var verticalScale = 1 / (_char3.count * 0.95);\n              var duplicateVerticalPosition = _char3.count == 1 ? H / verticalTranslationWhitespaceCompensation : characterSize / verticalSkewDivisible + characterSize / characterSkewDivisible * idxx; // _________________________________________\n              // Make copies\n\n              var copiesArray = Array.from(Array(_char3.copies).keys()); // let randomCopyPick = Math.random() <= 0.5;\n\n              copiesArray = copiesArray.map(function (copyNumber) {\n                return copyNumber + 1;\n              }); // let randomCopyPick = Math.random() <= 0.5;\n              // let copyTimer = p.millis() - previousCopiesVisibleTime > 2000;\n\n              previousCopyUpdateTime; // let isFirstCount = true;\n\n              copiesArray.map(function (copyNumber, idxxx) {\n                // let centerCoordsX = W / 2;\n                // let centerCoordsY = H / 2;\n                // let horizontalTranslate =\n                //   copyNumber !== 1\n                //     ? (previousHorizontalTranslation(idx) +\n                //         (strokeOffset / (p.mouseX / 100)) * copyNumber)\n                //     : previousHorizontalTranslation(idx) +\n                //       strokeOffset * copyNumber;\n                // let verticalTranslate =\n                //   copyNumber !== 1\n                //     ? (duplicateVerticalPosition - (strokeOffset / (p.mouseX / 100)) * copyNumber)\n                //     : duplicateVerticalPosition - strokeOffset * copyNumber;\n                var horizontalTranslate = previousHorizontalTranslation(idx) + strokeOffset * copyNumber;\n                var verticalTranslate = duplicateVerticalPosition - strokeOffset * copyNumber;\n                p.push();\n                p.scale(1, verticalScale);\n                p.text(_char3.letter, horizontalTranslate, verticalTranslate);\n                p.pop();\n              });\n            });\n          });\n        }\n      }\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DharmaCanvasDisplay);\n\n/***/ }),\n\n/***/ \"iRSi\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar GLSL_Canvas = function GLSL_Canvas(W, H, ID, BG) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    var theShader; // _________________________________________________\n    // Preload\n\n    p.preload = function () {\n      theShader = p.loadShader(\"/shaders/ex_\".concat(ID, \"/shader.vert\"), \"/shaders/ex_\".concat(ID, \"/shader.frag\"));\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H, p.WEBGL);\n      p.noStroke();\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      // shader() sets the active shader with our shader\n      p.shader(theShader);\n      theShader.setUniform(\"u_resolution\", [W, H]);\n      theShader.setUniform(\"u_time\", p.millis() / 1000.0);\n      theShader.setUniform(\"u_mouse\", [p.mouseX, p.map(p.mouseY, 0, H, H, 0)]); // rect gives us some geometry on the screen\n\n      p.rect(0, 0, W, H);\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GLSL_Canvas);\n\n/***/ }),\n\n/***/ \"jOaG\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar P5CanvasDisplay = function P5CanvasDisplay(W, H, ID, CanvasTheme) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    // _________________________________________________\n    // Setup\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H);\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      if (p.mouseIsPressed) {\n        p.fill(window.laxaltUniversalTheme.foreground);\n        p.stroke(window.laxaltUniversalTheme.background);\n        p.strokeWeight(1.5);\n        p.ellipse(p.mouseX, p.mouseY, W / 6, W / 6);\n      } else if (p.mouseX !== 0 || p.mouseY !== 0) {\n        p.fill(window.laxaltUniversalTheme.background);\n        p.stroke(window.laxaltUniversalTheme.foreground);\n        p.strokeWeight(1.5);\n        p.ellipse(p.mouseX, p.mouseY, W / 6, W / 6);\n      }\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (P5CanvasDisplay);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/pflaxalt/Repositories/_pfl/web/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/_scaffold-p5-canvas.tsx","/Users/pflaxalt/Repositories/_pfl/web/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/no-water-distort.canvas.tsx","/Users/pflaxalt/Repositories/_pfl/web/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/glsl.tsx","/Users/pflaxalt/Repositories/_pfl/web/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/pflaxalt/Repositories/_pfl/web/sketches/p5/footer-canvas.tsx"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAA2H;;AAE3H,0CAA0C,gCAAgC,oCAAoC,oDAAoD,8DAA8D,gEAAgE,EAAE,EAAE,gCAAgC,EAAE,aAAa;;AAEnV,gCAAgC,gBAAgB,sBAAsB,OAAO,uDAAuD,aAAa,uDAAuD,CAAC,kJAAe,2BAA2B,EAAE,EAAE,EAAE,6CAA6C,2EAA2E,EAAE,OAAO,iDAAiD,kFAAkF,EAAE,EAAE,EAAE,EAAE,eAAe;;AAEphB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,YAAY;AACpE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,YAAY;AACpE;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,YAAY;AACpE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,wDAAwD,aAAa;AACrE;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,aAAa;AACrE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,aAAa;AACrE;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,aAAa;AACrE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA;AACA;AACA,sMAAsM;AACtM;;AAEA,sEAAsE;;AAEtE;AACA;AACA,aAAa,EAAE;AACf;;AAEA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,8EAAe,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3O9B;AAAA;AAA2H;;AAE3H,0CAA0C,gCAAgC,oCAAoC,oDAAoD,8DAA8D,gEAAgE,EAAE,EAAE,gCAAgC,EAAE,aAAa;;AAEnV,gCAAgC,gBAAgB,sBAAsB,OAAO,uDAAuD,aAAa,uDAAuD,CAAC,kJAAe,2BAA2B,EAAE,EAAE,EAAE,6CAA6C,2EAA2E,EAAE,OAAO,iDAAiD,kFAAkF,EAAE,EAAE,EAAE,EAAE,eAAe;;AAEphB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,oCAAoC;;AAEpC;;AAEA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,YAAY;AACpE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,YAAY;AACpE;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,YAAY;AACpE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,wDAAwD,aAAa;AACrE;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,aAAa;AACrE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,aAAa;AACrE;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,wDAAwD,aAAa;AACrE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf;;AAEA;AACA;AACA,wMAAwM;AACxM;;AAEA,wEAAwE;;AAExE;AACA;AACA,eAAe,EAAE;AACjB;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,kFAAmB,E;;;;;;;;ACpPlC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA,+EAA+E;;AAE/E;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,E;;;;;;;;AC7C1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,8EAAe,E","file":"x","sourcesContent":["import _defineProperty from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar P5CanvasDisplay = function P5CanvasDisplay(W, H, ID, CanvasTheme) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    // ____________________________\n    // Fonts\n    var dharmaFont; // ____________________________\n    // Typography\n\n    var text = \"LAXALT\";\n    var splitCharacterArray = text.split(\"\");\n    var characters = splitCharacterArray.map(function (character, idx) {\n      return {\n        letter: character,\n        count: 1,\n        idx: idx,\n        copies: 5,\n        copiesLastVisible: 0,\n        copiesAreVisible: false,\n        countIsIncrementing: true,\n        countIsDecrementing: false,\n        copiesAreIncrementing: true,\n        copiesAreDecrementing: false\n      };\n    });\n    var characterCount = splitCharacterArray.length;\n    var characterWidth = W / characterCount;\n    var characterSize = H * 1.25;\n    console.log(characterSize, \"characterSize\"); // ____________________________\n    // Counts\n    // let renderCount: number = 0;\n\n    var previousCountUpdateTime = 0;\n    var previousCopyUpdateTime = 0; // ____________________________\n    // Strokes\n\n    var strokeWidth = 4;\n    var strokeOffset = strokeWidth * 1.5; // ____________________________\n    // Limits\n\n    var maxCount = 3;\n    var minCount = 1;\n    var maxCopies = 12;\n    var minCopies = 1;\n    var frameRate = 10; // ____________________________\n    // Translation\n    // let previousVerticalTranslation: number = H / 2.25;\n\n    var verticalTranslationWhitespaceCompensation = 2.25;\n\n    var previousHorizontalTranslation = function previousHorizontalTranslation(idx) {\n      return -60 + (characterWidth * idx + characterWidth / 1.5 + strokeOffset);\n    }; // _________________________________________________\n    // Preload\n\n\n    p.preload = function () {\n      dharmaFont = p.loadFont(\"/fonts/dharma/dharma_regular.ttf\");\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H);\n      p.frameRate(frameRate);\n    }; // _________________________________________________\n    // Update Character\n\n\n    var updateCharacter = function updateCharacter(_char, idx) {\n      if (_char.count < maxCount && _char.countIsIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === maxCount) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsIncrementing: false,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count > minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1,\n          countIsIncrementing: true,\n          countIsDecrementing: false\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Update Copies\n\n\n    var updateCopies = function updateCopies(_char2, idx) {\n      if (_char2.copies < maxCopies && _char2.copiesAreIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === maxCopies) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreIncrementing: false,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies > minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1,\n          copiesAreIncrementing: true,\n          copiesAreDecrementing: false\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      p.background(CanvasTheme.background);\n      p.textFont(dharmaFont);\n      p.textSize(characterSize);\n      p.textAlign(p.CENTER, p.CENTER);\n      p.fill(\"\".concat(CanvasTheme.foreground));\n      p.strokeWeight(strokeWidth);\n      p.stroke(CanvasTheme.background);\n\n      if (H && W) {\n        // _________________________________________\n        // Loop through our copies\n        characters.map(function (_char3, idx) {\n          p.scale(1, 1);\n          var randomCharPick = Math.random() <= 0.5;\n\n          if (randomCharPick) {\n            updateCopies(_char3, idx);\n          }\n\n          if (randomCharPick && p.millis() - previousCountUpdateTime > 3000) {\n            updateCharacter(_char3, idx);\n          }\n\n          var countArray = Array.from(Array(_char3.count).keys());\n          countArray = countArray.map(function (countNumber) {\n            return countNumber + 1;\n          }); // _________________________________________\n          // Duplicate positions\n\n          countArray.map(function (countNumber, idxx) {\n            var verticalScale = 1 / (_char3.count * 0.95);\n            var verticalSkewDivisible = 2.75;\n            var characterSkewDivisible = 1.36;\n            var duplicateVerticalPosition = _char3.count == 1 ? H / verticalTranslationWhitespaceCompensation : characterSize / verticalSkewDivisible + characterSize / characterSkewDivisible * idxx; // _________________________________________\n            // Make copies\n\n            var copiesArray = Array.from(Array(_char3.copies).keys()); // let randomCopyPick = Math.random() <= 0.5;\n\n            copiesArray = copiesArray.map(function (copyNumber) {\n              return copyNumber + 1;\n            }); // let randomCopyPick = Math.random() <= 0.5;\n            // let copyTimer = p.millis() - previousCopiesVisibleTime > 2000;\n\n            previousCopyUpdateTime; // let isFirstCount = true;\n\n            copiesArray.map(function (copyNumber, idxxx) {\n              // let centerCoordsX = W / 2;\n              // let centerCoordsY = H / 2;\n              // let horizontalTranslate =\n              //   copyNumber !== 1\n              //     ? (previousHorizontalTranslation(idx) +\n              //         (strokeOffset / (p.mouseX / 100)) * copyNumber)\n              //     : previousHorizontalTranslation(idx) +\n              //       strokeOffset * copyNumber;\n              // let verticalTranslate =\n              //   copyNumber !== 1\n              //     ? (duplicateVerticalPosition - (strokeOffset / (p.mouseX / 100)) * copyNumber)\n              //     : duplicateVerticalPosition - strokeOffset * copyNumber;\n              var horizontalTranslate = previousHorizontalTranslation(idx) + strokeOffset * copyNumber;\n              var verticalTranslate = duplicateVerticalPosition - strokeOffset * copyNumber;\n              p.push();\n              p.scale(1, verticalScale);\n              p.text(_char3.letter, horizontalTranslate, verticalTranslate);\n              p.pop();\n            });\n          });\n        });\n      }\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\nexport default P5CanvasDisplay;","import _defineProperty from \"/Users/pflaxalt/Repositories/_pfl/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar DharmaCanvasDisplay = function DharmaCanvasDisplay(W, H, ID, // DharmaTheme,\nparentEl) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    var canvas; // ____________________________\n    // Fonts\n\n    var dharmaFont; // ____________________________\n    // Typography\n\n    var text = \"LAXALT\";\n    var splitCharacterArray = text.split(\"\");\n    var characters = splitCharacterArray.map(function (character, idx) {\n      return {\n        letter: character,\n        count: 1,\n        idx: idx,\n        copies: 5,\n        copiesLastVisible: 0,\n        copiesAreVisible: false,\n        countIsIncrementing: true,\n        countIsDecrementing: false,\n        copiesAreIncrementing: true,\n        copiesAreDecrementing: false\n      };\n    });\n    var characterCount = splitCharacterArray.length;\n    var characterWidth = W / characterCount;\n    var characterSize = H * 1.15;\n    var verticalSkewDivisible = 2.75;\n    var characterSkewDivisible = 1.36;\n    console.log(characterSize, \"characterSize\"); // ____________________________\n    // Counts\n    // let renderCount: number = 0;\n\n    var previousCountUpdateTime = 0;\n    var previousCopyUpdateTime = 0; // ____________________________\n    // Strokes\n\n    var strokeWidth = 4;\n    var strokeOffset = strokeWidth * 1.5; // ____________________________\n    // Limits\n\n    var maxCount = 3;\n    var minCount = 1;\n    var maxCopies = 12;\n    var minCopies = 1;\n    var frameRate = 60; // ____________________________\n    // Translation\n    // let previousVerticalTranslation: number = H / 2.25;\n\n    var verticalTranslationWhitespaceCompensation = 2.25;\n\n    var previousHorizontalTranslation = function previousHorizontalTranslation(idx) {\n      return -60 + (characterWidth * idx + characterWidth / 1.5 + strokeOffset);\n    }; // _________________________________________________\n    // Preload\n\n\n    p.preload = function () {\n      dharmaFont = p.loadFont(\"/fonts/dharma/dharma_regular.ttf\");\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      canvas = p.createCanvas(W, H); // ThreeWaterCanvas(parentEl, canvas.elt);\n\n      p.frameRate(frameRate);\n\n      if (window.devicePixelRatio > 1 && window.devicePixelRatio < 3) {\n        p.pixelDensity(1.25);\n      }\n    }; // _________________________________________________\n    // Update Character\n\n\n    var updateCharacter = function updateCharacter(_char, idx) {\n      if (_char.count < maxCount && _char.countIsIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === maxCount) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsIncrementing: false,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count > minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count - 1,\n          countIsDecrementing: true\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      } else if (_char.count === minCount && _char.countIsDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char), {}, {\n          count: _char.count + 1,\n          countIsIncrementing: true,\n          countIsDecrementing: false\n        });\n        previousCountUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Update Copies\n\n\n    var updateCopies = function updateCopies(_char2, idx) {\n      if (_char2.copies < maxCopies && _char2.copiesAreIncrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === maxCopies) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreIncrementing: false,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies > minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies - 1,\n          copiesAreDecrementing: true\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      } else if (_char2.copies === minCopies && _char2.copiesAreDecrementing) {\n        characters[idx] = _objectSpread(_objectSpread({}, _char2), {}, {\n          copies: _char2.copies + 1,\n          copiesAreIncrementing: true,\n          copiesAreDecrementing: false\n        });\n        previousCopyUpdateTime = p.millis();\n        return;\n      }\n\n      return;\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      if (p.frameCount % 10 === 0 && !window.dharmaPaused) {\n        p.background(window.laxaltUniversalTheme.background);\n        p.textFont(dharmaFont);\n        p.textSize(characterSize);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.fill(\"\".concat(window.laxaltUniversalTheme.foreground));\n        p.strokeWeight(strokeWidth);\n        p.stroke(window.laxaltUniversalTheme.background);\n\n        if (H && W) {\n          // _________________________________________\n          // Loop through our copies\n          characters.map(function (_char3, idx) {\n            p.scale(1, 1);\n            var randomCharPick = Math.random() <= 0.5;\n\n            if (randomCharPick) {\n              updateCopies(_char3, idx);\n            }\n\n            if (randomCharPick && p.millis() - previousCountUpdateTime > 3000) {\n              updateCharacter(_char3, idx);\n            }\n\n            var countArray = Array.from(Array(_char3.count).keys());\n            countArray = countArray.map(function (countNumber) {\n              return countNumber + 1;\n            }); // _________________________________________\n            // Duplicate positions\n\n            countArray.map(function (countNumber, idxx) {\n              var verticalScale = 1 / (_char3.count * 0.95);\n              var duplicateVerticalPosition = _char3.count == 1 ? H / verticalTranslationWhitespaceCompensation : characterSize / verticalSkewDivisible + characterSize / characterSkewDivisible * idxx; // _________________________________________\n              // Make copies\n\n              var copiesArray = Array.from(Array(_char3.copies).keys()); // let randomCopyPick = Math.random() <= 0.5;\n\n              copiesArray = copiesArray.map(function (copyNumber) {\n                return copyNumber + 1;\n              }); // let randomCopyPick = Math.random() <= 0.5;\n              // let copyTimer = p.millis() - previousCopiesVisibleTime > 2000;\n\n              previousCopyUpdateTime; // let isFirstCount = true;\n\n              copiesArray.map(function (copyNumber, idxxx) {\n                // let centerCoordsX = W / 2;\n                // let centerCoordsY = H / 2;\n                // let horizontalTranslate =\n                //   copyNumber !== 1\n                //     ? (previousHorizontalTranslation(idx) +\n                //         (strokeOffset / (p.mouseX / 100)) * copyNumber)\n                //     : previousHorizontalTranslation(idx) +\n                //       strokeOffset * copyNumber;\n                // let verticalTranslate =\n                //   copyNumber !== 1\n                //     ? (duplicateVerticalPosition - (strokeOffset / (p.mouseX / 100)) * copyNumber)\n                //     : duplicateVerticalPosition - strokeOffset * copyNumber;\n                var horizontalTranslate = previousHorizontalTranslation(idx) + strokeOffset * copyNumber;\n                var verticalTranslate = duplicateVerticalPosition - strokeOffset * copyNumber;\n                p.push();\n                p.scale(1, verticalScale);\n                p.text(_char3.letter, horizontalTranslate, verticalTranslate);\n                p.pop();\n              });\n            });\n          });\n        }\n      }\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\nexport default DharmaCanvasDisplay;","/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar GLSL_Canvas = function GLSL_Canvas(W, H, ID, BG) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    var theShader; // _________________________________________________\n    // Preload\n\n    p.preload = function () {\n      theShader = p.loadShader(\"/shaders/ex_\".concat(ID, \"/shader.vert\"), \"/shaders/ex_\".concat(ID, \"/shader.frag\"));\n    }; // _________________________________________________\n    // Setup\n\n\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H, p.WEBGL);\n      p.noStroke();\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      // shader() sets the active shader with our shader\n      p.shader(theShader);\n      theShader.setUniform(\"u_resolution\", [W, H]);\n      theShader.setUniform(\"u_time\", p.millis() / 1000.0);\n      theShader.setUniform(\"u_mouse\", [p.mouseX, p.map(p.mouseY, 0, H, H, 0)]); // rect gives us some geometry on the screen\n\n      p.rect(0, 0, W, H);\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\nexport default GLSL_Canvas;","/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n// Begin Component\n// __________________________________________________________________________\nvar P5CanvasDisplay = function P5CanvasDisplay(W, H, ID, CanvasTheme) {\n  return function (p) {\n    // _________________________________________________\n    // Config\n    // _________________________________________________\n    // Setup\n    p.setup = function () {\n      // Our Canvas\n      p.createCanvas(W, H);\n    }; // _________________________________________________\n    // Draw\n\n\n    p.draw = function () {\n      if (p.mouseIsPressed) {\n        p.fill(window.laxaltUniversalTheme.foreground);\n        p.stroke(window.laxaltUniversalTheme.background);\n        p.strokeWeight(1.5);\n        p.ellipse(p.mouseX, p.mouseY, W / 6, W / 6);\n      } else if (p.mouseX !== 0 || p.mouseY !== 0) {\n        p.fill(window.laxaltUniversalTheme.background);\n        p.stroke(window.laxaltUniversalTheme.foreground);\n        p.strokeWeight(1.5);\n        p.ellipse(p.mouseX, p.mouseY, W / 6, W / 6);\n      }\n    };\n\n    p.windowResized = function () {\n      p.resizeCanvas(W, H);\n    };\n  };\n};\n\nexport default P5CanvasDisplay;"]}}