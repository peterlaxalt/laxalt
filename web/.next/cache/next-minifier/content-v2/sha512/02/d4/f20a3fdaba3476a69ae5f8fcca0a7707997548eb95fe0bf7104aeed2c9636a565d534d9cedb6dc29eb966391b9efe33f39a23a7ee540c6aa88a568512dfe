{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[7],{DBIF:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return b})),n.d(t,\"b\",(function(){return D})),n.d(t,\"c\",(function(){return N})),n.d(t,\"d\",(function(){return y}));var r=n(\"Womt\");var s=\"varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}\";r.L;r.L;r.L;r.L;r.L;new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10]);class i extends r.L{constructor(){super({type:\"CopyMaterial\",uniforms:{inputBuffer:new r.R(null),opacity:new r.R(1)},fragmentShader:\"uniform sampler2D inputBuffer;uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;\\n#include <encodings_fragment>\\n}\",vertexShader:s,depthWrite:!1,depthTest:!1}),this.toneMapped=!1}}r.L;r.L;r.L;r.L;class a extends r.L{constructor(e=null,t=null,n=null,s,i=!1){super({type:\"EffectMaterial\",defines:{DEPTH_PACKING:\"0\",ENCODE_OUTPUT:\"1\"},uniforms:{inputBuffer:new r.R(null),depthBuffer:new r.R(null),resolution:new r.R(new r.V),texelSize:new r.R(new r.V),cameraNear:new r.R(.3),cameraFar:new r.R(1e3),aspect:new r.R(1),time:new r.R(0)},depthWrite:!1,depthTest:!1,dithering:i}),this.toneMapped=!1,null!==e&&this.setShaderParts(e),null!==t&&this.setDefines(t),null!==n&&this.setUniforms(n),this.adoptCameraSettings(s)}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setShaderParts(e){return this.fragmentShader=\"#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\nuniform sampler2D inputBuffer;\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nuniform highp sampler2D depthBuffer;\\n#else\\nuniform mediump sampler2D depthBuffer;\\n#endif\\nuniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;float readDepth(const in vec2 uv){\\n#if DEPTH_PACKING == 3201\\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\\n#else\\nreturn texture2D(depthBuffer,uv).r;\\n#endif\\n}float getViewZ(const in float depth){\\n#ifdef PERSPECTIVE_CAMERA\\nreturn perspectiveDepthToViewZ(depth,cameraNear,cameraFar);\\n#else\\nreturn orthographicDepthToViewZ(depth,cameraNear,cameraFar);\\n#endif\\n}FRAGMENT_HEADvoid main(){FRAGMENT_MAIN_UVvec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGEgl_FragColor=color0;\\n#ifdef ENCODE_OUTPUT\\n#include <encodings_fragment>\\n#endif\\n#include <dithering_fragment>\\n}\".replace(o.FRAGMENT_HEAD,e.get(o.FRAGMENT_HEAD)).replace(o.FRAGMENT_MAIN_UV,e.get(o.FRAGMENT_MAIN_UV)).replace(o.FRAGMENT_MAIN_IMAGE,e.get(o.FRAGMENT_MAIN_IMAGE)),this.vertexShader=\"uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEADvoid main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORTgl_Position=vec4(position.xy,1.0,1.0);}\".replace(o.VERTEX_HEAD,e.get(o.VERTEX_HEAD)).replace(o.VERTEX_MAIN_SUPPORT,e.get(o.VERTEX_MAIN_SUPPORT)),this.needsUpdate=!0,this}setDefines(e){for(const t of e.entries())this.defines[t[0]]=t[1];return this.needsUpdate=!0,this}setUniforms(e){for(const t of e.entries())this.uniforms[t[0]]=t[1];return this}adoptCameraSettings(e=null){null!==e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof r.B?this.defines.PERSPECTIVE_CAMERA=\"1\":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(e,t){const n=Math.max(e,1),r=Math.max(t,1);this.uniforms.resolution.value.set(n,r),this.uniforms.texelSize.value.set(1/n,1/r),this.uniforms.aspect.value=n/r}}const o={FRAGMENT_HEAD:\"FRAGMENT_HEAD\",FRAGMENT_MAIN_UV:\"FRAGMENT_MAIN_UV\",FRAGMENT_MAIN_IMAGE:\"FRAGMENT_MAIN_IMAGE\",VERTEX_HEAD:\"VERTEX_HEAD\",VERTEX_MAIN_SUPPORT:\"VERTEX_MAIN_SUPPORT\"};r.L;r.L;r.L;r.L;r.L;r.L;const l=new r.d;let c=null;class u{constructor(e=\"Pass\",t=new r.K,n=l){this.name=e,this.scene=t,this.camera=n,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.getFullscreenMaterial();null!==t&&(t.needsUpdate=!0),this.rtt=!e}}getFullscreenMaterial(){return null!==this.screen?this.screen.material:null}setFullscreenMaterial(e){let t=this.screen;null!==t?t.material=e:(t=new r.w(function(){if(null===c){const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),t=new Float32Array([0,0,2,0,0,2]);c=new r.c,void 0!==c.setAttribute?(c.setAttribute(\"position\",new r.b(e,3)),c.setAttribute(\"uv\",new r.b(t,2))):(c.addAttribute(\"position\",new r.b(e,3)),c.addAttribute(\"uv\",new r.b(t,2)))}return c}(),e),t.frustumCulled=!1,null===this.scene&&(this.scene=new r.K),this.scene.add(t),this.screen=t)}getDepthTexture(){return null}setDepthTexture(e,t=0){}render(e,t,n,r,s){throw new Error(\"Render method not implemented!\")}setSize(e,t){}initialize(e,t,n){}dispose(){const e=this.getFullscreenMaterial();null!==e&&e.dispose();for(const t of Object.keys(this)){const e=this[t];if(null!==e&&\"function\"===typeof e.dispose){if(e instanceof r.K)continue;this[t].dispose()}}}}class h extends u{constructor(){super(\"ClearMaskPass\",null,null),this.needsSwap=!1}render(e,t,n,r,s){const i=e.state.buffers.stencil;i.setLocked(!1),i.setTest(!1)}}const d=new r.g;class f extends u{constructor(e=!0,t=!0,n=!1){super(\"ClearPass\",null,null),this.needsSwap=!1,this.color=e,this.depth=t,this.stencil=n,this.overrideClearColor=null,this.overrideClearAlpha=-1}render(e,t,n,r,s){const i=this.overrideClearColor,a=this.overrideClearAlpha,o=e.getClearAlpha(),l=null!==i,c=a>=0;l?(d.copy(e.getClearColor()),e.setClearColor(i,c?a:o)):c&&e.setClearAlpha(a),e.setRenderTarget(this.renderToScreen?null:t),e.clear(this.color,this.depth,this.stencil),l?e.setClearColor(d,o):c&&e.setClearAlpha(o)}}let p=!1;class g{constructor(e=null){this.originalMaterials=new Map,this.material=null,this.materialInstanced=null,this.materialSkinning=null,this.setMaterial(e)}setMaterial(e){this.disposeMaterials(),null!==e&&(this.material=e,this.materialInstanced=e.clone(),this.materialInstanced.uniforms=Object.assign({},e.uniforms),this.materialSkinning=e.clone(),this.materialSkinning.uniforms=Object.assign({},e.uniforms),this.materialSkinning.skinning=!0)}render(e,t,n){const r=this.material,s=this.materialSkinning,i=this.materialInstanced,a=this.originalMaterials,o=e.shadowMap.enabled;if(e.shadowMap.enabled=!1,p){let o=0;t.traverse(e=>{e.isMesh&&(a.set(e,e.material),e.isInstancedMesh?e.material=i:e.isSkinnedMesh?e.material=s:e.material=r,++o)}),e.render(t,n);for(const e of a)e[0].material=e[1];o!==a.size&&a.clear()}else{const s=t.overrideMaterial;t.overrideMaterial=r,e.render(t,n),t.overrideMaterial=s}e.shadowMap.enabled=o}disposeMaterials(){null!==this.materialInstanced&&this.materialInstanced.dispose(),null!==this.materialSkinning&&this.materialSkinning.dispose()}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return p}static set workaroundEnabled(e){p=e}}class y extends u{constructor(e,t,n=null){super(\"RenderPass\",e,t),this.needsSwap=!1,this.clearPass=new f,this.overrideMaterialManager=null===n?null:new g(n)}get renderToScreen(){return super.renderToScreen}set renderToScreen(e){super.renderToScreen=e,this.clearPass.renderToScreen=e}get overrideMaterial(){const e=this.overrideMaterialManager;return null!==e?e.material:null}set overrideMaterial(e){const t=this.overrideMaterialManager;null!==e?null!==t?t.setMaterial(e):this.overrideMaterialManager=new g(e):null!==t&&(t.dispose(),this.overrideMaterialManager=null)}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getClearPass(){return this.clearPass}render(e,t,n,r,s){const i=this.scene,a=this.camera,o=i.background,l=this.renderToScreen?null:t;this.clear&&(null!==this.clearPass.overrideClearColor&&(i.background=null),this.clearPass.render(e,t)),e.setRenderTarget(l),null!==this.overrideMaterialManager?this.overrideMaterialManager.render(e,i,a):e.render(i,a),i.background!==o&&(i.background=o)}}const m=0,x=2,v=10,A=13,T=14,E=16;const M=new Map([[m,null],[1,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return min(x+y,1.0)*opacity+x*(1.0-opacity);}\"],[x,\"vec3 blend(const in vec3 x,const in vec3 y,const in float opacity){return y*opacity+x*(1.0-opacity);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){float a=min(y.a,opacity);return vec4(blend(x.rgb,y.rgb,a),max(x.a,a));}\"],[3,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(x+y)*0.5*opacity+x*(1.0-opacity);}\"],[4,\"float blend(const in float x,const in float y){return(y==0.0)? y : max(1.0-(1.0-x)/y,0.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}\"],[5,\"float blend(const in float x,const in float y){return(y==1.0)? y : min(x/(1.0-y),1.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}\"],[6,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return min(x,y)*opacity+x*(1.0-opacity);}\"],[7,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return abs(x-y)*opacity+x*(1.0-opacity);}\"],[8,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(x+y-2.0*x*y)*opacity+x*(1.0-opacity);}\"],[9,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return max(x,y)*opacity+x*(1.0-opacity);}\"],[v,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return x*y*opacity+x*(1.0-opacity);}\"],[11,\"float blend(const in float x,const in float y){return(y>0.0)? min(x/y,1.0): 1.0;}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}\"],[12,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(1.0-abs(1.0-x-y))*opacity+x*(1.0-opacity);}\"],[A,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y*opacity+x*(1.0-opacity);}\"],[T,\"float blend(const in float x,const in float y){return(x<0.5)?(2.0*x*y):(1.0-2.0*(1.0-x)*(1.0-y));}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}\"],[15,\"float blend(const in float x,const in float y){return(y==1.0)? y : min(x*x/(1.0-y),1.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}\"],[E,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(1.0-(1.0-x)*(1.0-y))*opacity+x*(1.0-opacity);}\"],[17,\"float blend(const in float x,const in float y){return(y<0.5)?(2.0*x*y+x*x*(1.0-2.0*y)):(sqrt(x)*(2.0*y-1.0)+2.0*x*(1.0-y));}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}\"],[18,\"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return max(x+y-1.0,0.0)*opacity+x*(1.0-opacity);}\"]]);class w extends r.k{constructor(e,t=1){super(),this.blendFunction=e,this.opacity=new r.R(t)}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e,this.dispatchEvent({type:\"change\"})}getShaderCode(){return M.get(this.blendFunction)}}class b extends r.k{constructor(e,t,{attributes:n=S.NONE,blendFunction:r=E,defines:s=new Map,uniforms:i=new Map,extensions:a=null,vertexShader:o=null}={}){super(),this.name=e,this.attributes=n,this.fragmentShader=t,this.vertexShader=o,this.defines=s,this.uniforms=i,this.extensions=a,this.blendMode=new w(r),this.blendMode.addEventListener(\"change\",e=>this.setChanged())}setChanged(){this.dispatchEvent({type:\"change\"})}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setDepthTexture(e,t=0){}update(e,t,n){}setSize(e,t){}initialize(e,t,n){}dispose(){for(const e of Object.keys(this)){const t=this[e];if(null!==t&&\"function\"===typeof t.dispose){if(t instanceof r.K)continue;this[e].dispose()}}}}const S={NONE:0,DEPTH:1,CONVOLUTION:2};function _(e,t){const n=[];let r;for(;null!==(r=e.exec(t));)n.push(r[1]);return n}function U(e,t,n){let r,s;for(const i of t){r=\"$1\"+e+i.charAt(0).toUpperCase()+i.slice(1),s=new RegExp(\"([^\\\\.])(\\\\b\"+i+\"\\\\b)\",\"g\");for(const e of n.entries())null!==e[1]&&n.set(e[0],e[1].replace(s,r))}}function R(e,t,n,r,s,i,a){const l=/(?:\\w+\\s+(\\w+)\\([\\w\\s,]*\\)\\s*{[^}]+})/g,c=/(?:varying\\s+\\w+\\s+(\\w*))/g,u=t.blendMode,h=new Map([[\"fragment\",t.getFragmentShader()],[\"vertex\",t.getVertexShader()]]),d=void 0!==h.get(\"fragment\")&&h.get(\"fragment\").indexOf(\"mainImage\")>=0,f=void 0!==h.get(\"fragment\")&&h.get(\"fragment\").indexOf(\"mainUv\")>=0;let p=[],g=[],y=!1,m=!1;if(void 0===h.get(\"fragment\"))console.error(\"Missing fragment shader\",t);else if(f&&0!==(a&S.CONVOLUTION))console.error(\"Effects that transform UV coordinates are incompatible with convolution effects\",t);else if(d||f){if(f&&(n.set(o.FRAGMENT_MAIN_UV,n.get(o.FRAGMENT_MAIN_UV)+\"\\t\"+e+\"MainUv(UV);\\n\"),y=!0),null!==h.get(\"vertex\")&&h.get(\"vertex\").indexOf(\"mainSupport\")>=0){let t=\"\\t\"+e+\"MainSupport(\";h.get(\"vertex\").indexOf(\"uv\")>=0&&(t+=\"vUv\"),t+=\");\\n\",n.set(o.VERTEX_MAIN_SUPPORT,n.get(o.VERTEX_MAIN_SUPPORT)+t),p=p.concat(_(c,h.get(\"vertex\"))),g=g.concat(p).concat(_(l,h.get(\"vertex\")))}if(g=g.concat(_(l,h.get(\"fragment\"))).concat(Array.from(t.defines.keys()).map(e=>e.replace(/\\([\\w\\s,]*\\)/g,\"\"))).concat(Array.from(t.uniforms.keys())),t.uniforms.forEach((t,n)=>i.set(e+n.charAt(0).toUpperCase()+n.slice(1),t)),t.defines.forEach((t,n)=>s.set(e+n.charAt(0).toUpperCase()+n.slice(1),t)),U(e,g,s),U(e,g,h),r.set(u.blendFunction,u),d){let t=e+\"MainImage(color0, UV, \";0!==(a&S.DEPTH)&&h.get(\"fragment\").indexOf(\"depth\")>=0&&(t+=\"depth, \",m=!0),t+=\"color1);\\n\\t\";const r=e+\"BlendOpacity\";i.set(r,u.opacity),t+=\"color0 = blend\"+u.getBlendFunction()+\"(color0, color1, \"+r+\");\\n\\n\\t\",n.set(o.FRAGMENT_MAIN_IMAGE,n.get(o.FRAGMENT_MAIN_IMAGE)+t),n.set(o.FRAGMENT_HEAD,n.get(o.FRAGMENT_HEAD)+\"uniform float \"+r+\";\\n\\n\")}n.set(o.FRAGMENT_HEAD,n.get(o.FRAGMENT_HEAD)+h.get(\"fragment\")+\"\\n\"),null!==h.get(\"vertex\")&&n.set(o.VERTEX_HEAD,n.get(o.VERTEX_HEAD)+h.get(\"vertex\")+\"\\n\")}else console.error(\"The fragment shader contains neither a mainImage nor a mainUv function\",t);return{varyings:p,transformedUv:y,readDepth:m}}class N extends u{constructor(e,...t){super(\"EffectPass\"),this.setFullscreenMaterial(new a(null,null,null,e)),this.effects=t.sort((e,t)=>t.attributes-e.attributes),this.skipRendering=!1,this.uniforms=0,this.varyings=0,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY}get encodeOutput(){return void 0!==this.getFullscreenMaterial().defines.ENCODE_OUTPUT}set encodeOutput(e){if(this.encodeOutput!==e){const t=this.getFullscreenMaterial();t.needsUpdate=!0,e?t.defines.ENCODE_OUTPUT=\"1\":delete t.defines.ENCODE_OUTPUT}}get dithering(){return this.getFullscreenMaterial().dithering}set dithering(e){const t=this.getFullscreenMaterial();t.dithering!==e&&(t.dithering=e,t.needsUpdate=!0)}verifyResources(e){const t=e.capabilities;let n=Math.min(t.maxFragmentUniforms,t.maxVertexUniforms);this.uniforms>n&&console.warn(\"The current rendering context doesn't support more than \"+n+\" uniforms, but \"+this.uniforms+\" were defined\"),n=t.maxVaryings,this.varyings>n&&console.warn(\"The current rendering context doesn't support more than \"+n+\" varyings, but \"+this.varyings+\" were defined\")}updateMaterial(){const e=/\\bblend\\b/g,t=new Map([[o.FRAGMENT_HEAD,\"\"],[o.FRAGMENT_MAIN_UV,\"\"],[o.FRAGMENT_MAIN_IMAGE,\"\"],[o.VERTEX_HEAD,\"\"],[o.VERTEX_MAIN_SUPPORT,\"\"]]),n=new Map,r=new Map,s=new Map,i=new Set;let a,l=0,c=0,u=0,h=!1,d=!1;for(const o of this.effects)if(o.blendMode.getBlendFunction()===m)u|=o.getAttributes()&S.DEPTH;else if(0!==(u&S.CONVOLUTION)&&0!==(o.getAttributes()&S.CONVOLUTION))console.error(\"Convolution effects cannot be merged\",o);else if(u|=o.getAttributes(),a=R(\"e\"+l++,o,t,n,r,s,u),c+=a.varyings.length,h=h||a.transformedUv,d=d||a.readDepth,null!==o.extensions)for(const e of o.extensions)i.add(e);for(const p of n.values())t.set(o.FRAGMENT_HEAD,t.get(o.FRAGMENT_HEAD)+p.getShaderCode().replace(e,\"blend\"+p.getBlendFunction())+\"\\n\");0!==(u&S.DEPTH)?(d&&t.set(o.FRAGMENT_MAIN_IMAGE,\"float depth = readDepth(UV);\\n\\n\\t\"+t.get(o.FRAGMENT_MAIN_IMAGE)),this.needsDepthTexture=null===this.getDepthTexture()):this.needsDepthTexture=!1,h?(t.set(o.FRAGMENT_MAIN_UV,\"vec2 transformedUv = vUv;\\n\"+t.get(o.FRAGMENT_MAIN_UV)),r.set(\"UV\",\"transformedUv\")):r.set(\"UV\",\"vUv\"),t.forEach((e,t,n)=>n.set(t,e.trim().replace(/^#/,\"\\n#\"))),this.uniforms=s.size,this.varyings=c,this.skipRendering=0===l,this.needsSwap=!this.skipRendering;const f=this.getFullscreenMaterial();if(f.setShaderParts(t).setDefines(r).setUniforms(s),f.extensions={},i.size>0)for(const o of i)f.extensions[o]=!0;this.needsUpdate=!1}recompile(e){this.updateMaterial(),void 0!==e&&this.verifyResources(e)}getDepthTexture(){return this.getFullscreenMaterial().uniforms.depthBuffer.value}setDepthTexture(e,t=0){const n=this.getFullscreenMaterial();n.uniforms.depthBuffer.value=e,n.depthPacking=t,n.needsUpdate=!0;for(const r of this.effects)r.setDepthTexture(e,t)}render(e,t,n,r,s){const i=this.getFullscreenMaterial(),a=i.uniforms.time.value+r;this.needsUpdate&&this.recompile(e);for(const o of this.effects)o.update(e,t,r);this.skipRendering&&!this.renderToScreen||(i.uniforms.inputBuffer.value=t.texture,i.uniforms.time.value=a<=this.maxTime?a:this.minTime,e.setRenderTarget(this.renderToScreen?null:n),e.render(this.scene,this.camera))}setSize(e,t){this.getFullscreenMaterial().setSize(e,t);for(const n of this.effects)n.setSize(e,t)}initialize(e,t,n){this.capabilities=e.capabilities;for(const r of this.effects)r.initialize(e,t,n),r.addEventListener(\"change\",e=>this.handleEvent(e));this.updateMaterial(),this.verifyResources(e)}dispose(){super.dispose();for(const e of this.effects)e.dispose()}handleEvent(e){switch(e.type){case\"change\":this.needsUpdate=!0}}}class F extends u{constructor(e,t){super(\"MaskPass\",e,t),this.needsSwap=!1,this.clearPass=new f(!1,!1,!0),this.inverse=!1}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}render(e,t,n,r,s){const i=e.getContext(),a=e.state.buffers,o=this.scene,l=this.camera,c=this.clearPass,u=this.inverse?0:1,h=1-u;a.color.setMask(!1),a.depth.setMask(!1),a.color.setLocked(!0),a.depth.setLocked(!0),a.stencil.setTest(!0),a.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),a.stencil.setFunc(i.ALWAYS,u,4294967295),a.stencil.setClear(h),a.stencil.setLocked(!0),this.clear&&(this.renderToScreen?c.render(e,null):(c.render(e,t),c.render(e,n))),this.renderToScreen?(e.setRenderTarget(null),e.render(o,l)):(e.setRenderTarget(t),e.render(o,l),e.setRenderTarget(n),e.render(o,l)),a.color.setLocked(!1),a.depth.setLocked(!1),a.stencil.setLocked(!1),a.stencil.setFunc(i.EQUAL,1,4294967295),a.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),a.stencil.setLocked(!0)}}class P extends u{constructor(e,t=\"inputBuffer\"){super(\"ShaderPass\"),this.setFullscreenMaterial(e),this.uniform=null,this.setInput(t)}setInput(e){const t=this.getFullscreenMaterial();if(this.uniform=null,null!==t){const n=t.uniforms;void 0!==n&&void 0!==n[e]&&(this.uniform=n[e])}}render(e,t,n,r,s){null!==this.uniform&&null!==t&&(this.uniform.value=t.texture),e.setRenderTarget(this.renderToScreen?null:n),e.render(this.scene,this.camera)}}class D{constructor(e=null,{depthBuffer:t=!0,stencilBuffer:n=!1,multisampling:r=0,frameBufferType:s}={}){this.renderer=e,this.inputBuffer=null,this.outputBuffer=null,null!==this.renderer&&(this.renderer.autoClear=!1,this.inputBuffer=this.createBuffer(t,n,s,r),this.outputBuffer=this.inputBuffer.clone(),this.enableExtensions()),this.copyPass=new P(new i),this.depthTexture=null,this.passes=[],this.autoRenderToScreen=!0}get multisampling(){return this.inputBuffer instanceof r.Y?this.inputBuffer.samples:0}set multisampling(e){const t=this.inputBuffer,n=this.multisampling;n>0&&e>0?(this.inputBuffer.samples=e,this.outputBuffer.samples=e):n!==e&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(t.depthBuffer,t.stencilBuffer,t.texture.type,e),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getRenderer(){return this.renderer}enableExtensions(){const e=this.inputBuffer.texture.type,t=this.renderer.capabilities,n=this.renderer.getContext();e!==r.S&&(t.isWebGL2?n.getExtension(\"EXT_color_buffer_float\"):n.getExtension(\"EXT_color_buffer_half_float\"))}replaceRenderer(e,t=!0){const n=this.renderer;if(null!==n&&n!==e){const s=n.getSize(new r.V),i=e.getSize(new r.V),a=n.domElement.parentNode;this.renderer=e,this.renderer.autoClear=!1,s.equals(i)||this.setSize(),t&&null!==a&&(a.removeChild(n.domElement),a.appendChild(e.domElement)),this.enableExtensions()}return n}createDepthTexture(){const e=this.depthTexture=new r.j;return this.inputBuffer.depthTexture=e,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(e.format=r.i,e.type=r.T):e.type=r.U,e}deleteDepthTexture(){if(null!==this.depthTexture){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const e of this.passes)e.setDepthTexture(null)}}createBuffer(e,t,n,s){const i=this.renderer.getDrawingBufferSize(new r.V),a={format:this.renderer.getContext().getContextAttributes().alpha||n!==r.S?r.F:r.G,minFilter:r.n,magFilter:r.n,stencilBuffer:t,depthBuffer:e,type:n},o=s>0?new r.Y(i.width,i.height,a):new r.Z(i.width,i.height,a);return s>0&&(o.samples=s),o.texture.name=\"EffectComposer.Buffer\",o.texture.generateMipmaps=!1,o}addPass(e,t){const n=this.passes,s=this.renderer,i=s.getContext().getContextAttributes().alpha,a=this.inputBuffer.texture.type,o=s.getDrawingBufferSize(new r.V);if(e.setSize(o.width,o.height),e.initialize(s,i,a),this.autoRenderToScreen&&(n.length>0&&(n[n.length-1].renderToScreen=!1),e.renderToScreen&&(this.autoRenderToScreen=!1)),void 0!==t?n.splice(t,0,e):n.push(e),this.autoRenderToScreen&&(n[n.length-1].renderToScreen=!0),e.needsDepthTexture||null!==this.depthTexture)if(null===this.depthTexture){const t=this.createDepthTexture();for(e of n)e.setDepthTexture(t)}else e.setDepthTexture(this.depthTexture)}removePass(e){const t=this.passes,n=t.indexOf(e);if(t.splice(n,1).length>0){if(null!==this.depthTexture){const n=(e,t)=>e||t.needsDepthTexture;t.reduce(n,!1)||(e.getDepthTexture()===this.depthTexture&&e.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&n===t.length&&(e.renderToScreen=!1,t.length>0&&(t[t.length-1].renderToScreen=!0))}}removeAllPasses(){const e=this.passes;this.deleteDepthTexture(),e.length>0&&(this.autoRenderToScreen&&(e[e.length-1].renderToScreen=!1),this.passes=[])}render(e){const t=this.renderer,n=this.copyPass;let r,s,i,a=this.inputBuffer,o=this.outputBuffer,l=!1;for(const c of this.passes)c.enabled&&(c.render(t,a,o,e,l),c.needsSwap&&(l&&(n.renderToScreen=c.renderToScreen,r=t.getContext(),s=t.state.buffers.stencil,s.setFunc(r.NOTEQUAL,1,4294967295),n.render(t,a,o,e,l),s.setFunc(r.EQUAL,1,4294967295)),i=a,a=o,o=i),c instanceof F?l=!0:c instanceof h&&(l=!1))}setSize(e,t,n){const s=this.renderer;if(void 0===e||void 0===t){const n=s.getSize(new r.V);e=n.width,t=n.height}else s.setSize(e,t,n);const i=s.getDrawingBufferSize(new r.V);this.inputBuffer.setSize(i.width,i.height),this.outputBuffer.setSize(i.width,i.height);for(const r of this.passes)r.setSize(i.width,i.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const e of this.passes)e.dispose();this.passes=[],null!==this.inputBuffer&&this.inputBuffer.dispose(),null!==this.outputBuffer&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose()}}Set;r.h;new r.W,new r.v;Math.PI,new r.W,new r.W;class C{constructor(e=0,t=0){this.x=e,this.y=t}set(e,t){return this.x=e,this.y=t,this}equals(e){return this===e||this.x===e.x&&this.y===e.y}}class I{constructor(){this.min=new C,this.max=new C}}new I,new I,new Float32Array([0,-.25,.25,-.125,.125,-.375,.375]),new Float32Array([0,0]),new Float32Array([.25,-.25]),new Float32Array([-.25,.25]),new Float32Array([.125,-.125]),new Float32Array([-.125,.125]),new Uint8Array([0,0]),new Uint8Array([3,0]),new Uint8Array([0,3]),new Uint8Array([3,3]),new Uint8Array([1,0]),new Uint8Array([4,0]),new Uint8Array([1,3]),new Uint8Array([4,3]),new Uint8Array([0,1]),new Uint8Array([3,1]),new Uint8Array([0,4]),new Uint8Array([3,4]),new Uint8Array([1,1]),new Uint8Array([4,1]),new Uint8Array([1,4]),new Uint8Array([4,4]),new Uint8Array([0,0]),new Uint8Array([1,0]),new Uint8Array([0,2]),new Uint8Array([1,2]),new Uint8Array([2,0]),new Uint8Array([3,0]),new Uint8Array([2,2]),new Uint8Array([3,2]),new Uint8Array([0,1]),new Uint8Array([1,1]),new Uint8Array([0,3]),new Uint8Array([1,3]),new Uint8Array([2,1]),new Uint8Array([3,1]),new Uint8Array([2,3]),new Uint8Array([3,3]);new Map([[V([0,0,0,0]),[0,0,0,0]],[V([0,0,0,1]),[0,0,0,1]],[V([0,0,1,0]),[0,0,1,0]],[V([0,0,1,1]),[0,0,1,1]],[V([0,1,0,0]),[0,1,0,0]],[V([0,1,0,1]),[0,1,0,1]],[V([0,1,1,0]),[0,1,1,0]],[V([0,1,1,1]),[0,1,1,1]],[V([1,0,0,0]),[1,0,0,0]],[V([1,0,0,1]),[1,0,0,1]],[V([1,0,1,0]),[1,0,1,0]],[V([1,0,1,1]),[1,0,1,1]],[V([1,1,0,0]),[1,1,0,0]],[V([1,1,0,1]),[1,1,0,1]],[V([1,1,1,0]),[1,1,1,0]],[V([1,1,1,1]),[1,1,1,1]]]);function B(e,t,n){return e+(t-e)*n}function V(e){const t=B(e[0],e[1],.75),n=B(e[2],e[3],.75);return B(t,n,.875)}r.q}}]);","extractedComments":[]}