{"version":3,"file":"static/webpack/static/development/pages/_app.js.a95e7ce6cfcb50067100.hot-update.js","sources":["webpack:///./components/ThemePicker/ThemePicker.tsx"],"sourcesContent":["// Core\nimport React, { useContext } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { ColorContext, LXLT_ColorTheme } from \"../../constants/styles/Color\";\nimport { CssUtils } from \"../../constants/styles/CssUtils\";\nimport { Theme } from \"../../constants/Theme\";\nimport { ThemePickerClassName, ThemePickerStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_ThemePicker = {};\n\n// type LXLT_Theme = {\n// name: \"default\" | \"white\" | \"goldenrod\" | \"cadetblue\" | \"orangered\" | \"galaxy\";\n//   primary: string;\n//   secondary: string;\n//   background: string;\n//   foreground: string;\n// };\n\ntype LXLT_ThemePickerState = {\n  availableThemes: LXLT_ColorTheme[];\n  activeTheme?: LXLT_ColorTheme;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name ThemePicker\n * @author Peter Laxalt\n *\n */\nexport class ThemePicker extends React.PureComponent<\n  LXLT_ThemePicker,\n  LXLT_ThemePickerState\n> {\n  constructor(props: LXLT_ThemePicker) {\n    super(props);\n\n    this.state = {\n      activeTheme: {\n        name: \"default\",\n        primary: Theme.Color.Primary,\n        secondary: Theme.Color.Secondary,\n        background: Theme.Color.Background,\n        foreground: Theme.Color.Text,\n      },\n      availableThemes: [\n        {\n          name: \"default\",\n          primary: Theme.Color.Primary,\n          secondary: Theme.Color.Secondary,\n          background: Theme.Color.Background,\n          foreground: Theme.Color.Primary,\n        },\n        {\n          name: \"goldenrod\",\n          primary: \"#393349\",\n          secondary: \"#393349\",\n          background: \"goldenrod\",\n          foreground: \"#393349\",\n        },\n        {\n          name: \"cadetblue\",\n          primary: \"cornsilk\",\n          secondary: \"cornsilk\",\n          background: \"cadetblue\",\n          foreground: \"cornsilk\",\n        },\n        {\n          name: \"orangered\",\n          primary: \"cornsilk\",\n          secondary: \"cornsilk\",\n          background: \"orangered\",\n          foreground: \"cornsilk\",\n        },\n        {\n          name: \"white\",\n          primary: \"black\",\n          secondary: \"black\",\n          background: \"white\",\n          foreground: \"black\",\n        },\n        {\n          name: \"galaxy\",\n          primary: \"cornsilk\",\n          secondary: \"cornsilk\",\n          background: Theme.Color.Galaxy,\n          foreground: \"cornsilk\",\n        },\n      ],\n    };\n\n    this.setNewTheme = this.setNewTheme.bind(this);\n  }\n\n  setNewTheme(theme: LXLT_ColorTheme) {\n    const { setTheme } = useContext(ColorContext);\n\n    this.setState({\n      activeTheme: theme,\n    });\n\n    setTheme(theme);\n  }\n\n  render() {\n    let { activeTheme, availableThemes } = this.state;\n\n    const SetGlobalTheme = createGlobalStyle`\n      ${\n        activeTheme\n          ? CssUtils.CreateTheme(\n              activeTheme.primary,\n              activeTheme.secondary,\n              activeTheme.background,\n              activeTheme.foreground\n            )\n          : \"\"\n      }\n    `;\n\n    return (\n      <>\n        {activeTheme && activeTheme.name !== \"default\" ? (\n          <SetGlobalTheme />\n        ) : null}\n        <ThemePickerStyle className={`${ThemePickerClassName}`}>\n          {availableThemes\n            ? availableThemes.map((themeItem: LXLT_ColorTheme, idx: number) => {\n                return (\n                  <div\n                    className={`${ThemePickerClassName}__option ${ThemePickerClassName}__option--${\n                      themeItem.name === activeTheme.name\n                        ? \"active\"\n                        : \"inactive\"\n                    }`}\n                    style={{ backgroundColor: themeItem.background }}\n                    onClick={() => this.setNewTheme(themeItem)}\n                    key={idx}\n                  />\n                );\n              })\n            : null}\n        </ThemePickerStyle>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAgBA;AACA;AACA;AACA;;;;;AAKA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AA5CA;AAsDA;AAzDA;AA0DA;AACA;AA/DA;AAAA;AAAA;AAgEA;AAAA;AACA;AAEA;AACA;AADA;AAIA;AACA;AAxEA;AAAA;AAAA;AA0EA;AACA;AADA;AAAA;AAAA;AAGA;AAaA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAKA;AAnHA;AACA;AADA;AAAA;;;;A","sourceRoot":""}