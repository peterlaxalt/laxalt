{"version":3,"file":"static/webpack/static/development/pages/_app.js.ec39a8a351528a154c0a.hot-update.js","sources":["webpack:///./components/GrainCover/styles.scss.tsx","webpack:///./components/ThemePicker/ThemePicker.tsx"],"sourcesContent":["// GrainCover Styles\n\n// Imports\n// __________________________________________________________________________________________\n\n// Core\nimport styled from \"styled-components\";\nimport { Grain } from \"../../constants/styles/Animation\";\n\n// Animations\n\n// Begin Styles\n// __________________________________________________________________________________________\n\n\nconst GrainCoverStyle = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow: hidden;\n  /* display: flex; */\n  display: none;\n  z-index: 999;\n  mix-blend-mode: multiply;\n\n  .grain-cover-inner {\n    width: 1000vw;\n    height: 1000vh;\n    animation: grain 8s steps(10) infinite;\n    background-image: url('noise.png');\n    animation: ${Grain} 8s steps(10) infinite;\n  }\n`;\n\nexport default GrainCoverStyle;\n","// Core\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { CssUtils } from \"../../constants/styles/CssUtils\";\nimport { Theme } from \"../../constants/Theme\";\nimport { ThemePickerClassName, ThemePickerStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_ThemePicker = {};\n\ntype LXLT_Theme = {\n  name: \"default\" | \"white\" | \"goldenrod\" | \"cadetblue\" | \"orangered\" | \"galaxy\";\n  primary: string;\n  secondary: string;\n  background: string;\n  foreground: string;\n};\n\ntype LXLT_ThemePickerState = {\n  availableThemes: LXLT_Theme[];\n  activeTheme?: LXLT_Theme;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name ThemePicker\n * @author Peter Laxalt\n *\n */\nexport class ThemePicker extends React.PureComponent<\n  LXLT_ThemePicker,\n  LXLT_ThemePickerState\n> {\n  constructor(props: LXLT_ThemePicker) {\n    super(props);\n\n    this.state = {\n      activeTheme: {\n        name: \"default\",\n        primary: Theme.Color.Primary,\n        secondary: Theme.Color.Secondary,\n        background: Theme.Color.Background,\n        foreground: Theme.Color.Text,\n      },\n      availableThemes: [\n        {\n          name: \"default\",\n          primary: Theme.Color.Primary,\n          secondary: Theme.Color.Seconndary,\n          background: Theme.Color.Background,\n          foreground: Theme.Color.Foreground,\n        },\n        {\n          name: \"goldenrod\",\n          primary: \"#393349\",\n          secondary: \"#393349\",\n          background: \"goldenrod\",\n          foreground: \"#393349\",\n        },\n        {\n          name: \"cadetblue\",\n          primary: \"cornsilk\",\n          secondary: \"cornsilk\",\n          background: \"cadetblue\",\n          foreground: \"cornsilk\",\n        },\n        {\n          name: \"orangered\",\n          primary: \"cornsilk\",\n          secondary: \"cornsilk\",\n          background: \"orangered\",\n          foreground: \"cornsilk\",\n        },\n        {\n          name: \"white\",\n          primary: \"black\",\n          secondary: \"black\",\n          background: \"white\",\n          foreground: \"black\",\n        },\n        {\n          name: \"galaxy\",\n          primary: \"cornsilk\",\n          secondary: \"cornsilk\",\n          background: Theme.Color.Galaxy,\n          foreground: \"cornsilk\",\n        },\n      ],\n    };\n\n    this.setNewTheme = this.setNewTheme.bind(this);\n  }\n\n  setNewTheme(theme: LXLT_Theme) {\n    this.setState({\n      activeTheme: theme,\n    });\n  }\n\n  render() {\n    let { activeTheme, availableThemes } = this.state;\n\n    const SetGlobalTheme = createGlobalStyle`\n      ${\n        activeTheme\n          ? CssUtils.CreateTheme(\n              activeTheme.primary,\n              activeTheme.secondary,\n              activeTheme.background,\n              activeTheme.foreground\n            )\n          : \"\"\n      }\n    `;\n\n    return (\n      <>\n        {activeTheme && activeTheme.name !== \"default\" ? (\n          <SetGlobalTheme />\n        ) : null}\n        <ThemePickerStyle className={`${ThemePickerClassName}`}>\n          {availableThemes\n            ? availableThemes.map((themeItem: LXLT_Theme, idx: number) => {\n                return (\n                  <div\n                    className={`${ThemePickerClassName}__option ${ThemePickerClassName}__option--${themeItem.name === activeTheme.name ? 'active' : 'inactive'}`}\n                    style={{ backgroundColor: themeItem.background }}\n                    onClick={() => this.setNewTheme(themeItem)}\n                    key={idx}\n                  />\n                );\n              })\n            : null}\n        </ThemePickerStyle>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAgBA;AACA;AACA;AACA;;;;;AAKA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AA5CA;AAsDA;AAzDA;AA0DA;AACA;AA/DA;AAAA;AAAA;AAiEA;AACA;AADA;AAGA;AApEA;AAAA;AAAA;AAsEA;AACA;AADA;AAAA;AAAA;AAGA;AAaA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAKA;AA3GA;AACA;AADA;AAAA;;;;A","sourceRoot":""}