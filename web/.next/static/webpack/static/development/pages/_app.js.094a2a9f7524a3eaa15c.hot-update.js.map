{"version":3,"file":"static/webpack/static/development/pages/_app.js.094a2a9f7524a3eaa15c.hot-update.js","sources":["webpack:///./components/ThemePicker/ThemePicker.tsx"],"sourcesContent":["// Core\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { CssUtils } from \"../../constants/styles/CssUtils\";\nimport { Theme } from \"../../constants/Theme\";\nimport { ThemePickerClassName, ThemePickerStyle } from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_ThemePicker = {};\n\ntype LXLT_Theme = {\n  name: string;\n  primary: string;\n  secondary: string;\n  background: string;\n  foreground: string;\n};\n\ntype LXLT_ThemePickerState = {\n  themes: LXLT_Theme[];\n  activeTheme?: LXLT_Theme;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name ThemePicker\n * @author Peter Laxalt\n *\n */\nexport class ThemePicker extends React.PureComponent<\n  LXLT_ThemePicker,\n  LXLT_ThemePickerState\n> {\n  constructor(props: LXLT_ThemePicker) {\n    super(props);\n\n    this.state = {\n      themes: [\n        {\n          name: \"lightcyan\",\n          primary: Theme.Color.Galaxy,\n          secondary: Theme.Color.Galaxy,\n          background: \"lightcyan\",\n          foreground: Theme.Color.Galaxy,\n        },\n        {\n          name: \"goldenrod\",\n          primary: Theme.Color.Galaxy,\n          secondary: Theme.Color.Galaxy,\n          background: \"goldenrod\",\n          foreground: Theme.Color.Galaxy,\n        },\n        {\n          name: \"honeydew\",\n          primary: Theme.Color.Galaxy,\n          secondary: Theme.Color.Galaxy,\n          background: \"honeydew\",\n          foreground: Theme.Color.Galaxy,\n        },\n      ],\n    };\n\n    // this.letterCountTimer = this.letterCountTimer.bind(this);\n  }\n\n  componentDidMount() {}\n\n  incrementLetterCount(id: number) {\n    // this.setState({\n    //   characters: this.state.characters.map(\n    //     (character: LXLT_DharmaChar, idx: number) => {\n    //       return {\n    //         letter: character.letter,\n    //         count: id == character.idx ? character.count + 1 : character.count,\n    //         idx: idx,\n    //       };\n    //     }\n    //   ),\n    // });\n  }\n\n  render() {\n    let { activeTheme } = this.state;\n\n    const SetGlobalTheme = createGlobalStyle`\n      ${\n        activeTheme\n          ? CssUtils.CreateTheme(\n              activeTheme.primary,\n              activeTheme.secondary,\n              activeTheme.background,\n              activeTheme.foreground\n            )\n          : \"\"\n      }\n    `;\n\n    return (\n      <>\n        {activeTheme ? <SetGlobalTheme /> : null}\n        <ThemePickerStyle className={`${ThemePickerClassName}`}>\n          PICKER\n        </ThemePickerStyle>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAgBA;AACA;AACA;AACA;;;;;AAKA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAhBA;AACA;AAJA;AA8BA;AACA;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAAA;AAAA;AAoDA;AAGA;AAaA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AA5EA;AACA;AADA;AAAA;;;;A","sourceRoot":""}