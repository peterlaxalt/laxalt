{"version":3,"file":"static/webpack/static/development/pages/projects/p6.js.93959abc80a222e966c1.hot-update.js","sources":["webpack:///./sketches/p5/glsl.tsx"],"sourcesContent":["/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5, { Shader } from \"p5\";\n\n// Begin Component\n// __________________________________________________________________________\n\nconst GLSL_Canvas = (W: number, H: number, ID: number, BG: string) => (\n  p: p5\n) => {\n  // _________________________________________________\n  // Config\n  let theShader: Shader;\n\n  // _________________________________________________\n  // Preload\n  p.preload = () => {\n    theShader = p.loadShader(\n      `/shaders/ex_${ID}/shader.vert`,\n      `/shaders/ex_${ID}/shader.frag`\n    );\n  };\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.noStroke();\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    // shader() sets the active shader with our shader\n    p.shader(theShader);\n\n    theShader.setUniform(\"u_resolution\", [W, H]);\n    theShader.setUniform(\"u_time\", p.millis() / 1000.0);\n    theShader.setUniform(\"u_mouse\", [p.mouseX, p.map(p.mouseY, 0, H, H, 0)]);\n\n    // rect gives us some geometry on the screen\n    p.rect(0, 0, W, H);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default GLSL_Canvas;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;;;;;;AASA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAIA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AACA;AA0CA;;;;A","sourceRoot":""}