{"version":3,"file":"static/webpack/static/development/pages/projects/dharma.js.6c903448c961a9beb82c.hot-update.js","sources":["webpack:///./constants/styles/Color.tsx","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js"],"sourcesContent":["// Color.js:\n// This is the sitewide palette.\n\n// Imports\n// _______________________________________________________\n\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// Begin Component\n// _______________________________________________________\n\nexport type LXLT_ColorTheme = {\n  primary: string;\n  secondary: string;\n  background: string;\n  foreground: string;\n  setTheme?: (theme: LXLT_ColorTheme) => void;\n};\n\nexport const Color = {\n  // Color Variables\n  varPrimary: \"var(--clrPrimary)\",\n  varSecondary: \"var(--clrSecondary)\",\n  varBackground: \"var(--clrBackground)\",\n  varForeground: \"var(--clrForeground)\",\n\n  // Core Colors\n  Primary: \"#111b24\",\n  Secondary: \"#5D6376\",\n  Background: \"#ff988c\",\n  Text: \"#111b24\",\n\n  // Grayscale Palette\n  Black: \"#000000\",\n  Nightsky: \"#151313\",\n  Warmsky: \"#34281D\",\n  Gravel: \"#4E4135\",\n  Slate: \"#928070\",\n  Tan: \"#C4AC97\",\n  Gray: \"#DAC9BA\",\n  Blush: \"#F6E7D9\",\n  Cream: \"#FFF6EE\",\n  White: \"#FFFFFF\",\n\n  // Warm Palette\n  Clay: \"#A33609\",\n  Nova: \"#E24809\",\n  Sunlight: \"#E9A200\",\n  Sunset: \"#ED9158\",\n\n  // Cool Palette\n  Galaxy: \"#111b24\",\n  Deepsea: \"#002F9E\",\n  Ocean: \"#269FE2\",\n  Sky: \"#7AC0E6\",\n  Dino: \"#23023B\",\n  Eggplant: \"#520589\",\n  Lilac: \"#874BB4\",\n\n  // Feedback Palette\n  Warning: \"#FC6376\",\n  Success: \"#40DA33\",\n};\n\nexport const ColorContext_Defaults: LXLT_ColorTheme = {\n  primary: Color.White,\n  secondary: Color.Sunlight,\n  foreground: Color.White,\n  background: Color.Galaxy,\n  setTheme: () => {},\n};\n\nexport const SetColorTheme = (): LXLT_ColorTheme => {\n  const [colorTheme, setColorTheme] = React.useState(ColorContext_Defaults);\n\n  const setTheme = React.useCallback(\n    (currentColorTheme: LXLT_ColorTheme): void => {\n      setColorTheme(currentColorTheme);\n    },\n    []\n  );\n\n  return {\n    ...colorTheme,\n    setTheme,\n  };\n};\n\nexport const ColorContext = React.createContext<LXLT_ColorTheme>(\n  ColorContext_Defaults\n);\n\nexport const Palette = createGlobalStyle`\n  ::-moz-selection { background: ${Color.Primary}; color: ${Color.White} }\n  ::selection { background: ${Color.Primary}; color: ${Color.White} }\n\n  :root {\n    --clrPrimary: ${Color.Primary};\n    --clrSecondary: ${Color.Secondary};\n    --clrBackground: ${Color.Background};\n    --clrForeground: ${Color.Text};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArrayLimit(arr, i) {\n  if (!(_isIterable(Object(arr)) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AA6CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AAFA;AAIA;AAEA;AAIA;AAaA;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}