{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/_interactive/DharmaCounter/DharmaCounter.tsx","webpack:///./components/_interactive/DharmaCounter/index.tsx","webpack:///./components/_interactive/InteractiveFrameHeader/InteractiveFrameHeader.tsx","webpack:///./components/_interactive/InteractiveFrameHeader/index.tsx","webpack:///./components/_interactive/InteractiveFrameHeader/styles.scss.tsx","webpack:///./components/_svg/DharmaType/styles.scss.tsx","webpack:///./constants/Root.tsx","webpack:///./constants/Theme.tsx","webpack:///./constants/site/Settings.tsx","webpack:///./constants/styles/Animation.tsx","webpack:///./constants/styles/Base.tsx","webpack:///./constants/styles/Color.tsx","webpack:///./constants/styles/CssUtils.tsx","webpack:///./constants/styles/Font.tsx","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/index.tsx","webpack:///./pages/projects/dharma.tsx","webpack:///./sketches/p5 sync ^\\.\\/.*$","webpack:///./sketches/p5/d1.tsx","webpack:///./sketches/p5/d2.tsx","webpack:///./sketches/p5/d8.js","webpack:///./sketches/p5/dharma.tsx","webpack:///./sketches/p5/dharma_v0.tsx","webpack:///./sketches/p5/glsl.tsx","webpack:///external \"core-js/library/fn/array/from\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"next/dynamic\"","webpack:///external \"react\"","webpack:///external \"react-p5-wrapper\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"static/development/pages/index.js\": 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// Core\nimport React from \"react\";\nimport { Theme } from \"../../../constants/Theme\";\nimport {\n  DharmaTypeClassName,\n  DharmaTypeStyle,\n} from \"../../_svg/DharmaType/styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_DharmaCounter = {\n  text: string;\n};\n\ntype LXLT_DharmaCounterState = {\n  text: string;\n  characters: LXLT_DharmaChar[];\n\n  viewBoxHeight: number;\n  viewBoxWidth: number;\n\n  characterVerticalTranslation: number;\n  characterHorizontalScale: number;\n  characterVerticalScale: number;\n\n  characterWidth: number;\n\n  isInitialized: boolean;\n\n  offsetCount: number;\n};\n\ntype LXLT_DharmaChar = {\n  letter: string;\n  count: number;\n  idx: number;\n  copies: boolean;\n};\n\ntype LXLT_DharmaCounterDisplay = LXLT_DharmaCounterState & {\n  updateLetterCount: (id: number) => void;\n\n  outlined?: boolean;\n  offset?: number;\n  addClass?: string;\n};\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n * @name DharmaCounter\n * @author Peter Laxalt\n *\n */\nexport class DharmaCounter extends React.PureComponent<\n  LXLT_DharmaCounter,\n  LXLT_DharmaCounterState\n> {\n  constructor(props: LXLT_DharmaCounter) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      characters: [],\n\n      viewBoxHeight: 0,\n      viewBoxWidth: 0,\n      characterWidth: 0,\n\n      offsetCount: 3,\n\n      characterVerticalTranslation: 0,\n      characterHorizontalScale: 0,\n      characterVerticalScale: 0,\n\n      isInitialized: false,\n    };\n\n    this.incrementLetterCount = this.incrementLetterCount.bind(this);\n    this.decrementLetterCount = this.decrementLetterCount.bind(this);\n    this.resetLetterCount = this.resetLetterCount.bind(this);\n    this.updateLetterCount = this.updateLetterCount.bind(this);\n\n    this.letterCountTimer = this.letterCountTimer.bind(this);\n\n    this.offsetCountTimer = this.offsetCountTimer.bind(this);\n    this.incrementOffsetCount = this.incrementOffsetCount.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.text) {\n      // ____________________________________________\n      // Get text / create array\n      let { text } = this.props;\n\n      let splitCharacterArray = text.split(\"\");\n      let characterArray: LXLT_DharmaChar[] = splitCharacterArray.map(\n        (character: string, idx: number) => {\n          return {\n            letter: character,\n            count: 1,\n            idx: idx,\n            copies: Math.random() <= 0.5,\n          };\n        }\n      );\n\n      // ____________________________________________\n      // USE THESE TO TWEAK YOUR CHARACTERS TO FIT\n      let viewBoxHeight = 100;\n      let viewBoxWidth = 100;\n\n      let characterCount = splitCharacterArray.length;\n      let characterWidth = viewBoxWidth / characterCount;\n\n      // let characterVerticalTranslation = 0.963; // Multiplied by the viewBoxHeight\n      let characterVerticalTranslation = 0.993; // Multiplied by the viewBoxHeight\n      let characterHorizontalScale = 0.75; // Multiplied by the characterWidth\n      let characterVerticalScale = 1.38; // Multiplied by the characterWidth\n\n      this.setState({\n        text: text,\n        characters: characterArray,\n\n        viewBoxHeight: viewBoxHeight,\n        viewBoxWidth: viewBoxWidth,\n\n        characterWidth: characterWidth,\n\n        characterHorizontalScale: characterHorizontalScale,\n        characterVerticalScale: characterVerticalScale,\n        characterVerticalTranslation: characterVerticalTranslation,\n\n        isInitialized: true,\n      });\n\n      this.letterCountTimer();\n      this.offsetCountTimer();\n    }\n  }\n\n  incrementLetterCount(id: number) {\n    this.setState({\n      characters: this.state.characters.map(\n        (character: LXLT_DharmaChar, idx: number) => {\n          return {\n            letter: character.letter,\n            count: id == character.idx ? character.count + 1 : character.count,\n            idx: idx,\n            copies: Math.random() <= 0.5,\n          };\n        }\n      ),\n    });\n\n    return;\n  }\n\n  decrementLetterCount(id: number) {\n    this.setState({\n      characters: this.state.characters.map(\n        (character: LXLT_DharmaChar, idx: number) => {\n          return {\n            letter: character.letter,\n            count: id == character.idx ? character.count - 1 : character.count,\n            idx: idx,\n            copies: Math.random() <= 0.5,\n          };\n        }\n      ),\n    });\n\n    return;\n  }\n\n  resetLetterCount(id: number) {\n    this.setState({\n      characters: this.state.characters.map(\n        (character: LXLT_DharmaChar, idx: number) => {\n          return {\n            letter: character.letter,\n            count: id == character.idx ? 1 : character.count,\n            idx: idx,\n            copies: Math.random() <= 0.5,\n          };\n        }\n      ),\n    });\n\n    return;\n  }\n\n  updateLetterCount(id: number) {\n    if (this.state.characters && this.state.characters.length > 0) {\n      let matchedCharacter: LXLT_DharmaChar = this.state.characters.filter(\n        (character: LXLT_DharmaChar) => character.idx == id\n      )[0];\n\n      let maxCount = 4;\n\n      if (matchedCharacter) {\n        if (matchedCharacter.count === maxCount) {\n          this.resetLetterCount(id);\n        } else {\n          this.incrementLetterCount(id);\n        }\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n\n    return;\n  }\n\n  letterCountTimer() {\n    function generateRandomInteger(min, max) {\n      return Math.floor(min + Math.random() * (max + 1 - min));\n    }\n\n    window.setInterval(\n      () =>\n        this.updateLetterCount(\n          generateRandomInteger(0, this.state.characters.length)\n        ),\n      3000\n    );\n  }\n\n  incrementOffsetCount() {\n    this.setState({\n      offsetCount: this.state.offsetCount < 15 ? this.state.offsetCount + 1 : 2,\n    });\n\n    return;\n  }\n\n  offsetCountTimer() {\n    window.setInterval(() => this.incrementOffsetCount(), 5000);\n  }\n\n  render() {\n    let offsetCount = this.state.offsetCount;\n    var offsetArr = Array.from(Array(offsetCount).keys());\n\n    return (\n      <>\n        <DharmaCounterDisplay\n          updateLetterCount={this.updateLetterCount}\n          {...this.state}\n        />\n\n        {offsetArr.map((n: number, idx: number) => {\n          return (\n            <DharmaCounterDisplay\n              outlined={true}\n              offset={n}\n              key={idx}\n              updateLetterCount={this.updateLetterCount}\n              {...this.state}\n            />\n          );\n        })}\n      </>\n    );\n  }\n}\n\nconst DharmaCounterDisplay: React.FunctionComponent<LXLT_DharmaCounterDisplay> = (\n  props\n) => {\n  let {\n    viewBoxHeight,\n    viewBoxWidth,\n    characters,\n    characterWidth,\n\n    characterHorizontalScale,\n    characterVerticalScale,\n    characterVerticalTranslation,\n\n    updateLetterCount,\n\n    offset,\n    outlined,\n\n    addClass,\n  } = props;\n\n  return (\n    <DharmaTypeStyle\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n      preserveAspectRatio=\"none\"\n      className={`${DharmaTypeClassName} ${DharmaTypeClassName}--counter ${\n        offset ? `${DharmaTypeClassName}--offset` : \"\"\n      } ${addClass}`}\n      style={{\n        [`--${DharmaTypeClassName}-font-size` as any]: `${viewBoxHeight}px`,\n        [`--${DharmaTypeClassName}-offset` as any]: `${offset ? offset : 0}`,\n      }}\n    >\n      <g>\n        {characters.map((char: LXLT_DharmaChar, idx: number) => {\n          let countArray = Array.from(Array(char.count).keys());\n\n          return countArray.map((duplicate: number, idxx: number) => {\n            let adjustedDuplicate = char.count > 1 ? char.count : duplicate + 1;\n\n            let canCopy = Math.random() <= 0.5;\n\n            let adjustedVerticalTranslation =\n              (viewBoxHeight / adjustedDuplicate) *\n              (idxx + 1) *\n              characterVerticalTranslation;\n\n            let adjustedVerticalScale =\n              characterVerticalScale / adjustedDuplicate;\n\n            return (\n              <g\n                className={`${DharmaTypeClassName}__character-wrapper`}\n                data-char-id={idx}\n                data-char-count={duplicate}\n                key={idxx}\n                onClick={() => updateLetterCount(idx)}\n                style={{\n                  display: outlined && char.copies && canCopy ? \"none\" : \"inherit\",\n                }}\n              >\n                <filter\n                  id={`displacementFilter__${idx}__${idxx}${\n                    outlined ? \"__outlined\" : \"\"\n                  }`}\n                >\n                  {!outlined && (\n                    <>\n                      <feTurbulence\n                        type=\"turbulence\"\n                        // baseFrequency={0.6 * (idxx * 0.05)}\n                        // numOctaves={1 * (idxx + 20)}\n                        baseFrequency={0}\n                        numOctaves={0}\n                        result=\"turbulence\"\n                      />\n                      <feDisplacementMap\n                        in2=\"turbulence\"\n                        in=\"SourceGraphic\"\n                        // scale={3 - idxx * 0.5}\n                        scale={0}\n                        xChannelSelector=\"R\"\n                        yChannelSelector=\"G\"\n                      />\n                    </>\n                  )}\n\n                  {/* Outline  */}\n                  {outlined && (\n                    <>\n                      <feFlood\n                        flood-color={Theme.Color.varBackground}\n                        flood-opacity=\"1\"\n                        result=\"PINK\"\n                      />\n                      <feMorphology\n                        in=\"SourceAlpha\"\n                        result=\"DILATED\"\n                        operator=\"dilate\"\n                        radius=\".1\"\n                      />\n                      <feComposite\n                        in=\"PINK\"\n                        in2=\"DILATED\"\n                        operator=\"in\"\n                        result=\"OUTLINE\"\n                      />\n\n                      <feMerge>\n                        <feMergeNode in=\"OUTLINE\" />\n                        <feMergeNode in=\"SourceGraphic\" />\n                      </feMerge>\n                    </>\n                  )}\n                </filter>\n\n                <text\n                  className={`${DharmaTypeClassName}__character`}\n                  transform={`translate(${\n                    characterWidth * idx\n                  } ${adjustedVerticalTranslation}) scale(${characterHorizontalScale}, ${adjustedVerticalScale})`}\n                  style={{\n                    [`--${DharmaTypeClassName}-key` as any]: idx,\n                    filter: `url(#displacementFilter__${idx}__${idxx}${\n                      outlined ? \"__outlined\" : \"\"\n                    })`,\n                  }}\n                >\n                  <tspan className={`${DharmaTypeClassName}__letter`}>\n                    {char.letter}\n                  </tspan>\n                </text>\n              </g>\n            );\n          });\n        })}\n      </g>\n    </DharmaTypeStyle>\n  );\n};\n","export * from \"./DharmaCounter\";\n","// Core\nimport React from \"react\";\n\n// Components\nimport { DharmaCounter } from \"../DharmaCounter\";\n\n// Styles\nimport {\n  InteractiveFrameHeaderClassName,\n  InteractiveFrameHeaderStyle,\n} from \"./styles.scss\";\n\n// Begin Types\n// __________________________________________________________________________________________\n\ntype LXLT_InteractiveFrameHeader = {\n  includeType?: boolean;\n};\n\ntype LXLT_InteractiveFrameItem = {\n  label: string;\n  href?: string;\n};\n\n// Begin Data\n// __________________________________________________________________________________________\n\nconst FrameItems = () => {\n  let items: LXLT_InteractiveFrameItem[] = [\n    {\n      label: \"Studio\",\n      href: \"/\",\n    },\n    {\n      label: \"Art\",\n      href: \"/\",\n    },\n    {\n      label: \"Design\",\n      href: \"/\",\n    },\n    {\n      label: \"Strategy\",\n      href: \"/\",\n    },\n    {\n      label: \"Interactive\",\n      href: \"/\",\n    },\n    {\n      label: \"Murals\",\n      href: \"/\",\n    },\n    {\n      label: \"Code\",\n      href: \"/\",\n    },\n    {\n      label: \"Lab\",\n      href: \"/\",\n    },\n    {\n      label: \"Products\",\n      href: \"/\",\n    },\n    {\n      label: \"Music\",\n      href: \"/\",\n    },\n    {\n      label: \"Tattoo\",\n      href: \"/\",\n    },\n    {\n      label: \"Shop\",\n      href: \"/\",\n    },\n    {\n      label: \"Resources\",\n      href: \"/\",\n    },\n    {\n      label: \"Advice\",\n      href: \"/\",\n    },\n    {\n      label: \"Fonts\",\n      href: \"/\",\n    },\n  ];\n\n  return (\n    <div className={`${InteractiveFrameHeaderClassName}__marquee-container`}>\n      <ul className={`${InteractiveFrameHeaderClassName}__frame-items`}>\n        {items.map((item: LXLT_InteractiveFrameItem, idx: number) => {\n          return <li key={idx}>{item.label}</li>;\n        })}\n      </ul>\n\n      <ul className={`${InteractiveFrameHeaderClassName}__frame-items`}>\n        {items.map((item: LXLT_InteractiveFrameItem, idx: number) => {\n          return <li key={idx}>{item.label}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\n// Begin Component\n// _________________________________________________________________________________________\n\n/**\n *\n * @name InteractiveFrameHeader\n * @author Peter Laxalt\n *\n */\nexport const InteractiveFrameHeader: React.FunctionComponent<LXLT_InteractiveFrameHeader> = ({\n  includeType,\n}) => (\n  <InteractiveFrameHeaderStyle className={`${InteractiveFrameHeaderClassName}`}>\n    {/* ______________________________________________ */}\n    {/* Inner Grid */}\n    <div className={`${InteractiveFrameHeaderClassName}__inner`}>\n      {/* ______________________________________________ */}\n      {/* Frame */}\n      <div className={`${InteractiveFrameHeaderClassName}__frame`}>\n        {/* ______________________________________________ */}\n        {/* Top and bottom (y-axis) items */}\n        <div className={`${InteractiveFrameHeaderClassName}__frame__y-axis`}>\n          <div\n            className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--top`}\n          >\n            <FrameItems />\n          </div>\n          <div\n            className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--bottom`}\n          >\n            <FrameItems />\n          </div>\n        </div>\n\n        {/* ______________________________________________ */}\n        {/* Left and right (x-axis) items */}\n        <div className={`${InteractiveFrameHeaderClassName}__frame__x-axis`}>\n          <div\n            className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--left`}\n          >\n            <FrameItems />\n          </div>\n\n          <div\n            className={`${InteractiveFrameHeaderClassName}__frame__edge ${InteractiveFrameHeaderClassName}__frame__edge--right`}\n          >\n            <FrameItems />\n          </div>\n        </div>\n      </div>\n\n      {/* ______________________________________________ */}\n      {/* Typeface */}\n      {includeType ? (\n        <div className={`${InteractiveFrameHeaderClassName}__type`}>\n          <DharmaCounter text=\"LAXALT\" />\n        </div>\n      ) : null}\n    </div>\n  </InteractiveFrameHeaderStyle>\n);\n\n// End Component\n// ______________________________________________________________________________\n","export * from \"./InteractiveFrameHeader\";\n","// Imports\n// _________________________________________________________________________\n\n// Core\nimport styled from \"styled-components\";\n\n// Constants\nimport { Theme } from \"../../../constants/Theme\";\nimport { Root } from \"../../../constants/Root\";\nimport { DharmaTypeClassName } from \"../../_svg/DharmaType/styles.scss\";\nimport {} from \"../../../constants/styles/CssUtils\";\n\n// Begin Styles\n// _________________________________________________________________________\n\n/**\n *\n * @name InteractiveFrameHeaderClassName\n * @description The root class name for styling. BEM naming conventions.\n *\n */\nexport const InteractiveFrameHeaderClassName = \"interactive-frame-header\";\n\n/**\n *\n * @name InteractiveFrameHeaderStyle\n * @author Peter Laxalt\n *\n */\nexport const InteractiveFrameHeaderStyle = styled.div`\n  &.${InteractiveFrameHeaderClassName} {\n    // __________________________\n    // Settings\n    --${InteractiveFrameHeaderClassName}__frame-edge-size: ${Root.FrameSize};\n    --${InteractiveFrameHeaderClassName}__marquee-speed: 60s;\n\n    @media(max-width: ${Theme.Base.Media.Width.Md}) {\n      --${InteractiveFrameHeaderClassName}__frame-edge-size: ${Root.FrameSize};\n    }\n\n    overflow: hidden;\n\n    position: fixed;\n\n    left: 0;\n    top: 0;\n\n    width: 100vw;\n    height: 100vh;\n\n    z-index: 900;\n\n    pointer-events: none;\n\n\n\n    // __________________________\n    // Inner Grid\n    .${InteractiveFrameHeaderClassName}__inner {\n      width: 100vw;\n      height: 100vh;\n\n      position: relative;\n\n      z-index: 999;\n\n      pointer-events: none;\n\n    }\n\n    .${DharmaTypeClassName}, .${InteractiveFrameHeaderClassName}__frame {\n      position: absolute;\n\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n\n      width: 100%;\n      height: 100%;\n    }\n\n    .${InteractiveFrameHeaderClassName}__type {\n      position: absolute;\n\n      top: 50%;\n      left: 50%;\n\n      transform: translate(-50%, -50%);\n\n      width: calc(100% - (var(--${InteractiveFrameHeaderClassName}__frame-edge-size) * 2));\n      height: calc(100% - (var(--${InteractiveFrameHeaderClassName}__frame-edge-size) * 2.25));\n\n      @media(max-width: ${Theme.Base.Media.Width.Sm}) {\n        transform: translate(-50%, -50%) rotate(90deg);\n\n        width: calc(100vh - (var(--${InteractiveFrameHeaderClassName}__frame-edge-size) * 2.25));\n        height: calc(100vw - (var(--${InteractiveFrameHeaderClassName}__frame-edge-size) * 2.25));\n      }\n\n      .${DharmaTypeClassName} {\n        --${DharmaTypeClassName}-offset-size: 10px;\n\n        @media(max-width: ${Theme.Base.Media.Width.Sm}) {\n          --${DharmaTypeClassName}-offset-size: 5px;\n        }\n\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n\n        width: 100%;\n        height: 100%;\n\n        &--offset {\n          top: calc(var(--${DharmaTypeClassName}-offset-size) * (var(--${DharmaTypeClassName}-offset) * -1));\n          left: calc(var(--${DharmaTypeClassName}-offset-size) * (var(--${DharmaTypeClassName}-offset) * 1));\n          right: calc(var(--${DharmaTypeClassName}-offset-size) * (var(--${DharmaTypeClassName}-offset) * -1));\n          bottom: calc(var(--${DharmaTypeClassName}-offset-size) * (var(--${DharmaTypeClassName}-offset) * 1));\n        }\n      }\n\n      .${DharmaTypeClassName}__character {\n        fill: ${Theme.Color.varForeground};\n\n        transition: stroke-width .5s ease;\n      }\n    }\n\n    .${InteractiveFrameHeaderClassName}__frame {\n      z-index: 500;\n\n      &__y-axis,\n      &__x-axis {\n        position: absolute;\n\n        overflow: hidden;\n\n        left: 50%;\n        top: 50%;\n\n        pointer-events: none;\n\n      }\n\n      &__y-axis {\n        width: 100vw;\n        height: 100vh;\n\n        transform: translate(-50%, -50%);\n      }\n\n      &__x-axis {\n        width: 100vh;\n        height: 100vw;\n\n        transform: translate(-50%, -50%) rotate(90deg);\n      }\n\n      &__edge {\n        font-size: calc(var(--${InteractiveFrameHeaderClassName}__frame-edge-size) * 0.75);\n        text-transform: uppercase;\n        line-height: 0;\n\n        z-index: 800;\n\n        background: ${Theme.Color.varBackground};\n\n        .${InteractiveFrameHeaderClassName}__frame-items {\n          list-style-type: none;\n\n          color: ${Theme.Color.varForeground};\n\n          height: var(--${InteractiveFrameHeaderClassName}__frame-edge-size);\n\n          display: block;\n          align-items: center;\n          justify-content: flex-start;\n\n          li {\n            margin-right: calc(var(--${InteractiveFrameHeaderClassName}__frame-edge-size) / 2);\n          }\n        }\n\n        .${InteractiveFrameHeaderClassName}__marquee-container {\n          flex-shrink: 0;\n\n          display: flex;\n          justify-content: flex-start;\n\n          flex-wrap: nowrap;\n          position: relative;\n\n          overflow: hidden;\n\n          .${InteractiveFrameHeaderClassName}__frame-items {\n            display: flex;\n            flex-wrap: nowrap;\n            white-space: nowrap;\n\n            flex-shrink: 0;\n\n            li {\n              width: auto;\n              flex-shrink: 0;\n              white-space: nowrap;\n\n              vertical-align: middle;\n              display: table-cell;\n            }\n          }\n        }\n\n        &--top,\n        &--bottom,\n        &--left,\n        &--right {\n          position: absolute;\n\n          overflow: hidden;\n\n          pointer-events: all;\n        }\n\n        &--top,\n        &--right {\n          border-bottom: 1px solid ${Theme.Color.varForeground};\n\n          .${InteractiveFrameHeaderClassName}__frame-items {\n            padding-top: calc(var(--${InteractiveFrameHeaderClassName}__frame-edge-size) / 6);\n            padding-bottom: calc(var(--${InteractiveFrameHeaderClassName}__frame-edge-size) / 6);\n\n            position: relative;\n\n            animation: marqueeTopRightQuadrants var(--${InteractiveFrameHeaderClassName}__marquee-speed) linear infinite;\n          }\n        }\n\n        &--bottom,\n        &--left {\n          border-top: 1px solid ${Theme.Color.varForeground};\n\n          .${InteractiveFrameHeaderClassName}__frame-items {\n            padding-top: calc(var(--${InteractiveFrameHeaderClassName}__frame-edge-size) / 6);\n            padding-bottom: calc(var(--${InteractiveFrameHeaderClassName}__frame-edge-size) / 6);\n\n            animation: marqueeBottomLeftQuadrants var(--${InteractiveFrameHeaderClassName}__marquee-speed) linear infinite;\n          }\n        }\n\n        &--top,\n        &--bottom {\n          width: calc(100vw - var(--${InteractiveFrameHeaderClassName}__frame-edge-size));\n        }\n\n        &--left,\n        &--right {\n          width: calc(100vh - var(--${InteractiveFrameHeaderClassName}__frame-edge-size));\n        }\n\n        &--top {\n          /* background: seashell; */\n\n          top: 0;\n          left: var(--${InteractiveFrameHeaderClassName}__frame-edge-size);\n        }\n\n        &--bottom {\n          /* background: magenta; */\n\n          bottom: 0;\n          right: var(--${InteractiveFrameHeaderClassName}__frame-edge-size);\n        }\n\n        &--right {\n          /* background: orange; */\n\n          top: 0;\n          left: var(--${InteractiveFrameHeaderClassName}__frame-edge-size);\n        }\n\n        &--left {\n          /* background: goldenrod; */\n\n          bottom: 0;\n          left: 0;\n        }\n      }\n    }\n  }\n`;\n","// Imports\n// _________________________________________________________________________\n\n// Core\nimport styled from \"styled-components\";\n\n// Constants\nimport {} from \"../../../constants/Theme\";\nimport {} from \"../../../constants/Root\";\nimport { CssUtils } from \"../../../constants/styles/CssUtils\";\n\n// Begin Styles\n// _________________________________________________________________________\n\n/**\n *\n * @name DharmaTypeClassName\n * @description The root class name for styling. BEM naming conventions.\n *\n */\nexport const DharmaTypeClassName = \"dharma-type\";\n\n/**\n *\n * @name DharmaTypeStyle\n * @author Peter Laxalt\n *\n */\nexport const DharmaTypeStyle = styled.svg`\n  &.${DharmaTypeClassName} {\n    .${DharmaTypeClassName}__character-wrapper {\n      /* filter: blur(0.01px); */\n      position: relative;\n\n      /* transition: filter 0.5s ease-in-out;\n\n      &:hover {\n        filter: blur(0.25px);\n      } */\n\n      // ___________________________________\n      // @name Letter Kerning for \"LAXALT\"\n      &[data-char-id=\"5\"] {\n        transform: translateX(2.25px);\n      }\n\n      &[data-char-id=\"4\"] {\n        transform: translateX(5.25px);\n      }\n\n      &[data-char-id=\"3\"] {\n        transform: translateX(3.25px);\n      }\n\n      &[data-char-id=\"2\"] {\n        transform: translateX(0.75px);\n      }\n\n      &[data-char-id=\"1\"] {\n        transform: translateX(-1.5px);\n      }\n\n      &[data-char-id=\"0\"] {\n        transform: translateX(0px);\n      }\n\n      &--hidden {\n        display: none;\n      }\n    }\n\n    .${DharmaTypeClassName}__character {\n      font-size: var(--${DharmaTypeClassName}-font-size);\n      font-family: dharma;\n      /* font-family: Bordeaux Roman Bold LET, DharmaGothicC-ExBold, Dharma Gothic C; */\n      font-weight: 700;\n      letter-spacing: 0em;\n\n      ${CssUtils.DisableUserSelect()};\n    }\n\n    // ___________________________________\n    // @name Simple Version\n\n    .${DharmaTypeClassName}__text {\n      font-size: var(--${DharmaTypeClassName}-font-size);\n      font-family: DharmaGothicC-ExBold, Dharma Gothic C;\n      /* font-family: Bordeaux Roman Bold LET, DharmaGothicC-ExBold, Dharma Gothic C; */\n      font-weight: 700;\n      letter-spacing: 0em;\n\n\n      transition: filter 1s ease-in-out;\n      will-change: filter;\n    }\n  }\n`;\n","// Root.js:\n// This file is primarily used to create naming and can also be\n// used to automate some math. Don't forget if you update the other\n// style files to include the export down below here if you want to\n// reference it conveniently in the Theme.js export.\n\n// Usage:\n// 1. First import the file.\n// import { Root } from '../../../path/to/Root'\n// 2. Use it in your SC: 'color: ${Root.Size}; or simply refer to the object and key when used in functions.'\n\nimport { createGlobalStyle } from \"styled-components\";\nimport { Theme } from \"../constants/Theme\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Assign CSS Variables for automatic Media Queries.\nexport const Root = {\n  // Palette\n  Color: {\n    Bg: \"var(--BgColor)\",\n    Text: \"var(--TextColor)\",\n    Mbm: \"var(--MbmColor)\",\n  },\n\n  // Core Base Measurement\n  Size: \"var(--Size)\",\n\n  ViewWidthFontSize: \"var(--ViewWidthFontSize)\",\n  ViewHeightFontSize: \"var(--ViewHeightFontSize)\",\n  IconSize: \"var(--IconSize)\",\n\n  // Root Element Measurement\n  Rem: \"var(--REM)\",\n\n  // View Width (vw) Based Measurements\n  ViewWidthPadding: \"var(--ViewWidthPadding)\",\n\n  // Site Grid\n  Site: {\n    Width: \"var(--SiteWidth)\",\n  },\n  Nav: {\n    Size: \"var(--NavSize)\",\n  },\n  Footer: {\n    Size: \"var(--FooterSize)\",\n  },\n\n  Grid: {\n    // Universal padding from the edge of the browser\n    // Read more: https://read.compassofdesign.com/guides-gutters-and-grids-2ce6092fc3de\n    Gutter: {\n      Top: \"var(--GutterTop)\",\n      Right: \"var(--GutterRight)\",\n      Bottom: \"var(--GutterBottom)\",\n      Left: \"var(--GutterLeft)\",\n    },\n\n    Indent: {\n      X: \"var(--IndentX)\",\n      Y: \"var(--IndentY)\",\n    },\n  },\n\n  // Buttons\n  Button: {\n    Size: \"var(--ButtonSize)\",\n  },\n\n  // Inputs\n  Input: \"var(--InputSize)\",\n\n  // Geometry\n  Radius: \"var(--Radius)\",\n\n  // Frame\n  FrameSize: \"var(--FrameSize)\",\n};\n\n// Responsive Measurements:\n// We use these to avoid media queries all\n// over the place where possible.\n\nexport const RootVariables = createGlobalStyle`\n  :root {\n    /* ----------------------------------- Large Width Viewports */\n\n    /* --------------- Palette*/\n    --BgColor: ${Theme.Color.Background}\n    --TextColor: ${Theme.Color.Primary}\n    --MbmColor: ${Theme.Color.White}\n\n    /* --------------- Base Measurements*/\n\n    /* -------- Base Measurement */\n    --Size: ${Theme.Base.Size.Lg};\n\n    /* -------- Font Sizes (Viewport) */\n    --ViewWidthFontSize: ${Theme.Font.Size.ViewWidth.Lg};\n    --ViewHeightFontSize: ${Theme.Font.Size.ViewHeight.Lg};\n    --IconSize: ${Theme.Font.Icon.Size.Lg};\n\n    /* -------- Root Element Measurement */\n    --REM: ${Theme.Base.Rem.Lg};\n\n    /* -------- View Width (vw) Based Measurements */\n    --ViewWidthPadding: ${Theme.Base.ViewWidth.Padding.Lg};\n\n    /* --------- Site Grid */\n    --SiteWidth: ${Theme.Base.Grid.SiteWidth};\n    --NavSize: ${Theme.Base.Grid.Nav.Size.Lg};\n    --FooterSize: ${Theme.Base.Grid.Footer.Size.Lg};\n\n    /* --- Gutters */\n    --GutterTop: ${Theme.Base.Grid.Gutter.Lg.Top};\n    --GutterRight: ${Theme.Base.Grid.Gutter.Lg.Right};\n    --GutterBottom: ${Theme.Base.Grid.Gutter.Lg.Bottom};\n    --GutterLeft: ${Theme.Base.Grid.Gutter.Lg.Left};\n\n    /* --------- Buttons */\n    --ButtonSize: ${Theme.Base.Button.Lg};\n\n    /* --------- Inputs */\n    --InputSize: ${Theme.Base.Input.Lg};\n\n    /* --------- Geometry */\n    --Radius: ${Theme.Base.Geometry.Radius};\n\n    /* --------- Frame */\n    --FrameSize: ${Theme.FrameSize};\n\n    /* ----------------------------------- Medium Width Viewports */\n    @media (max-width: ${Theme.Base.Media.Width.Md}) {\n      /* --------------- Base Measurements*/\n\n        /* --------- Frame */\n        --FrameSize: 2rem;\n\n        /* -------- Base Measurement */\n        --Size: ${Theme.Base.Size.Md};\n\n        /* -------- Font Sizes (Viewport) */\n        --ViewWidthFontSize: ${Theme.Font.Size.ViewWidth.Md};\n        --ViewHeightFontSize: ${Theme.Font.Size.ViewHeight.Md};\n        --IconSize: ${Theme.Font.Icon.Size.Md};\n\n        /* -------- Root Element Measurement */\n        --REM: ${Theme.Base.Rem.Md};\n\n        /* -------- View Width (vw) Based Measurements */\n        --ViewWidthPadding: ${Theme.Base.ViewWidth.Padding.Md};\n\n        /* --------- Site Grid */\n        --SiteWidth: ${Theme.Base.Grid.SiteWidth};\n        --NavSize: ${Theme.Base.Grid.Nav.Size.Md};\n        --FooterSize: ${Theme.Base.Grid.Footer.Size.Md};\n\n        /* --- Gutters */\n        --GutterTop: ${Theme.Base.Grid.Gutter.Md.Top};\n        --GutterRight: ${Theme.Base.Grid.Gutter.Md.Right};\n        --GutterBottom: ${Theme.Base.Grid.Gutter.Md.Bottom};\n        --GutterLeft: ${Theme.Base.Grid.Gutter.Md.Left};\n\n        /* --------- Buttons */\n        --ButtonSize: ${Theme.Base.Button.Md};\n\n        /* --------- Inputs */\n        --InputSize: ${Theme.Base.Input.Md};\n\n        /* --------- Geometry */\n        --Radius: ${Theme.Base.Geometry.Radius};\n    }\n\n    /* ----------------------------------- Small Width Viewports */\n    @media (max-width: ${Theme.Base.Media.Width.Sm}) {\n      /* --------------- Base Measurements*/\n\n        /* -------- Base Measurement */\n        --Size: ${Theme.Base.Size.Sm};\n\n        /* -------- Font Sizes (Viewport) */\n        --ViewWidthFontSize: ${Theme.Font.Size.ViewWidth.Sm};\n        --ViewHeightFontSize: ${Theme.Font.Size.ViewHeight.Sm};\n        --IconSize: ${Theme.Font.Icon.Size.Sm};\n\n        /* -------- Root Element Measurement */\n        --Rem: ${Theme.Base.Rem.Sm};\n\n        /* -------- View Width (vw) Based Measurements */\n        --ViewWidthPadding: ${Theme.Base.ViewWidth.Padding.Sm};\n\n        /* --------- Site Grid */\n        --SiteWidth: ${Theme.Base.Grid.SiteWidth};\n        --NavSize: ${Theme.Base.Grid.Nav.Size.Sm};\n        --FooterSize: ${Theme.Base.Grid.Footer.Size.Sm};\n\n        /* --- Gutters */\n        --GutterTop: ${Theme.Base.Grid.Gutter.Sm.Top};\n        --GutterRight: ${Theme.Base.Grid.Gutter.Sm.Right};\n        --GutterBottom: ${Theme.Base.Grid.Gutter.Sm.Bottom};\n        --GutterLeft: ${Theme.Base.Grid.Gutter.Sm.Left};\n\n        /* --------- Buttons */\n        --ButtonSize: ${Theme.Base.Button.Sm};\n\n        /* --------- Inputs */\n        --InputSize: ${Theme.Base.Input.Sm};\n\n        /* --------- Geometry */\n        --Radius: ${Theme.Base.Geometry.Radius};\n    }\n  }\n`;\n\n// End Component\n//////////////////////////////////////////////////////////////////////\n","/**\n *\n * Theme.js:\n * @author Peter Laxalt\n * @description\n * This file is primarily used to create naming and can also be\n * used to automate some math. Don't forget if you update the other\n * style files to include the export down below here if you want to\n * reference it conveniently in the Theme.js export.\n *\n * @example\n * 1. First import the file.\n * import { Theme } from '../../../path/to/Theme'\n * Use it in your SC: 'color: ${Theme.Color.Primary}; or simply refer to the object and key when used in functions.'\n */\n\n// Imports\n// ____________________________________________________________________________________\n\nimport { Settings } from \"./site/Settings\";\nimport { Font } from \"./styles/Font\";\nimport { Base } from \"./styles/Base\";\nimport { Color } from \"./styles/Color\";\n\n// Begin Component\n// ____________________________________________________________________________________\n\nexport const Theme = {\n  // General Site Information & Keywords\n  Site: Settings,\n\n  // Fonts throughout the app.\n  Font: Font,\n\n  // Core measurements throughout the app.\n  Base: {\n    // Core Base Measurement\n    Size: {\n      Lg: Base.Size.Lg + \"px\",\n      Md: Base.Size.Md + \"px\",\n      Sm: Base.Size.Sm + \"px\",\n    },\n\n    // Root Element Measurement\n    Rem: {\n      Lg: Base.Rem.Lg + \"px\", // px\n      Md: Base.Rem.Md + \"px\", // px\n      Sm: Base.Rem.Sm + \"px\", // px\n    },\n\n    // Responsive Breakpoints\n    Media: {\n      Width: {\n        Lg: Base.Media.Width.Lg + \"px\",\n        Md: Base.Media.Width.Md + \"px\",\n        Sm: Base.Media.Width.Sm + \"px\",\n      },\n      Height: {\n        Lg: Base.Media.Height.Lg + \"px\",\n        Md: Base.Media.Height.Md + \"px\",\n        Sm: Base.Media.Height.Sm + \"px\",\n      },\n    },\n\n    // Site Grid\n    Grid: {\n      SiteWidth: Base.Grid.SiteWidth + \"px\",\n      Nav: {\n        Size: {\n          Lg: Base.Grid.Nav.Size.Lg + \"px\",\n          Md: Base.Grid.Nav.Size.Md + \"px\",\n          Sm: Base.Grid.Nav.Size.Sm + \"px\",\n        },\n      },\n\n      Footer: {\n        Size: {\n          Lg: Base.Grid.Footer.Size.Lg + \"px\",\n          Md: Base.Grid.Footer.Size.Md + \"px\",\n          Sm: Base.Grid.Footer.Size.Sm + \"px\",\n        },\n      },\n\n      // Universal padding from the edge of the browser\n      // Read more: https://read.compassofdesign.com/guides-gutters-and-grids-2ce6092fc3de\n      Gutter: {\n        Lg: {\n          Top: Base.Grid.Gutter.Lg.Top + \"px\",\n          Bottom: Base.Grid.Gutter.Lg.Bottom + \"px\",\n          Right: Base.Grid.Gutter.Lg.Right + \"px\",\n          Left: Base.Grid.Gutter.Lg.Left + \"px\",\n        },\n        Md: {\n          Top: Base.Grid.Gutter.Md.Top + \"px\",\n          Bottom: Base.Grid.Gutter.Md.Bottom + \"px\",\n          Right: Base.Grid.Gutter.Md.Right + \"px\",\n          Left: Base.Grid.Gutter.Md.Left + \"px\",\n        },\n        Sm: {\n          Top: Base.Grid.Gutter.Sm.Top + \"px\",\n          Bottom: Base.Grid.Gutter.Sm.Bottom + \"px\",\n          Right: Base.Grid.Gutter.Sm.Right + \"px\",\n          Left: Base.Grid.Gutter.Sm.Left + \"px\",\n        },\n      },\n    },\n\n    // View Width (vw) Based Measurements\n    ViewWidth: {\n      Padding: {\n        Sm: Base.ViewWidth.Padding.Sm + \"vw\",\n        Md: Base.ViewWidth.Padding.Md + \"vw\",\n        Lg: Base.ViewWidth.Padding.Lg + \"vw\",\n      },\n    },\n\n    // Buttons\n    Button: {\n      Lg: Base.Button.Lg + \"px\",\n      Md: Base.Button.Md + \"px\",\n      Sm: Base.Button.Sm + \"px\",\n    },\n\n    // Inputs\n    Input: {\n      Lg: Base.Input.Lg + \"px\",\n      Md: Base.Input.Md + \"px\",\n      Sm: Base.Input.Sm + \"px\",\n    },\n\n    // Transitions\n    Transition: {\n      String: Base.Transition.String, // seconds\n      Duration: Base.Transition.Duration + \"s\", // seconds\n      Ease: Base.Transition.Ease, // Cubic Bezier Ease\n      CssEase:\n        \"cubic-bezier(\" +\n        Base.Transition.Ease[0] +\n        \", \" +\n        Base.Transition.Ease[1] +\n        \", \" +\n        Base.Transition.Ease[2] +\n        \", \" +\n        Base.Transition.Ease[3] +\n        \")\", // Cubic Bezier Ease (CSS String)\n      Page: Base.Transition.Page + \"s\", // milliseconds. Try to not go lower than 350ms or it gets buggy. TODO.\n    },\n\n    // Geometry\n    Geometry: {\n      Radius: Base.Geometry.Radius + \"px\", // px\n    },\n  },\n\n  // Core Palette & Colors\n  Color: Color,\n\n  // Frame\n  FrameSize: Base.FrameSize + \"rem\",\n};\n\n// End Component\n// ____________________________________________________________________________________\n","/**\n *\n * Settings.js\n * @author Peter Laxalt\n * @description This is the sitewide information that is used throughout the entire\n * build of the site. This goes from SEO to headings and also into the\n * core Gatsby config files as well.\n *\n */\n\n// Imports\n//////////////////////////////////////////////////////////////////////\nimport { Color } from \"../styles/Color\";\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const Settings = {\n  siteTitle:\n    \"Play-Well TEKnologies | LEGO®-inspired engineering classes for kids & adults.\",\n  siteTitleShort: \"Play-Well\",\n  siteDescription: \"Kids are natural engineers. We help them realize it.\",\n  siteBaseKeywords:\n    \"lego, engineering, engineering, classes, summer, camps, spring, learning, learn, play, education, knowledge\",\n  siteUrl: \"https://play-well-staging.netlify.com/\",\n  themeColor: Color.Primary,\n  secondaryColor: Color.Secondary,\n  backgroundColor: Color.Background,\n  pathPrefix: \"/\",\n  logo: \"src/assets/images/icon.png\",\n  logoLight: \"src/assets/images/icon.png\",\n  logoDark: \"src/assets/images/icon.png\",\n  social: {\n    twitter: \"PlayWell_TEK\",\n    facebook: \"PlayWellTEK\",\n    instagram: \"playwellteknologies\",\n    fbAppId: \"56639339020281\",\n  },\n};\n","// Core\nimport { keyframes } from \"styled-components\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\nexport const Blink = keyframes`\n  to {\n    visibility: hidden;\n  }\n`;\n\nexport const FadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const PulseStroke = keyframes`\n  0% {\n    stroke-width: .15px;\n  }\n  50% {\n    stroke-width: 1px;\n  }\n  100% {\n    stroke-width: .15px;\n  }\n`;\n\nexport const Grain = keyframes`\n  0%, 100% { transform: scale(1.5) translate(0, 0) }\n  10% { transform: scale(1.5) translate(-5%, -10%) }\n  20% { transform: scale(1.5) translate(-15%, 5%) }\n  30% { transform: scale(1.5) translate(7%, -10%) }\n  40% { transform: scale(1.5) translate(-5%, 10%) }\n  50% { transform: scale(1.5) translate(-15%, 10%) }\n  60% { transform: scale(1.5) translate(15%, 0%) }\n  70% { transform: scale(1.5) translate(0%, 15%) }\n  80% { transform: scale(1.5) translate(3%, 10%) }\n  90% { transform: scale(1.5) translate(-10%, 10%) }\n`;\n\nexport const OverlayFadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: .75;\n  }\n`;\n\nexport const FadeInScaleUpFromTop = keyframes`\n  from {\n    transform: scale(.9);\n    transform-origin: top center;\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    transform-origin: top center;\n    opacity: 1;\n  }\n`;\n\nexport const Disappear = keyframes`\n  from {\n    display: flex;\n  }\n  to {\n    display: none !important;\n  }\n`;\n\nexport const Marquee = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n  to {\n    transform: translateX(-100%);\n  }\n`;\n\nexport const SlideFromRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n`;\n\nexport const SlideUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n`;\n\n\nexport const LoaderDot = keyframes`\n 0% {\n    background: #f7fafc;\n  }\n  50% {\n    background: #cbd5e0;\n  }\n  100% {\n    background: #f7fafc;\n  }\n`;\n","// Base.js:\n// Core measurements throughout the app.\n\n// Begin Interface\n//////////////////////////////////////////////////////////////////////\n\ninterface Base {\n  // Core Base Measurement\n  Size: {\n    Lg: number;\n    Md: number;\n    Sm: number;\n  };\n\n  // Root Element Measurement\n  Rem: {\n    Lg: number;\n    Md: number;\n    Sm: number;\n  };\n\n  // Responsive Breakpoints\n  Media: {\n    Width: {\n      Lg: number;\n      Md: number;\n      Sm: number;\n    };\n    Height: {\n      Lg: number;\n      Md: number;\n      Sm: number;\n    };\n  };\n\n  // Site Grid\n  Grid: {\n    SiteWidth: number;\n    ReadingWidth: number;\n    Nav: {\n      Size: {\n        Lg: number;\n        Md: number;\n        Sm: number;\n      };\n    };\n\n    Footer: {\n      Size: {\n        Lg: number;\n        Md: number;\n        Sm: number;\n      };\n    };\n\n    // Universal padding from the edge of the browser\n    // Read more: https://read.compassofdesign.com/guides-gutters-and-grids-2ce6092fc3de\n    Gutter: {\n      Lg: {\n        Top: number;\n        Bottom: number;\n        Right: number;\n        Left: number;\n      };\n      Md: {\n        Top: number;\n        Bottom: number;\n        Right: number;\n        Left: number;\n      };\n      Sm: {\n        Top: number;\n        Bottom: number;\n        Right: number;\n        Left: number;\n      };\n    };\n\n    Indent: {\n      Lg: {\n        X: number;\n        Y: number;\n      };\n      Md: {\n        X: number;\n        Y: number;\n      };\n      Sm: {\n        X: number;\n        Y: number;\n      };\n    };\n  };\n\n  // Begin Component\n  //////////////////////////////////////////////////////////////////////\n\n  // View Width (vw) Based Measurements\n  ViewWidth: {\n    Padding: {\n      Sm: \"4.5\"; // vw\n      Md: \"4.5\"; // vw\n      Lg: \"1.2\"; // vw\n    };\n  };\n\n  // Buttons\n  Button: {\n    Lg: 35; // px\n    Md: 35; // px\n    Sm: 35; // px\n  };\n\n  // Inputs\n  Input: {\n    Lg: 44; // px\n    Md: 35; // px\n    Sm: 35; // px\n  };\n\n  // Transitions\n  Transition: {\n    String: \"all 0.25s ease\";\n    Duration: 0.25; // seconds\n    Ease: [0.29, 0.77, 0.57, 0.85]; // Cubic Bezier Ease\n    Page: 2000; // milliseconds. Try to not go lower than 350ms or it gets buggy. TODO.\n  };\n\n  // Geometry\n  Geometry: {\n    Radius: 15; // px\n  };\n}\n\nexport const Base = {\n  // Core Base Measurement\n  Size: {\n    Lg: 20,\n    Md: 20,\n    Sm: 20\n  },\n\n  // Root Element Measurement\n  Rem: {\n    Lg: 14, // px\n    Md: 16, // px\n    Sm: 18 // px\n  },\n\n  // Responsive Breakpoints\n  Media: {\n    Width: {\n      Lg: 1280, // px\n      Md: 1024, // px\n      Sm: 676 // px\n    },\n    Height: {\n      Lg: 828, // px\n      Md: 640, // px\n      Sm: 568 // px\n    }\n  },\n\n  // Site Grid\n  Grid: {\n    SiteWidth: 1280, // px\n    ReadingWidth: 1000, // px\n    Nav: {\n      Size: {\n        Lg: 50, // px\n        Md: 50, // px\n        Sm: 50 // px\n      }\n    },\n\n    Footer: {\n      Size: {\n        Lg: 35, // px\n        Md: 35, // px\n        Sm: 35 // px\n      }\n    },\n\n    // Universal padding from the edge of the browser\n    // Read more: https://read.compassofdesign.com/guides-gutters-and-grids-2ce6092fc3de\n    Gutter: {\n      Lg: {\n        Top: 20, // px\n        Bottom: 20, // px\n        Right: 20, // px\n        Left: 20 // px\n      },\n      Md: {\n        Top: 45, // px\n        Bottom: 45, // px\n        Right: 20, // px\n        Left: 20 // px\n      },\n      Sm: {\n        Top: 20, // px\n        Bottom: 20, // px\n        Right: 15, // px\n        Left: 15 // px\n      }\n    },\n\n    Indent: {\n      Lg: {\n        X: 175, // px\n        Y: 20 // px\n      },\n      Md: {\n        X: 0, // px\n        Y: 10 // px\n      },\n      Sm: {\n        X: 0, // px\n        Y: 0 // px\n      }\n    }\n  },\n\n  // View Width (vw) Based Measurements\n  ViewWidth: {\n    Padding: {\n      Sm: \"4.5\", // vw\n      Md: \"4.5\", // vw\n      Lg: \"1.2\" // vw\n    }\n  },\n\n  // Buttons\n  Button: {\n    Lg: 35, // px\n    Md: 35, // px\n    Sm: 35 // px\n  },\n\n  // Inputs\n  Input: {\n    Lg: 44, // px\n    Md: 35, // px\n    Sm: 35 // px\n  },\n\n  // Transitions\n  Transition: {\n    String: \"all 0.25s ease\",\n    Duration: 0.25, // seconds\n    Ease: [0.29, 0.77, 0.57, 0.85], // Cubic Bezier Ease\n    Page: 2000 // milliseconds. Try to not go lower than 350ms or it gets buggy. TODO.\n  },\n\n  // Geometry\n  Geometry: {\n    Radius: 15 // px\n  },\n\n  // Frame\n  FrameSize: 2.5 // rem\n};\n\n// End Component\n//////////////////////////////////////////////////////////////////////\n","// Color.js:\n// This is the sitewide palette.\n\n// Imports\n// _______________________________________________________\n\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// Begin Component\n// _______________________________________________________\n\nexport type LXLT_ColorTheme = {\n  name?: \"default\" | \"white\" | \"goldenrod\" | \"cadetblue\" | \"orangered\" | \"galaxy\";\n  primary: string;\n  secondary: string;\n  background: string;\n  foreground: string;\n  setTheme?: (theme: LXLT_ColorTheme) => void;\n};\n\nexport const Color = {\n  // Color Variables\n  varPrimary: \"var(--clrPrimary)\",\n  varSecondary: \"var(--clrSecondary)\",\n  varBackground: \"var(--clrBackground)\",\n  varForeground: \"var(--clrForeground)\",\n\n  // Core Colors\n  Primary: \"#111b24\",\n  Secondary: \"#5D6376\",\n  Background: \"#ff988c\",\n  Text: \"#111b24\",\n\n  // Grayscale Palette\n  Black: \"#000000\",\n  Nightsky: \"#151313\",\n  Warmsky: \"#34281D\",\n  Gravel: \"#4E4135\",\n  Slate: \"#928070\",\n  Tan: \"#C4AC97\",\n  Gray: \"#DAC9BA\",\n  Blush: \"#F6E7D9\",\n  Cream: \"#FFF6EE\",\n  White: \"#FFFFFF\",\n\n  // Warm Palette\n  Clay: \"#A33609\",\n  Nova: \"#E24809\",\n  Sunlight: \"#E9A200\",\n  Sunset: \"#ED9158\",\n\n  // Cool Palette\n  Galaxy: \"#111b24\",\n  Deepsea: \"#002F9E\",\n  Ocean: \"#269FE2\",\n  Sky: \"#7AC0E6\",\n  Dino: \"#23023B\",\n  Eggplant: \"#520589\",\n  Lilac: \"#874BB4\",\n\n  // Feedback Palette\n  Warning: \"#FC6376\",\n  Success: \"#40DA33\",\n};\n\n/**\n *\n * @name ColorContext_Defaults\n * @description Defaults for our theming context\n *\n */\nexport const ColorContext_Defaults: LXLT_ColorTheme = {\n  primary: Color.Primary,\n  secondary: Color.Secondary,\n  foreground: Color.Text,\n  background: Color.Background,\n  setTheme: () => {},\n};\n\n/**\n *\n * @name useColorContext\n * @description Our hook to update our color context\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\nexport const useColorContext = (): LXLT_ColorTheme => {\n  const [colorTheme, setColorTheme] = React.useState(ColorContext_Defaults);\n\n  const setTheme = React.useCallback(\n    (currentColorTheme: LXLT_ColorTheme): void => {\n      setColorTheme(currentColorTheme);\n    },\n    []\n  );\n\n  return {\n    ...colorTheme,\n    setTheme,\n  };\n};\n\n/**\n *\n * @name ColorContext\n * @description Our context to provide color themes\n * @see https://medium.com/@0n3z3r0n3/react-usecontext-how-to-update-context-from-child-component-8fa2894eee3d\n *\n */\nexport const ColorContext = React.createContext<LXLT_ColorTheme>(\n  ColorContext_Defaults\n);\n\n/**\n *\n * @name Palette\n * @description Global CSS Variables for palette\n *\n */\nexport const Palette = createGlobalStyle`\n  ::-moz-selection { background: ${Color.Primary}; color: ${Color.White} }\n  ::selection { background: ${Color.Primary}; color: ${Color.White} }\n\n  :root {\n    --clrPrimary: ${Color.Primary};\n    --clrSecondary: ${Color.Secondary};\n    --clrBackground: ${Color.Background};\n    --clrForeground: ${Color.Text};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Core\nimport { createGlobalStyle, css } from \"styled-components\";\n\n// Constants\nimport {} from \"../Theme\";\nimport {} from \"../Root\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * @name CssUtils\n * @description CSS Utility functions. Just like SCSS mixins.\n * @returns A plethora of useful CSS.\n *\n */\nexport class CssUtils {\n  static ObjectFit = (position: \"contain\" | \"cover\" = \"cover\") => {\n    return css`\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      object-fit: ${position};\n      width: 100%;\n      height: 100%;\n      object-position: center;\n      max-width: 100%;\n    `;\n  };\n\n  static ForceFullWidth = (\n    spacing: string = \"0\",\n    addGutter: boolean = false\n  ) => {\n    return css`\n      width: calc(100% + (${spacing} * 2));\n      margin-left: calc(${spacing} * -1);\n      margin-right: calc(${spacing} * -1);\n      max-width: 100vw;\n      ${addGutter\n        ? css`\n            padding-left: ${spacing};\n            padding-right: ${spacing};\n          `\n        : null}\n    `;\n  };\n\n  static CreateTheme = (\n    clrPrimary: string,\n    clrSecondary: string,\n    clrBackground: string,\n    clrForeground: string\n  ) => {\n    return css`\n      :root {\n        --clrPrimary: ${clrPrimary};\n        --clrSecondary: ${clrSecondary};\n        --clrBackground: ${clrBackground};\n        --clrForeground: ${clrForeground};\n      }\n    `;\n  };\n\n  static DisableUserSelect = () => {\n    return css`\n      -webkit-touch-callout: none;\n      -webkit-user-select: none;\n      -khtml-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    `;\n  };\n}\n\nexport const LockBodyScroll = createGlobalStyle`\n    body, html {\n      overflow: hidden !important;\n    }\n  `;\n","/* eslint-disable */\n\n// Font.js:\n// This is the sitewide font reference.\n\nimport { createGlobalStyle } from \"styled-components\";\nimport { Base } from \"./Base\";\n\nexport const Font = {\n  Body: `'Neue Haas Grotesk Text Pro', -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n  Code: `\"SFMono-Regular\",Consolas,\"Liberation Mono\",Menlo,Courier,monospace`,\n  Header: `-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n  // Header: `\"Cera Pro\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n  // Body: `\"Brown\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n  // Code: `\"SFMono-Regular\",Consolas,\"Liberation Mono\",Menlo,Courier,monospace`,\n  Size: {\n    Sm: \"1rem\",\n    Md: \"1rem\",\n    Lg: \"1rem\",\n    ViewWidth: {\n      Sm: \"6.8vw\",\n      Md: \"5.2vw\",\n      Lg: \"1.2vw\",\n    },\n    ViewHeight: {\n      Sm: \"6.8vh\",\n      Md: \"5.2vh\",\n      Lg: \"2vh\",\n    },\n  },\n  Icon: {\n    Size: {\n      Sm: \"8.5vw\",\n      Md: \"8.5vw\",\n      Lg: \"1.7vw\",\n    },\n  },\n};\n\n// Global Type Styles\nexport const Typography = createGlobalStyle`\n\n  /* Base Text Styles */\n  body {\n    line-height: 1;\n    font-size: 1rem;\n    font-family: ${Font.Body};\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-rendering: geometricPrecision;\n    -webkit-font-feature-settings: \"pnum\";\n    font-feature-settings: \"pnum\";\n    font-variant-numeric: proportional-nums;\n  }\n\n  @font-face {\n    font-family: \"dharma\";\n    src: url(\"/fonts/dharma/dharma_regular.eot\"); /* IE9*/\n    src: url(\"/fonts/dharma/dharma_regular.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n    url(\"/fonts/dharma/dharma_regular.woff2\") format(\"woff2\"), /* chrome firefox */\n    url(\"/fonts/dharma/dharma_regular.woff\") format(\"woff\"), /* chrome firefox */\n    url(\"/fonts/dharma/dharma_regular.ttf\") format(\"truetype\"), /* chrome firefox opera Safari, Android, iOS 4.2+*/\n    url(\"/fonts/dharma/dharma_regular.svg#DharmaGothicCW01-Regular\") format(\"svg\"); /* iOS 4.1- */\n  }\n\n  /* Paragraph Styles */\n  p {\n    font-family: ${Font.Body};\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1.4;\n    letter-spacing: -0.2px;\n    padding-bottom: calc(var(--Size) / 3.5);\n\n    &.lead {\n      font-size: 1.4rem;\n      @media (max-width: ${Base.Media.Width.Md + \"px\"}) {\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  .p-sm {\n    font-family: ${Font.Body};\n    line-height: 1.2;\n    font-size: 0.9rem;\n    letter-spacing: -0.2px;\n  }\n\n  .p-lg {\n    font-family: ${Font.Body};\n    line-height: 1.4;\n    font-size: 1.2rem;\n    letter-spacing: -0.2px;\n  }\n\n  /* Header Styles */\n  h1, h2, h3, h4, h5, h6, .headline {\n    font-family: ${Font.Header};\n    line-height: 1.1;\n    padding: 0;\n    margin: 0;\n    letter-spacing: -0.2px;\n  }\n\n  h1, .h1 {\n    font-size: 4rem;\n    @media (max-width: ${Base.Media.Width.Md + \"px\"}) {\n      font-size: 2rem;\n    }\n  }\n  h2, .h2 {\n    font-size: 3rem;\n    @media (max-width: ${Base.Media.Width.Md + \"px\"}) {\n      font-size: 2rem;\n    }\n  }\n  h3, .h3 {\n    font-size: 2.5rem;\n    @media (max-width: ${Base.Media.Width.Md + \"px\"}) {\n      font-size: 2rem;\n    }\n  }\n  h4, .h4 {\n    font-size: 2rem;\n  }\n  h5, .h5 {\n    font-size: 1.75rem;\n    @media (max-width: ${Base.Media.Width.Md + \"px\"}) {\n      font-size: 1rem;\n    }\n  }\n  h6, .h6 {\n    font-size: 1.5rem;\n    @media (max-width: ${Base.Media.Width.Md + \"px\"}) {\n      font-size: 1.1rem;\n    }\n  }\n\n  .headline {\n    font-size: 7.25rem;\n    @media (max-width: ${Base.Media.Width.Md + \"px\"}) {\n      font-size: 4rem;\n    }\n    @media (max-width: ${Base.Media.Width.Sm + \"px\"}) {\n      font-size: 3.5rem;\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6, p, .heading-padding { padding-bottom: calc(var(--Size) / 3.5); }\n`;\n","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-int\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/**\n *\n * index.js\n * @author Peter Laxalt\n * @description The website home page.\n *\n */\n\n// Core\nimport { NextPage } from \"next\";\nimport React from \"react\";\n\n// Components\nimport { DharmaCanvasPage } from \"./projects/dharma\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LMNTS_LocationsFrontPage = {};\n\nexport const HomePageClassName = \"route__home-page\";\n\n/**\n *\n * pages/index.tsx\n * @author Peter Laxalt\n *\n */\nconst HomePage: NextPage<LMNTS_LocationsFrontPage> = () => (\n  <div className={`${HomePageClassName}`}>\n    <DharmaCanvasPage />\n  </div>\n);\n\nexport default HomePage;\n","// Core\nimport React, { Component } from \"react\";\n\n// Utils\nimport dynamic from \"next/dynamic\";\n\n// Theme\n// import { Theme } from \"../../constants/Theme\";\n\n// Types\nimport { LXLT_GLSL_Canvas } from \"../../sketches/p5/glsl\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { InteractiveFrameHeader } from \"../../components/_interactive/InteractiveFrameHeader\";\nimport { ColorContext, LXLT_ColorTheme } from \"../../constants/styles/Color\";\nimport { NextPage } from \"next\";\nimport { FadeIn } from \"../../constants/styles/Animation\";\n\n// Begin Component\n// __________________________________________________________________________\n\ntype LXLT_P5Wrapper = any;\n\ntype LXLT_P5Page = {\n  colorThemeContext: LXLT_ColorTheme;\n};\n\ntype LXLT_P5Page_State = {\n  domLoaded: boolean;\n  windowWidth: number;\n  windowHeight: number;\n};\n\nconst P5Wrapper: LXLT_P5Wrapper = dynamic(import(\"react-p5-wrapper\"), {\n  loading: () => <></>,\n  ssr: false,\n});\n\nclass P5PageWithContext extends Component<LXLT_P5Page, LXLT_P5Page_State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      domLoaded: false,\n      windowWidth: 0,\n      windowHeight: 0,\n    };\n  }\n\n  componentDidMount() {\n    if (typeof window) {\n      this.setState({\n        windowWidth: window.innerWidth - 80,\n        windowHeight: window.innerHeight - 80,\n        domLoaded: true,\n      });\n    }\n  }\n\n  renderP5 = (filename: string) => {\n    const sketch: LXLT_GLSL_Canvas = require(`../../sketches/p5/${filename}`).default(\n      this.state.windowWidth,\n      this.state.windowHeight,\n      1,\n      this.props.colorThemeContext\n    );\n\n    return <P5Wrapper sketch={sketch} />;\n  };\n\n  render() {\n    const DharmaGlobalStyles = createGlobalStyle`\n      body, html {\n        overflow: hidden;\n      }\n\n      .dharma-container {\n        width: 100vw;\n        height: 100vh;\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        canvas {\n          animation: ${FadeIn} 1s ease 1;\n          animation-fill-mode: forwards;\n          animation-iteration-count: 1;\n        }\n\n        #p5_loading {\n          display: none !important;\n        }\n      }\n    `;\n\n    return (\n      <>\n        <DharmaGlobalStyles />\n        <InteractiveFrameHeader />\n        {this.state.domLoaded &&\n        this.state.windowHeight > 10 &&\n        this.state.windowWidth > 10 ? (\n          <div className=\"dharma-container\">{this.renderP5(\"dharma\")}</div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport const DharmaCanvasPage: NextPage = () => {\n  const themeContext = React.useContext(ColorContext);\n\n  return <P5PageWithContext colorThemeContext={themeContext} />;\n};\n\nexport default DharmaCanvasPage;\n","var map = {\n\t\"./d1\": \"./sketches/p5/d1.tsx\",\n\t\"./d1.tsx\": \"./sketches/p5/d1.tsx\",\n\t\"./d2\": \"./sketches/p5/d2.tsx\",\n\t\"./d2.tsx\": \"./sketches/p5/d2.tsx\",\n\t\"./d8\": \"./sketches/p5/d8.js\",\n\t\"./d8.js\": \"./sketches/p5/d8.js\",\n\t\"./dharma\": \"./sketches/p5/dharma.tsx\",\n\t\"./dharma.tsx\": \"./sketches/p5/dharma.tsx\",\n\t\"./dharma_v0\": \"./sketches/p5/dharma_v0.tsx\",\n\t\"./dharma_v0.tsx\": \"./sketches/p5/dharma_v0.tsx\",\n\t\"./glsl\": \"./sketches/p5/glsl.tsx\",\n\t\"./glsl.tsx\": \"./sketches/p5/glsl.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./sketches/p5 sync recursive ^\\\\.\\\\/.*$\";","/**\n *\n * Sin Wave Circles\n * @author Peter Laxalt\n * @description Simple Sin Wave circles in p5.js\n *\n */\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport default (W: any, H: any) => (p: any) => {\n  let x = 0;\n  let scale = 50;\n  let initialScale = 0;\n\n  let color = {\n    primary: \"rgba(208, 112, 166, .3)\",\n    primaryAlpha: \"rgba(208, 112, 166, 1)\",\n    secondary: \"#FFF4F7\",\n    bg: \"#1C170C\",\n    white: \"#ffffff\"\n  };\n\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H);\n    p.angleMode(p.RADIANS);\n    p.background(\"yellow\")\n  };\n\n  p.draw = () => {\n    scale += 1;\n    initialScale = 400;\n    x = x * 1.1 + 2;\n\n    p.noFill();\n    p.stroke(color.primary);\n\n    if (p.mouseX > 0 || p.mouseY > 0) {\n      p.ellipse(\n        p.mouseX,\n        p.mouseY,\n        Math.sin(scale) * (Math.sin(scale) * initialScale),\n        Math.sin(scale) * (Math.sin(scale) * initialScale)\n      );\n      p.smooth();\n    } else {\n      p.ellipse(\n        p.windowWidth / 2,\n        p.windowHeight / 2,\n        Math.sin(scale) * (Math.sin(scale) * initialScale),\n        Math.sin(scale) * (Math.sin(scale) * initialScale)\n      );\n      p.smooth();\n    }\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n    p.background(\"yellow\")\n  };\n};\n","/**\n *\n * Sin Wave Cone\n * @author Peter Laxalt\n * @description Simple Sin Wave Cone in p5.js\n *\n */\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport default (W: any, H: any) => (p: any) => {\n  let x = 0;\n  // @ts-ignore\n  let scale = 0;\n\n  let color = {\n    primary: \"black\",\n    primaryAlpha: \"black\",\n    secondary: \"#000000\",\n    bg: \"cyan\",\n    white: \"#ffffff\"\n  };\n\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.angleMode(p.RADIANS);\n  };\n\n  p.draw = () => {\n    scale += 1;\n    x = x * 1.1 + 2;\n\n    p.noFill();\n    p.stroke(color.primary);\n    p.background(color.bg);\n\n    for (let i = 0; i < 20; i++) {\n      p.cone(300, 400);\n      p.stroke(color.primaryAlpha);\n      p.strokeWeight(1);\n      p.translate(\n        // @ts-ignore\n        parseInt(Math.sin(p.mouseX * 0.001) * 50),\n        // @ts-ignore\n        parseInt(Math.sin(p.mouseY * 0.001) * 50),\n        // @ts-ignore\n        parseInt(Math.sin(p.mouseX * 0.001) * 50)\n      );\n      p.smooth();\n      p.rotateX(p.frameCount * 0.01);\n      p.rotateY(p.frameCount * 0.01);\n    }\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n    p.background(\"yellow\");\n  };\n};\n","let canvas;\nlet ctx;\nlet field;\nlet w, h;\nlet size;\nlet columns;\nlet rows;\nlet noiseZ;\n\nfunction setup() {\n  size = 20;\n  noiseZ = 0;\n  canvas = document.querySelector(\"#canvas\");\n  ctx = canvas.getContext(\"2d\");\n  reset();\n  window.addEventListener(\"resize\", reset);\n}\n\nfunction initField() {\n  field = new Array(columns);\n  for (let x = 0; x < columns; x++) {\n    field[x] = new Array(columns);\n    for (let y = 0; y < rows; y++) {\n      field[x][y] = [0, 0];\n    }\n  }\n}\n\nfunction calculateField() {\n  for (let x = 0; x < columns; x++) {\n    for (let y = 0; y < rows; y++) {\n      let angle = noise.simplex3(x / 80, y / 80, noiseZ) * Math.PI * 2;\n      let length = noise.simplex3(x / 100 + 40000, y / 100 + 40000, noiseZ);\n      field[x][y][0] = angle;\n      field[x][y][1] = length;\n    }\n  }\n}\n\nfunction reset() {\n  w = canvas.width = window.innerWidth;\n  h = canvas.height = window.innerHeight;\n  noise.seed(Math.random());\n  columns = Math.floor(w / size) + 1;\n  rows = Math.floor(h / size) + 1;\n  initField();\n}\n\nfunction draw() {\n  requestAnimationFrame(draw);\n  calculateField();\n  noiseZ += 0.004;\n  clear();\n  drawField();\n}\n\nfunction clear() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, w, h);\n}\n\nfunction drawField() {\n  for (let x = 0; x < columns; x++) {\n    for (let y = 0; y < rows; y++) {\n      let angle = field[x][y][0];\n      let length = field[x][y][1];\n      ctx.save();\n      ctx.translate(x * size, y * size);\n      ctx.rotate(angle);\n      ctx.strokeStyle = \"white\";\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, size * length);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n}\n\nsetup();\ndraw();\n","/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5, { Font } from \"p5\";\nimport { LXLT_ColorTheme } from \"../../constants/styles/Color\";\n\n// Begin Component\n// __________________________________________________________________________\n\nexport type LXLT_DharmaCanvas = {\n  W: number;\n  H: number;\n  ID: number;\n  BG: LXLT_ColorTheme;\n};\n\nexport type LXLT_DharmaCanvasDisplay = (\n  W: number,\n  H: number,\n  ID: number,\n  BG: LXLT_ColorTheme\n) => (p: p5) => void;\n\ntype LXLT_DharmaCanvasChar = {\n  letter: string;\n  count: number;\n  idx: number;\n\n  copies: number;\n  copiesLastVisible: number;\n  copiesAreVisible: boolean;\n\n  copiesAreIncrementing: boolean;\n  copiesAreDecrementing: boolean;\n\n  countIsIncrementing: boolean;\n  countIsDecrementing: boolean;\n};\n\nconst DharmaCanvasDisplay: LXLT_DharmaCanvasDisplay = (\n  W,\n  H,\n  ID,\n  DharmaTheme\n) => (p: p5) => {\n  // _________________________________________________\n  // Config\n\n  // ____________________________\n  // Fonts\n  let dharmaFont: Font;\n\n  // ____________________________\n  // Typography\n  let text = \"LAXALT\";\n\n  let splitCharacterArray = text.split(\"\");\n  let characters: LXLT_DharmaCanvasChar[] = splitCharacterArray.map(\n    (character: string, idx: number) => {\n      return {\n        letter: character,\n        count: 1,\n        idx: idx,\n\n        copies: 5,\n        copiesLastVisible: 0,\n        copiesAreVisible: false,\n\n        countIsIncrementing: true,\n        countIsDecrementing: false,\n\n        copiesAreIncrementing: true,\n        copiesAreDecrementing: false,\n      };\n    }\n  );\n\n  let characterCount: number = splitCharacterArray.length;\n  let characterWidth: number = W / characterCount;\n  let characterSize: number = H * 1.25;\n\n  console.log(characterSize, \"characterSize\");\n\n  // ____________________________\n  // Counts\n  // let renderCount: number = 0;\n  let previousCountUpdateTime: number = 0;\n  let previousCopyUpdateTime: number = 0;\n\n  // ____________________________\n  // Strokes\n  let strokeWidth: number = 4;\n  let strokeOffset: number = strokeWidth * 1.5;\n\n  // ____________________________\n  // Limits\n  let maxCount = 3;\n  let minCount = 1;\n\n  let maxCopies = 12;\n  let minCopies = 1;\n\n  let frameRate = 10;\n\n  // ____________________________\n  // Translation\n  // let previousVerticalTranslation: number = H / 2.25;\n\n  let verticalTranslationWhitespaceCompensation: number = 2.25;\n  const previousHorizontalTranslation = (idx: number) =>\n    -60 + (characterWidth * idx + characterWidth / 1.5 + strokeOffset);\n\n  // _________________________________________________\n  // Preload\n  p.preload = () => {\n    dharmaFont = p.loadFont(`/fonts/dharma/dharma_regular.ttf`);\n  };\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H);\n\n    p.frameRate(frameRate);\n  };\n\n  // _________________________________________________\n  // Update Character\n  const updateCharacter = (char: LXLT_DharmaCanvasChar, idx: number) => {\n    if (char.count < maxCount && char.countIsIncrementing) {\n      characters[idx] = {\n        ...char,\n        count: char.count + 1,\n      };\n\n      previousCountUpdateTime = p.millis();\n\n      return;\n    } else if (char.count === maxCount) {\n      characters[idx] = {\n        ...char,\n        count: char.count - 1,\n        countIsIncrementing: false,\n        countIsDecrementing: true,\n      };\n\n      previousCountUpdateTime = p.millis();\n\n      return;\n    } else if (char.count > minCount && char.countIsDecrementing) {\n      characters[idx] = {\n        ...char,\n        count: char.count - 1,\n        countIsDecrementing: true,\n      };\n\n      previousCountUpdateTime = p.millis();\n\n      return;\n    } else if (char.count === minCount && char.countIsDecrementing) {\n      characters[idx] = {\n        ...char,\n        count: char.count + 1,\n        countIsIncrementing: true,\n        countIsDecrementing: false,\n      };\n\n      previousCountUpdateTime = p.millis();\n\n      return;\n    }\n\n    return;\n  };\n\n  // _________________________________________________\n  // Update Copies\n  const updateCopies = (char: LXLT_DharmaCanvasChar, idx: number) => {\n    if (char.copies < maxCopies && char.copiesAreIncrementing) {\n      characters[idx] = {\n        ...char,\n        copies: char.copies + 1,\n      };\n\n      previousCopyUpdateTime = p.millis();\n\n      return;\n    } else if (char.copies === maxCopies) {\n      characters[idx] = {\n        ...char,\n        copies: char.copies - 1,\n        copiesAreIncrementing: false,\n        copiesAreDecrementing: true,\n      };\n\n      previousCopyUpdateTime = p.millis();\n\n      return;\n    } else if (char.copies > minCopies && char.copiesAreDecrementing) {\n      characters[idx] = {\n        ...char,\n        copies: char.copies - 1,\n        copiesAreDecrementing: true,\n      };\n\n      previousCopyUpdateTime = p.millis();\n\n      return;\n    } else if (char.copies === minCopies && char.copiesAreDecrementing) {\n      characters[idx] = {\n        ...char,\n        copies: char.copies + 1,\n        copiesAreIncrementing: true,\n        copiesAreDecrementing: false,\n      };\n\n      previousCopyUpdateTime = p.millis();\n\n      return;\n    }\n\n    return;\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    p.background(DharmaTheme.background);\n\n    p.textFont(dharmaFont);\n\n    p.textSize(characterSize);\n\n    p.textAlign(p.CENTER, p.CENTER);\n\n    p.fill(`${DharmaTheme.foreground}`);\n    p.strokeWeight(strokeWidth);\n    p.stroke(DharmaTheme.background);\n\n    if (H && W) {\n      // _________________________________________\n      // Loop through our copies\n      characters.map((char: LXLT_DharmaCanvasChar, idx: number) => {\n        p.scale(1, 1);\n\n        let randomCharPick = Math.random() <= 0.5;\n\n        if (randomCharPick) {\n          updateCopies(char, idx);\n        }\n\n        if (randomCharPick && p.millis() - previousCountUpdateTime > 3000) {\n          updateCharacter(char, idx);\n        }\n\n        let countArray: number[] = Array.from(Array(char.count).keys());\n\n        countArray = countArray.map((countNumber: number) => {\n          return countNumber + 1;\n        });\n\n        // _________________________________________\n        // Duplicate positions\n        countArray.map((countNumber: number, idxx: number) => {\n          let verticalScale = 1 / (char.count * 0.95);\n\n          let verticalSkewDivisible: number = 2.75;\n          let characterSkewDivisible: number = 1.36;\n\n          let duplicateVerticalPosition: number =\n            char.count == 1\n              ? H / verticalTranslationWhitespaceCompensation\n              : characterSize / verticalSkewDivisible +\n                (characterSize / characterSkewDivisible) * idxx;\n\n          // _________________________________________\n          // Make copies\n          let copiesArray: number[] = Array.from(Array(char.copies).keys());\n          // let randomCopyPick = Math.random() <= 0.5;\n\n          copiesArray = copiesArray.map((copyNumber: number) => {\n            return copyNumber + 1;\n          });\n\n          // let randomCopyPick = Math.random() <= 0.5;\n          // let copyTimer = p.millis() - previousCopiesVisibleTime > 2000;\n          previousCopyUpdateTime;\n\n          // let isFirstCount = true;\n\n          copiesArray.map((copyNumber: number, idxxx: number) => {\n            // let centerCoordsX = W / 2;\n            // let centerCoordsY = H / 2;\n\n            // let horizontalTranslate =\n            //   copyNumber !== 1\n            //     ? (previousHorizontalTranslation(idx) +\n            //         (strokeOffset / (p.mouseX / 100)) * copyNumber)\n            //     : previousHorizontalTranslation(idx) +\n            //       strokeOffset * copyNumber;\n\n            // let verticalTranslate =\n            //   copyNumber !== 1\n            //     ? (duplicateVerticalPosition - (strokeOffset / (p.mouseX / 100)) * copyNumber)\n            //     : duplicateVerticalPosition - strokeOffset * copyNumber;\n\n            let horizontalTranslate =\n              previousHorizontalTranslation(idx) + strokeOffset * copyNumber;\n\n            let verticalTranslate =\n              duplicateVerticalPosition - strokeOffset * copyNumber;\n\n            p.push();\n            p.scale(1, verticalScale);\n            p.text(char.letter, horizontalTranslate, verticalTranslate);\n            p.pop();\n          });\n        });\n      });\n    }\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default DharmaCanvasDisplay;\n","/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5, { Font } from \"p5\";\nimport { Theme } from \"../../constants/Theme\";\n\n// Begin Component\n// __________________________________________________________________________\n\nexport type LXLT_DharmaCanvas = {\n  W: number;\n  H: number;\n  ID: number;\n  BG: string;\n};\n\nexport type LXLT_DharmaCanvasDisplay = (\n  W: number,\n  H: number,\n  ID: number,\n  BG: string\n) => (p: p5) => void;\n\ntype LXLT_DharmaCanvasChar = {\n  letter: string;\n  count: number;\n  idx: number;\n  copies: number;\n};\n\nconst DharmaCanvasDisplay: LXLT_DharmaCanvasDisplay = (W, H, ID, BG) => (\n  p: p5\n) => {\n  // _________________________________________________\n  // Config\n\n  // ____________________________\n  // Fonts\n  let dharmaFont: Font;\n\n  // ____________________________\n  // Typography\n  let text = \"LAXALT\";\n\n  let splitCharacterArray = text.split(\"\");\n  let characters: LXLT_DharmaCanvasChar[] = splitCharacterArray.map(\n    (character: string, idx: number) => {\n      return {\n        letter: character,\n        count: 1,\n        idx: idx,\n        copies: 1,\n      };\n    }\n  );\n\n  let characterCount: number = splitCharacterArray.length;\n  let characterWidth: number = W / characterCount;\n\n  // ____________________________\n  // Counts\n  let renderCount: number = 0;\n\n  // ____________________________\n  // Strokes\n  let strokeWidth: number = 2;\n  let strokeOffset: number = strokeWidth * 3;\n\n  // ____________________________\n  // Incrementing\n  // let maxCopies = 30;\n  // let minCopies = 1;\n\n  let isIncrementing: boolean = true;\n  isIncrementing;\n\n  // ____________________________\n  // Translation\n  let previousVerticalTranslation: number = H / 2.25;\n  const previousHorizontalTranslation = (idx: number) =>\n    characterWidth * idx + characterWidth / 2 + strokeOffset * renderCount;\n\n  // let characterVerticalTranslation = 0.963; // Multiplied by the viewBoxHeight\n  // let characterVerticalTranslation: number = 0.993; // Multiplied by the viewBoxHeight\n  // let characterHorizontalScale: number = 0.75; // Multiplied by the characterWidth\n  // let characterVerticalScale: number = 1.38; // Multiplied by the characterWidth\n\n  // _________________________________________________\n  // Preload\n  p.preload = () => {\n    dharmaFont = p.loadFont(`/fonts/dharma/dharma_regular.ttf`);\n  };\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H);\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    // p.background(BG);\n\n    p.textFont(dharmaFont);\n\n    p.textLeading(0);\n    p.textSize(H * 1.25);\n\n    p.textAlign(p.CENTER, p.CENTER);\n\n    p.fill(`${Theme.Color.Galaxy}`);\n    p.strokeWeight(strokeWidth);\n    p.stroke(BG);\n\n    p.mouseIsPressed\n      ? (renderCount = renderCount + 1)\n      : (renderCount = renderCount);\n\n    if (H && W) {\n      characters.map((char: LXLT_DharmaCanvasChar, idx: number) => {\n        let countArray: number[] = Array.from(Array(char.count).keys());\n\n        p.scale(1, .5);\n\n        if (p.mouseIsPressed) {\n          return countArray.map((duplicate: number, idxx: number) => {\n            previousVerticalTranslation =\n              H / 2.25 + strokeOffset * renderCount * -1;\n\n            p.text(\n              char.letter,\n              previousHorizontalTranslation(idx),\n              previousVerticalTranslation\n            );\n          });\n        } else {\n          return countArray.map((duplicate: number, idxx: number) => {\n            p.text(\n              char.letter,\n              previousHorizontalTranslation(idx),\n              previousVerticalTranslation\n            );\n          });\n        }\n      });\n    }\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default DharmaCanvasDisplay;\n","/**\n *\n * Shader fun\n * @author Peter Laxalt\n *\n */\n\nimport p5, { Shader } from \"p5\";\n\n// Begin Component\n// __________________________________________________________________________\n\nexport type LXLT_GLSL_Canvas = (\n  W: number,\n  H: number,\n  ID: number,\n  BG: string\n) => (p: p5) => void;\n\nconst GLSL_Canvas: LXLT_GLSL_Canvas = (W, H, ID, BG) => (p: p5) => {\n  // _________________________________________________\n  // Config\n  let theShader: Shader;\n\n  // _________________________________________________\n  // Preload\n  p.preload = () => {\n    theShader = p.loadShader(\n      `/shaders/ex_${ID}/shader.vert`,\n      `/shaders/ex_${ID}/shader.frag`\n    );\n  };\n\n  // _________________________________________________\n  // Setup\n  p.setup = () => {\n    // Our Canvas\n    p.createCanvas(W, H, p.WEBGL);\n    p.noStroke();\n  };\n\n  // _________________________________________________\n  // Draw\n  p.draw = () => {\n    // shader() sets the active shader with our shader\n    p.shader(theShader);\n\n    theShader.setUniform(\"u_resolution\", [W, H]);\n    theShader.setUniform(\"u_time\", p.millis() / 1000.0);\n    theShader.setUniform(\"u_mouse\", [p.mouseX, p.map(p.mouseY, 0, H, H, 0)]);\n\n    // rect gives us some geometry on the screen\n    p.rect(0, 0, W, H);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(W, H);\n  };\n};\n\nexport default GLSL_Canvas;\n","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"next/dynamic\");","module.exports = require(\"react\");","module.exports = require(\"react-p5-wrapper\");","module.exports = require(\"styled-components\");"],"mappingsrGA;AACA;AACA;AACA;AAMA;AACA;AAsCA;AACA;AACA;AACA;;;;;AAKA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAdA;AAiBA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAbA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAGA;AACA;AAlNA;AACA;AAmNA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAfA;AAkBA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAHA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAFA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAGA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAIA;;;;;;;;;;;;AC3ZA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AAUA;AACA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAGA;AACA;AACA;;;;;;;;AAMA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;AC3KA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;AAMA;AAEA;;;;;;;AAMA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;;;;;;;AAMA;AAEA;;;;;;;AAMA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AAVA;AAgBA;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AA5DA;AAgEA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;AAIA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;AA9HA;AAoIA;;;;;;;;;;;;ACzNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AAgBA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAbA;AApBA;AA0CA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AASA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AAFA;AAlHA;AAuHA;AACA;AAEA;AACA;AAnIA;AAuIA;;;;;;;;;;;;AClKA;AAAA;AAAA;AAAA;;;;;;;;;AAUA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAfA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAMA;AASA;AAYA;AAaA;AASA;AAaA;AASA;AASA;AAWA;AAYA;;;;;;;;;;;;AC7GA;AAAA;AAAA;AACA;AAEA;AACA;AAkIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AADA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AADA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AALA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AALA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AALA;AAbA;AAqBA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AAAA;AACA;AACA;AAHA;AATA;AA1CA;AA0DA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AADA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA9HA;AAiIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvQA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AA6CA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;AAOA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AAFA;AAIA;AAEA;;;;;;;;AAOA;AAIA;;;;;;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AARA;AAaA;;;;;;;;;;;;;;;;;;;;;ACrIA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;;;;;;;;AAOA;AACA;AADA;AAEA;AAYA;AACA;AAfA;AAoBA;AAYA;AACA;AAjCA;AAwCA;AAQA;AACA;AAjDA;AAmDA;AAQA;AACA;AAEA;;;;AAAA;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AATA;AAeA;AACA;AACA;AACA;AACA;AAHA;AADA;AAtBA;AACA;AA+BA;AACA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;AASA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;AAMA;;;;;;AAMA;;;;;;;;;AASA;;;;;;AAMA;;;;;;;AAOA;;;AAGA;;;;;;AAzGA;;;;;;;;;;;ACxCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjBA;;;;;;;AAQA;AAEA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAaA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAqBA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA3BA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAYA;AACA;;;;;;;;;;;;;;AAcA;;;;;;;;;AAdA;AAyBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAtEA;AACA;AAuEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjCA;AAAA;;;;;;;AAQA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9DA;;;;;;;AAQA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;;;;;;AAUA;AACA;AAgCA;AAMA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAbA;AAeA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AADA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAEA;AAFA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAEA;AAFA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5UA;;;;;;AAQA;AAGA;AACA;AAsBA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAGA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/JA;AAAA;;;;;;AASA;AACA;AASA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAIA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC5DA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}